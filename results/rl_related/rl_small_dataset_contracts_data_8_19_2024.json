{
    "contract_svar": {
        "HoloToken.solHoloToken": [
            "owner",
            "totalSupply",
            "balances",
            "allowed",
            "mintingFinished",
            "destroyer",
            "minter"
        ],
        "HoloToken_test_01.solHoloToken_test_01": [
            "owner",
            "totalSupply",
            "balances",
            "mintingFinished",
            "destroyer",
            "minter"
        ],
        "HoloToken_test_02.solHoloToken_test_02": [
            "mintingFinished",
            "totalSupply",
            "owner",
            "balances",
            "destroyer",
            "minter"
        ],
        "Crowdsale.solCrowdsale": [
            "goal",
            "phase",
            "raised",
            "end",
            "owner",
            "investments"
        ],
        "0x2f47f03b03946b1fe11d841744217db881d4f531.solBulkSender": [
            "whitelist",
            "_owner"
        ],
        "0x89f9749ce943281b8c65fec7f15e126f8cf4edb1.solDepositGame": [
            "_balances",
            "FirstTimeBonus",
            "admin",
            "TotalAmount",
            "randomTN"
        ],
        "0xa143fd004b3c26f8faedeb9224ec03585e63d041.solDharmaSpreadRegistryPrototypeStaging": [
            "_daiSpreadPerBlock",
            "_usdcSpreadPerBlock",
            "_owner",
            "_newPotentialOwner"
        ],
        "0xce4763c7fa2e1238a398c0b07a9abf6472531d51.solBHT": [
            "name",
            "symbol",
            "decimals",
            "totalSupply",
            "lockAll",
            "owner",
            "newOwner",
            "frozens",
            "balanceOf"
        ],
        "0xd75b02dc969182fd9a8cbc4f12f3502c61802747.solEtherBoxLevels": [
            "owner",
            "newOwner",
            "mlm",
            "pack",
            "users"
        ],
        "0x60accbD43E9aAd281c1CDe56D3F5ed697B948b22.solsproof": [
            "owner",
            "sproofAccounts",
            "costToLockHash"
        ],
        "0xed39480b5bcd7c123f374b3b37366f60bc5d50e1.solTimelockGovernance": [
            "period",
            "governance",
            "newGovernance",
            "newGovernanceUpdatable",
            "target",
            "newTargetGovernance",
            "newTargetGovernanceUpdatable"
        ],
        "0xc0ea83113038987d974fe667831a36e442e661e7.solLibfxToken": [
            "balances",
            "allowance",
            "name",
            "symbol",
            "decimals",
            "totalSupply"
        ],
        "0xad638296f8348a9d72d5fbecd7b7d941d2889083.solEternalStorage": [
            "currentOwner",
            "uIntStorage",
            "stringStorage",
            "addressStorage",
            "bytesStorage",
            "boolStorage",
            "intStorage"
        ],
        "0x8382ADf670cb280F2f318bC2446be3860758aEF4.solGramChain": [
            "_containsMap",
            "_owner"
        ],
        "0x3422ac57f4ca097806fa234e44ec0a781b78bbdb.solYFVReferral": [
            "referrers",
            "referredCount",
            "owner",
            "nextOwner",
            "isAdmin"
        ],
        "0x131f983da6fabf20869f5ace3516a23f28b46204.solBlacklist": [
            "_blacklisted",
            "_owner"
        ],
        "0x46d52bace05457929e1cd84c9efcee0d2156555b.solSimpleWriteAccessController": [
            "owner",
            "checkEnabled",
            "accessList",
            "pendingOwner"
        ],
        "0x7C6664bd7957eD63f8fbF635101A186741Ef14D4.solAdministratorMinter": [
            "etherLegendsToken",
            "_owner"
        ],
        "0x4b205ad9e4a2669cf9428c1a5f72ca17976f0167.solMonetaGiftBox": [
            "owner",
            "newOwner",
            "mlm",
            "pack",
            "users"
        ],
        "0xbb86cd4c05c321015078433863fd203a61560fcb.solGruppa_Istoricheskiy_Roman": [
            "contributions",
            "totalContributors",
            "goal",
            "raisedAmount",
            "totalSentToGruppa",
            "Owner",
            "recepientAddress",
            "uje_sobrali",
            "paid",
            "refund",
            "addresses"
        ],
        "HoloToken_test_03.solHoloToken_test_03": [
            "owner",
            "totalSupply",
            "balances",
            "mintingFinished",
            "destroyer",
            "minter"
        ],
        "Crowdsale_rlf.solCrowdsale": [
            "raised",
            "closeTime",
            "goal",
            "status",
            "owner",
            "deposits"
        ],
        "Crowdsale_01.solCrowdsale": [
            "goal",
            "raised",
            "end",
            "owner",
            "investments",
            "phase"
        ],
        "0xdb25ff2868cbc48856e44a2ae8e2f2b62f1f3b84.solBulkSender": [
            "whitelist",
            "_owner"
        ],
        "0xe4ea2d60783fc54c3595bda39ac1ab6556723d38.solBHE": [
            "name",
            "symbol",
            "decimals",
            "totalSupply",
            "lockAll",
            "owner",
            "newOwner",
            "frozens",
            "balanceOf"
        ],
        "0x87c48b167bb02cc88487ce6dc12f5e56cd49676a.solTimelockGovernance": [
            "period",
            "governance",
            "newGovernance",
            "newGovernanceUpdatable",
            "target",
            "newTargetGovernance",
            "newTargetGovernanceUpdatable"
        ],
        "0x316Fe7d9610F56Aff59B8Db695dF625581Eb3B4A.solCYT": [
            "_totalSupply",
            "owner",
            "balances",
            "allowed"
        ],
        "0x00111feeb7ee43e262ff38aaf912b72ea668edc3.solRipgaleToken": [
            "balances",
            "allowance",
            "name",
            "symbol",
            "decimals",
            "totalSupply"
        ],
        "0x29d9ede1d2fac6fe3b19d6005a81540d094665a5.solBlacklist": [
            "_blacklisted",
            "_owner"
        ],
        "0x4e8c0598ef8c3d44967bd4fa101c54939ab97d53.solBlacklist": [
            "_blacklisted",
            "_owner"
        ],
        "0x283d2d5fa7ec80f00bfeeb370e1b8cbf7caba614.solYAMToken": [
            "balances",
            "allowance",
            "name",
            "symbol",
            "decimals",
            "totalSupply"
        ]
    },
    "svar_by_type": {
        "address": [
            "owner",
            "destroyer",
            "minter",
            "_owner",
            "admin",
            "_newPotentialOwner",
            "newOwner",
            "governance",
            "newGovernance",
            "target",
            "newTargetGovernance",
            "currentOwner",
            "nextOwner",
            "pendingOwner",
            "Owner",
            "recepientAddress"
        ],
        "uint256": [
            "totalSupply",
            "goal",
            "phase",
            "raised",
            "end",
            "TotalAmount",
            "randomTN",
            "_daiSpreadPerBlock",
            "_usdcSpreadPerBlock",
            "pack",
            "costToLockHash",
            "period",
            "newGovernanceUpdatable",
            "newTargetGovernanceUpdatable",
            "totalContributors",
            "raisedAmount",
            "totalSentToGruppa",
            "closeTime",
            "status",
            "_totalSupply"
        ],
        "mapping1": [
            "balances",
            "investments",
            "whitelist",
            "_balances",
            "FirstTimeBonus",
            "frozens",
            "balanceOf",
            "users",
            "sproofAccounts",
            "uIntStorage",
            "stringStorage",
            "addressStorage",
            "bytesStorage",
            "boolStorage",
            "intStorage",
            "_containsMap",
            "referrers",
            "referredCount",
            "isAdmin",
            "accessList",
            "contributions",
            "deposits"
        ],
        "mapping2": [
            "allowed",
            "allowance"
        ],
        "bool": [
            "mintingFinished",
            "lockAll",
            "checkEnabled",
            "uje_sobrali",
            "paid"
        ],
        "string": [
            "name",
            "symbol"
        ],
        "uintSmall": [
            "decimals"
        ],
        "array_uintSmall": [
            "mlm"
        ],
        "userDefined": [
            "_blacklisted",
            "etherLegendsToken"
        ],
        "array1": [
            "refund",
            "addresses"
        ]
    },
    "contract_function_r_w": {
        "HoloToken.solHoloToken": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "mintingFinished"
                ]
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "owner"
                ]
            },
            "HoloToken.transfer(address,uint256)": {
                "reads": [
                    "balances",
                    "mintingFinished"
                ],
                "writes": [
                    "balances"
                ]
            },
            "HoloToken.balanceOf(address)": {
                "reads": [
                    "balances"
                ],
                "writes": []
            },
            "HoloToken.transferFrom(address,address,uint256)": {
                "reads": [
                    "balances",
                    "allowed",
                    "mintingFinished"
                ],
                "writes": [
                    "balances",
                    "allowed"
                ]
            },
            "HoloToken.approve(address,uint256)": {
                "reads": [
                    "mintingFinished"
                ],
                "writes": [
                    "allowed"
                ]
            },
            "HoloToken.allowance(address,address)": {
                "reads": [
                    "allowed"
                ],
                "writes": []
            },
            "HoloToken.increaseApproval(address,uint256)": {
                "reads": [
                    "allowed"
                ],
                "writes": [
                    "allowed"
                ]
            },
            "HoloToken.decreaseApproval(address,uint256)": {
                "reads": [
                    "allowed"
                ],
                "writes": [
                    "allowed"
                ]
            },
            "HoloToken.setMinter(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "minter"
                ]
            },
            "HoloToken.mint(address,uint256)": {
                "reads": [
                    "totalSupply",
                    "balances",
                    "mintingFinished",
                    "minter"
                ],
                "writes": [
                    "totalSupply",
                    "balances"
                ]
            },
            "HoloToken.finishMinting()": {
                "reads": [
                    "minter"
                ],
                "writes": [
                    "mintingFinished"
                ]
            },
            "HoloToken.setDestroyer(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "destroyer"
                ]
            },
            "HoloToken.burn(uint256)": {
                "reads": [
                    "totalSupply",
                    "balances",
                    "destroyer"
                ],
                "writes": [
                    "totalSupply",
                    "balances"
                ]
            }
        },
        "HoloToken_test_01.solHoloToken_test_01": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "mintingFinished"
                ]
            },
            "HoloToken_test_01.setMinter(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "minter"
                ]
            },
            "HoloToken_test_01.mint(address,uint256)": {
                "reads": [
                    "balances",
                    "totalSupply",
                    "minter",
                    "mintingFinished"
                ],
                "writes": [
                    "balances",
                    "totalSupply"
                ]
            },
            "HoloToken_test_01.setDestroyer(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "destroyer"
                ]
            },
            "HoloToken_test_01.burn(uint256)": {
                "reads": [
                    "balances",
                    "totalSupply",
                    "destroyer"
                ],
                "writes": [
                    "balances",
                    "totalSupply"
                ]
            }
        },
        "HoloToken_test_02.solHoloToken_test_02": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "mintingFinished"
                ]
            },
            "HoloToken_test_02.setMinter(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "minter"
                ]
            },
            "HoloToken_test_02.mint(address,uint256)": {
                "reads": [
                    "mintingFinished",
                    "totalSupply",
                    "balances",
                    "minter"
                ],
                "writes": [
                    "totalSupply",
                    "balances"
                ]
            },
            "HoloToken_test_02.setDestroyer(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "destroyer"
                ]
            },
            "HoloToken_test_02.burn(uint256)": {
                "reads": [
                    "totalSupply",
                    "balances",
                    "destroyer"
                ],
                "writes": [
                    "totalSupply",
                    "balances"
                ]
            }
        },
        "Crowdsale.solCrowdsale": {
            "constructor": {
                "reads": [],
                "writes": [
                    "end",
                    "owner",
                    "goal",
                    "phase"
                ]
            },
            "Crowdsale.invest()": {
                "reads": [
                    "goal",
                    "phase",
                    "raised",
                    "investments"
                ],
                "writes": [
                    "raised",
                    "investments"
                ]
            },
            "Crowdsale.setPhase(uint256)": {
                "reads": [
                    "goal",
                    "raised",
                    "end"
                ],
                "writes": [
                    "phase"
                ]
            },
            "Crowdsale.setOwner(address)": {
                "reads": [],
                "writes": [
                    "owner"
                ]
            },
            "Crowdsale.withdraw()": {
                "reads": [
                    "phase",
                    "raised",
                    "owner"
                ],
                "writes": []
            },
            "Crowdsale.refund()": {
                "reads": [
                    "phase",
                    "investments"
                ],
                "writes": [
                    "investments"
                ]
            }
        },
        "0x2f47f03b03946b1fe11d841744217db881d4f531.solBulkSender": {
            "constructor": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "BulkSender.approve(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "whitelist"
                ]
            },
            "BulkSender.remove(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "whitelist"
                ]
            },
            "BulkSender.isWhiteListed(address)": {
                "reads": [
                    "whitelist"
                ],
                "writes": []
            },
            "BulkSender.distribute(address[],uint256[])": {
                "reads": [
                    "whitelist"
                ],
                "writes": []
            },
            "BulkSender.receive()": {
                "reads": [],
                "writes": []
            }
        },
        "0x89f9749ce943281b8c65fec7f15e126f8cf4edb1.solDepositGame": {
            "constructor": {
                "reads": [],
                "writes": [
                    "admin",
                    "TotalAmount"
                ]
            },
            "DepositGame.deposit()": {
                "reads": [
                    "_balances",
                    "TotalAmount"
                ],
                "writes": [
                    "_balances",
                    "FirstTimeBonus",
                    "TotalAmount"
                ]
            },
            "DepositGame.GetBonusWithdraw()": {
                "reads": [
                    "_balances",
                    "FirstTimeBonus",
                    "TotalAmount"
                ],
                "writes": [
                    "_balances",
                    "FirstTimeBonus",
                    "TotalAmount"
                ]
            },
            "DepositGame.withdraw()": {
                "reads": [
                    "_balances",
                    "TotalAmount"
                ],
                "writes": [
                    "_balances",
                    "TotalAmount"
                ]
            },
            "DepositGame.random()": {
                "reads": [],
                "writes": []
            },
            "DepositGame.fallback()": {
                "reads": [
                    "TotalAmount"
                ],
                "writes": [
                    "TotalAmount"
                ]
            },
            "DepositGame.destroy()": {
                "reads": [
                    "admin",
                    "TotalAmount"
                ],
                "writes": [
                    "TotalAmount"
                ]
            }
        },
        "0xa143fd004b3c26f8faedeb9224ec03585e63d041.solDharmaSpreadRegistryPrototypeStaging": {
            "TwoStepOwnable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "TwoStepOwnable.isOwner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "TwoStepOwnable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_newPotentialOwner"
                ]
            },
            "TwoStepOwnable.cancelOwnershipTransfer()": {
                "reads": [
                    "_owner",
                    "_newPotentialOwner"
                ],
                "writes": [
                    "_newPotentialOwner"
                ]
            },
            "TwoStepOwnable.acceptOwnership()": {
                "reads": [
                    "_owner",
                    "_newPotentialOwner"
                ],
                "writes": [
                    "_owner",
                    "_newPotentialOwner"
                ]
            },
            "DharmaSpreadRegistryPrototypeStaging.setDaiSpreadPerBlock(uint256)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_daiSpreadPerBlock"
                ]
            },
            "DharmaSpreadRegistryPrototypeStaging.setUSDCSpreadPerBlock(uint256)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_usdcSpreadPerBlock"
                ]
            },
            "DharmaSpreadRegistryPrototypeStaging.getDaiSpreadPerBlock()": {
                "reads": [
                    "_daiSpreadPerBlock"
                ],
                "writes": []
            },
            "DharmaSpreadRegistryPrototypeStaging.getUSDCSpreadPerBlock()": {
                "reads": [
                    "_usdcSpreadPerBlock"
                ],
                "writes": []
            },
            "constructor": {
                "reads": [],
                "writes": []
            }
        },
        "0xce4763c7fa2e1238a398c0b07a9abf6472531d51.solBHT": {
            "constructor": {
                "reads": [
                    "decimals",
                    "totalSupply"
                ],
                "writes": [
                    "balanceOf",
                    "totalSupply",
                    "owner",
                    "name",
                    "symbol",
                    "decimals",
                    "lockAll",
                    "newOwner"
                ]
            },
            "BHT.transferOwnership(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "newOwner"
                ]
            },
            "BHT.acceptOwnership()": {
                "reads": [
                    "owner",
                    "newOwner"
                ],
                "writes": [
                    "owner",
                    "newOwner"
                ]
            },
            "BHT.freezeAccount(address,bool)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "frozens"
                ]
            },
            "BHT.freezeAll(bool)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "lockAll"
                ]
            },
            "BHT.contTransfer(address,uint256)": {
                "reads": [
                    "frozens",
                    "balanceOf",
                    "lockAll",
                    "owner"
                ],
                "writes": [
                    "balanceOf"
                ]
            },
            "BHT.transfer(address,uint256)": {
                "reads": [
                    "frozens",
                    "balanceOf",
                    "lockAll"
                ],
                "writes": [
                    "balanceOf"
                ]
            }
        },
        "0xd75b02dc969182fd9a8cbc4f12f3502c61802747.solEtherBoxLevels": {
            "Owned.changeOwner(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "newOwner"
                ]
            },
            "Owned.acceptOwnership()": {
                "reads": [
                    "newOwner"
                ],
                "writes": [
                    "owner"
                ]
            },
            "constructor": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "users",
                    "mlm",
                    "pack",
                    "owner"
                ]
            },
            "EtherBoxLevels.setBonus(uint8,uint8)": {
                "reads": [
                    "mlm",
                    "owner"
                ],
                "writes": [
                    "mlm"
                ]
            },
            "EtherBoxLevels.setPack(uint256)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "pack"
                ]
            },
            "EtherBoxLevels.setSponsor(address,address)": {
                "reads": [
                    "owner",
                    "users"
                ],
                "writes": [
                    "users"
                ]
            },
            "EtherBoxLevels.sponsor(address)": {
                "reads": [
                    "users"
                ],
                "writes": []
            },
            "EtherBoxLevels.join(address)": {
                "reads": [
                    "users",
                    "mlm",
                    "pack",
                    "owner"
                ],
                "writes": [
                    "users"
                ]
            },
            "EtherBoxLevels.fallback()": {
                "reads": [
                    "owner"
                ],
                "writes": []
            }
        },
        "0x60accbD43E9aAd281c1CDe56D3F5ed697B948b22.solsproof": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "costToLockHash"
                ]
            },
            "sproof.addSproofAccount(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "sproofAccounts"
                ]
            },
            "sproof.updateOwner(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "owner"
                ]
            },
            "sproof.removeSproofAccount(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "sproofAccounts"
                ]
            },
            "sproof.setCost(uint256)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "costToLockHash"
                ]
            },
            "sproof.getCost()": {
                "reads": [
                    "costToLockHash"
                ],
                "writes": []
            },
            "sproof.lockHash(bytes32)": {
                "reads": [
                    "costToLockHash",
                    "sproofAccounts"
                ],
                "writes": []
            },
            "sproof.lockHashProxy(address,bytes32,uint8,bytes32,bytes32)": {
                "reads": [
                    "costToLockHash",
                    "sproofAccounts"
                ],
                "writes": []
            },
            "sproof.lockHashesProxy(address[],bytes32[],uint8[],bytes32[],bytes32[])": {
                "reads": [
                    "costToLockHash",
                    "sproofAccounts"
                ],
                "writes": []
            },
            "sproof.payout()": {
                "reads": [
                    "owner"
                ],
                "writes": []
            }
        },
        "0xed39480b5bcd7c123f374b3b37366f60bc5d50e1.solTimelockGovernance": {
            "constructor": {
                "reads": [],
                "writes": [
                    "governance",
                    "target",
                    "period"
                ]
            },
            "TimelockGovernance.setThisGovernance(address)": {
                "reads": [
                    "period",
                    "governance"
                ],
                "writes": [
                    "newGovernanceUpdatable",
                    "newGovernance"
                ]
            },
            "TimelockGovernance.updateThisGovernance()": {
                "reads": [
                    "newGovernanceUpdatable",
                    "newGovernance"
                ],
                "writes": [
                    "governance"
                ]
            },
            "TimelockGovernance.setTargetGovernance(address)": {
                "reads": [
                    "period",
                    "governance"
                ],
                "writes": [
                    "newTargetGovernanceUpdatable",
                    "newTargetGovernance"
                ]
            },
            "TimelockGovernance.updateTargetGovernance()": {
                "reads": [
                    "newTargetGovernanceUpdatable",
                    "newTargetGovernance",
                    "target"
                ],
                "writes": []
            }
        },
        "0xc0ea83113038987d974fe667831a36e442e661e7.solLibfxToken": {
            "constructor": {
                "reads": [
                    "totalSupply"
                ],
                "writes": [
                    "balances",
                    "name",
                    "symbol",
                    "decimals",
                    "totalSupply"
                ]
            },
            "LibfxToken.transfer(address,uint256)": {
                "reads": [
                    "balances"
                ],
                "writes": [
                    "balances"
                ]
            },
            "LibfxToken.approve(address,uint256)": {
                "reads": [],
                "writes": [
                    "allowance"
                ]
            },
            "LibfxToken.transferFrom(address,address,uint256)": {
                "reads": [
                    "balances",
                    "allowance"
                ],
                "writes": [
                    "balances",
                    "allowance"
                ]
            },
            "LibfxToken.burn(uint256)": {
                "reads": [
                    "balances",
                    "totalSupply"
                ],
                "writes": [
                    "balances",
                    "totalSupply"
                ]
            },
            "LibfxToken.balanceOf(address)": {
                "reads": [
                    "balances"
                ],
                "writes": []
            }
        },
        "0xad638296f8348a9d72d5fbecd7b7d941d2889083.solEternalStorage": {
            "EternalStorage.changeOwner(address)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "currentOwner"
                ]
            },
            "EternalStorage.getUint(bytes32)": {
                "reads": [
                    "uIntStorage"
                ],
                "writes": []
            },
            "EternalStorage.getString(bytes32)": {
                "reads": [
                    "stringStorage"
                ],
                "writes": []
            },
            "EternalStorage.getAddress(bytes32)": {
                "reads": [
                    "addressStorage"
                ],
                "writes": []
            },
            "EternalStorage.getBytes(bytes32)": {
                "reads": [
                    "bytesStorage"
                ],
                "writes": []
            },
            "EternalStorage.getBool(bytes32)": {
                "reads": [
                    "boolStorage"
                ],
                "writes": []
            },
            "EternalStorage.getInt(bytes32)": {
                "reads": [
                    "intStorage"
                ],
                "writes": []
            },
            "EternalStorage.setUint(bytes32,uint256)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "uIntStorage"
                ]
            },
            "EternalStorage.setString(bytes32,string)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "stringStorage"
                ]
            },
            "EternalStorage.setAddress(bytes32,address)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "addressStorage"
                ]
            },
            "EternalStorage.setBytes(bytes32,bytes32)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "bytesStorage"
                ]
            },
            "EternalStorage.setBool(bytes32,bool)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "boolStorage"
                ]
            },
            "EternalStorage.setInt(bytes32,int256)": {
                "reads": [
                    "currentOwner"
                ],
                "writes": [
                    "intStorage"
                ]
            },
            "EternalStorage.deleteUint(bytes32)": {
                "reads": [
                    "uIntStorage",
                    "currentOwner"
                ],
                "writes": [
                    "uIntStorage"
                ]
            },
            "EternalStorage.deleteString(bytes32)": {
                "reads": [
                    "stringStorage",
                    "currentOwner"
                ],
                "writes": [
                    "stringStorage"
                ]
            },
            "EternalStorage.deleteAddress(bytes32)": {
                "reads": [
                    "addressStorage",
                    "currentOwner"
                ],
                "writes": [
                    "addressStorage"
                ]
            },
            "EternalStorage.deleteBytes(bytes32)": {
                "reads": [
                    "currentOwner",
                    "bytesStorage"
                ],
                "writes": [
                    "bytesStorage"
                ]
            },
            "EternalStorage.deleteBool(bytes32)": {
                "reads": [
                    "boolStorage",
                    "currentOwner"
                ],
                "writes": [
                    "boolStorage"
                ]
            },
            "EternalStorage.deleteInt(bytes32)": {
                "reads": [
                    "intStorage",
                    "currentOwner"
                ],
                "writes": [
                    "intStorage"
                ]
            },
            "constructor": {
                "reads": [],
                "writes": [
                    "currentOwner"
                ]
            }
        },
        "0x8382ADf670cb280F2f318bC2446be3860758aEF4.solGramChain": {
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.isOwner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.renounceOwnership()": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "GramChain.addHashEntry(bytes32)": {
                "reads": [
                    "_containsMap",
                    "_owner"
                ],
                "writes": [
                    "_containsMap"
                ]
            },
            "GramChain.addHashEntries(bytes32[])": {
                "reads": [
                    "_containsMap",
                    "_owner"
                ],
                "writes": [
                    "_containsMap"
                ]
            },
            "GramChain.verifyDataHash(bytes32)": {
                "reads": [
                    "_containsMap"
                ],
                "writes": []
            },
            "constructor": {
                "reads": [],
                "writes": []
            }
        },
        "0x3422ac57f4ca097806fa234e44ec0a781b78bbdb.solYFVReferral": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner"
                ]
            },
            "YFVReferral.approveNextOwner(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "nextOwner"
                ]
            },
            "YFVReferral.acceptNextOwner()": {
                "reads": [
                    "nextOwner"
                ],
                "writes": [
                    "owner"
                ]
            },
            "YFVReferral.setReferrer(address,address)": {
                "reads": [
                    "referrers",
                    "referredCount",
                    "isAdmin"
                ],
                "writes": [
                    "referrers",
                    "referredCount"
                ]
            },
            "YFVReferral.getReferrer(address)": {
                "reads": [
                    "referrers"
                ],
                "writes": []
            },
            "YFVReferral.setAdminStatus(address,bool)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "isAdmin"
                ]
            },
            "YFVReferral.emergencyERC20Drain(ERC20,uint256)": {
                "reads": [
                    "owner"
                ],
                "writes": []
            }
        },
        "0x131f983da6fabf20869f5ace3516a23f28b46204.solBlacklist": {
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.isOwner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.renounceOwnership()": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "IWhitelist.isWhitelisted(address)": {
                "reads": [],
                "writes": []
            },
            "Blacklist.addBlacklisted(address)": {
                "reads": [
                    "_owner",
                    "_blacklisted"
                ],
                "writes": []
            },
            "Blacklist.removeBlacklisted(address)": {
                "reads": [
                    "_owner",
                    "_blacklisted"
                ],
                "writes": []
            },
            "Blacklist.isWhitelisted(address)": {
                "reads": [
                    "_blacklisted"
                ],
                "writes": []
            },
            "constructor": {
                "reads": [],
                "writes": []
            }
        },
        "0x46d52bace05457929e1cd84c9efcee0d2156555b.solSimpleWriteAccessController": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "checkEnabled"
                ]
            },
            "Owned.transferOwnership(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "pendingOwner"
                ]
            },
            "Owned.acceptOwnership()": {
                "reads": [
                    "pendingOwner",
                    "owner"
                ],
                "writes": [
                    "pendingOwner",
                    "owner"
                ]
            },
            "AccessControllerInterface.hasAccess(address,bytes)": {
                "reads": [],
                "writes": []
            },
            "SimpleWriteAccessController.hasAccess(address,bytes)": {
                "reads": [
                    "accessList",
                    "checkEnabled"
                ],
                "writes": []
            },
            "SimpleWriteAccessController.addAccess(address)": {
                "reads": [
                    "accessList",
                    "owner"
                ],
                "writes": [
                    "accessList"
                ]
            },
            "SimpleWriteAccessController.removeAccess(address)": {
                "reads": [
                    "accessList",
                    "owner"
                ],
                "writes": [
                    "accessList"
                ]
            },
            "SimpleWriteAccessController.enableAccessCheck()": {
                "reads": [
                    "checkEnabled",
                    "owner"
                ],
                "writes": [
                    "checkEnabled"
                ]
            },
            "SimpleWriteAccessController.disableAccessCheck()": {
                "reads": [
                    "checkEnabled",
                    "owner"
                ],
                "writes": [
                    "checkEnabled"
                ]
            }
        },
        "0x7C6664bd7957eD63f8fbF635101A186741Ef14D4.solAdministratorMinter": {
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.isOwner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.renounceOwnership()": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "constructor": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "AdministratorMinter.fallback()": {
                "reads": [],
                "writes": []
            },
            "AdministratorMinter.destroyContract()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "AdministratorMinter.setEtherLegendsToken(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "etherLegendsToken"
                ]
            },
            "AdministratorMinter.mintCards(address,uint256,uint256)": {
                "reads": [
                    "etherLegendsToken",
                    "_owner"
                ],
                "writes": []
            }
        },
        "0x4b205ad9e4a2669cf9428c1a5f72ca17976f0167.solMonetaGiftBox": {
            "Owned.changeOwner(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "newOwner"
                ]
            },
            "Owned.acceptOwnership()": {
                "reads": [
                    "newOwner"
                ],
                "writes": [
                    "owner"
                ]
            },
            "constructor": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "pack",
                    "users",
                    "mlm",
                    "owner"
                ]
            },
            "MonetaGiftBox.setBonus(uint8,uint8)": {
                "reads": [
                    "mlm",
                    "owner"
                ],
                "writes": [
                    "mlm"
                ]
            },
            "MonetaGiftBox.setPack(uint256)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "pack"
                ]
            },
            "MonetaGiftBox.setSponsor(address,address)": {
                "reads": [
                    "users",
                    "owner"
                ],
                "writes": [
                    "users"
                ]
            },
            "MonetaGiftBox.sponsor(address)": {
                "reads": [
                    "users"
                ],
                "writes": []
            },
            "MonetaGiftBox.gift(address)": {
                "reads": [
                    "pack",
                    "users",
                    "mlm",
                    "owner"
                ],
                "writes": [
                    "users"
                ]
            },
            "MonetaGiftBox.receive()": {
                "reads": [
                    "owner"
                ],
                "writes": []
            }
        },
        "0xbb86cd4c05c321015078433863fd203a61560fcb.solGruppa_Istoricheskiy_Roman": {
            "constructor": {
                "reads": [],
                "writes": [
                    "recepientAddress",
                    "raisedAmount",
                    "Owner",
                    "goal",
                    "totalSentToGruppa"
                ]
            },
            "Gruppa_Istoricheskiy_Roman.donate()": {
                "reads": [
                    "contributions",
                    "totalContributors",
                    "raisedAmount"
                ],
                "writes": [
                    "contributions",
                    "totalContributors",
                    "raisedAmount"
                ]
            },
            "Gruppa_Istoricheskiy_Roman.getRefund()": {
                "reads": [
                    "contributions",
                    "totalContributors",
                    "raisedAmount"
                ],
                "writes": [
                    "contributions",
                    "totalContributors",
                    "raisedAmount"
                ]
            },
            "Gruppa_Istoricheskiy_Roman.send_funds_to_Gruppa_Istoricheskiy_Roman()": {
                "reads": [
                    "paid",
                    "recepientAddress",
                    "raisedAmount",
                    "goal",
                    "totalSentToGruppa"
                ],
                "writes": [
                    "totalSentToGruppa",
                    "raisedAmount"
                ]
            },
            "Gruppa_Istoricheskiy_Roman.skolko_nado_sobrat()": {
                "reads": [
                    "goal"
                ],
                "writes": []
            },
            "Gruppa_Istoricheskiy_Roman.skolko_uje_sobrali()": {
                "reads": [
                    "raisedAmount"
                ],
                "writes": []
            },
            "Gruppa_Istoricheskiy_Roman.skolkoVsegoOtpravleno()": {
                "reads": [
                    "totalSentToGruppa"
                ],
                "writes": []
            },
            "Gruppa_Istoricheskiy_Roman.skolko_chelovek_skinulis()": {
                "reads": [
                    "totalContributors"
                ],
                "writes": []
            },
            "Gruppa_Istoricheskiy_Roman.uje_sobrali_li()": {
                "reads": [
                    "raisedAmount",
                    "goal"
                ],
                "writes": []
            },
            "Gruppa_Istoricheskiy_Roman.kill()": {
                "reads": [
                    "Owner"
                ],
                "writes": []
            }
        },
        "HoloToken_test_03.solHoloToken_test_03": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "mintingFinished"
                ]
            },
            "HoloToken_test_03.finishMinting()": {
                "reads": [
                    "minter"
                ],
                "writes": [
                    "mintingFinished"
                ]
            },
            "HoloToken_test_03.setMinter(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "minter"
                ]
            },
            "HoloToken_test_03.mint(address,uint256)": {
                "reads": [
                    "totalSupply",
                    "balances",
                    "mintingFinished",
                    "minter"
                ],
                "writes": [
                    "totalSupply",
                    "balances"
                ]
            },
            "HoloToken_test_03.setDestroyer(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "destroyer"
                ]
            },
            "HoloToken_test_03.burn(uint256)": {
                "reads": [
                    "totalSupply",
                    "balances",
                    "destroyer"
                ],
                "writes": [
                    "totalSupply",
                    "balances"
                ]
            }
        },
        "Crowdsale_rlf.solCrowdsale": {
            "constructor": {
                "reads": [],
                "writes": [
                    "owner",
                    "closeTime",
                    "status",
                    "goal",
                    "raised"
                ]
            },
            "Crowdsale.setStatus(uint256)": {
                "reads": [
                    "goal",
                    "closeTime",
                    "raised"
                ],
                "writes": [
                    "status"
                ]
            },
            "Crowdsale.setOwner(address)": {
                "reads": [],
                "writes": [
                    "owner"
                ]
            },
            "Crowdsale.invest()": {
                "reads": [
                    "goal",
                    "deposits",
                    "status",
                    "raised"
                ],
                "writes": [
                    "deposits",
                    "raised"
                ]
            },
            "Crowdsale.withdraw()": {
                "reads": [
                    "owner",
                    "status",
                    "raised"
                ],
                "writes": []
            },
            "Crowdsale.refund()": {
                "reads": [
                    "deposits",
                    "status"
                ],
                "writes": [
                    "deposits"
                ]
            }
        },
        "Crowdsale_01.solCrowdsale": {
            "constructor": {
                "reads": [],
                "writes": [
                    "end",
                    "owner",
                    "goal",
                    "phase"
                ]
            },
            "Crowdsale.invest()": {
                "reads": [
                    "goal",
                    "raised",
                    "investments",
                    "phase"
                ],
                "writes": [
                    "raised",
                    "investments"
                ]
            },
            "Crowdsale.setPhase(uint256)": {
                "reads": [
                    "goal",
                    "raised",
                    "end"
                ],
                "writes": [
                    "phase"
                ]
            },
            "Crowdsale.setOwner(address)": {
                "reads": [],
                "writes": [
                    "owner"
                ]
            },
            "Crowdsale.withdraw()": {
                "reads": [
                    "raised",
                    "owner",
                    "phase"
                ],
                "writes": []
            },
            "Crowdsale.refund()": {
                "reads": [
                    "investments",
                    "phase"
                ],
                "writes": [
                    "investments"
                ]
            }
        },
        "0xdb25ff2868cbc48856e44a2ae8e2f2b62f1f3b84.solBulkSender": {
            "constructor": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "BulkSender.approve(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "whitelist"
                ]
            },
            "BulkSender.remove(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "whitelist"
                ]
            },
            "BulkSender.isWhiteListed(address)": {
                "reads": [
                    "whitelist"
                ],
                "writes": []
            },
            "BulkSender.distribute(address[],uint256[])": {
                "reads": [
                    "whitelist"
                ],
                "writes": []
            },
            "BulkSender.receive()": {
                "reads": [],
                "writes": []
            }
        },
        "0xe4ea2d60783fc54c3595bda39ac1ab6556723d38.solBHE": {
            "constructor": {
                "reads": [
                    "decimals",
                    "totalSupply"
                ],
                "writes": [
                    "balanceOf",
                    "totalSupply",
                    "owner",
                    "name",
                    "symbol",
                    "decimals",
                    "lockAll",
                    "newOwner"
                ]
            },
            "BHE.transferOwnership(address)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "newOwner"
                ]
            },
            "BHE.acceptOwnership()": {
                "reads": [
                    "newOwner",
                    "owner"
                ],
                "writes": [
                    "newOwner",
                    "owner"
                ]
            },
            "BHE.freezeAccount(address,bool)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "frozens"
                ]
            },
            "BHE.freezeAll(bool)": {
                "reads": [
                    "owner"
                ],
                "writes": [
                    "lockAll"
                ]
            },
            "BHE.contTransfer(address,uint256)": {
                "reads": [
                    "frozens",
                    "balanceOf",
                    "lockAll",
                    "owner"
                ],
                "writes": [
                    "balanceOf"
                ]
            },
            "BHE.transfer(address,uint256)": {
                "reads": [
                    "frozens",
                    "balanceOf",
                    "lockAll"
                ],
                "writes": [
                    "balanceOf"
                ]
            }
        },
        "0x87c48b167bb02cc88487ce6dc12f5e56cd49676a.solTimelockGovernance": {
            "constructor": {
                "reads": [],
                "writes": [
                    "target",
                    "governance",
                    "period"
                ]
            },
            "TimelockGovernance.setThisGovernance(address)": {
                "reads": [
                    "period",
                    "governance"
                ],
                "writes": [
                    "newGovernanceUpdatable",
                    "newGovernance"
                ]
            },
            "TimelockGovernance.updateThisGovernance()": {
                "reads": [
                    "newGovernanceUpdatable",
                    "newGovernance"
                ],
                "writes": [
                    "governance"
                ]
            },
            "TimelockGovernance.setTargetGovernance(address)": {
                "reads": [
                    "period",
                    "governance"
                ],
                "writes": [
                    "newTargetGovernance",
                    "newTargetGovernanceUpdatable"
                ]
            },
            "TimelockGovernance.updateTargetGovernance()": {
                "reads": [
                    "target",
                    "newTargetGovernance",
                    "newTargetGovernanceUpdatable"
                ],
                "writes": []
            }
        },
        "0x316Fe7d9610F56Aff59B8Db695dF625581Eb3B4A.solCYT": {
            "constructor": {
                "reads": [
                    "owner",
                    "_totalSupply"
                ],
                "writes": [
                    "balances",
                    "owner",
                    "_totalSupply"
                ]
            },
            "CYT.fallback()": {
                "reads": [],
                "writes": []
            },
            "CYT.totalSupply()": {
                "reads": [
                    "_totalSupply"
                ],
                "writes": []
            },
            "CYT.balanceOf(address)": {
                "reads": [
                    "balances"
                ],
                "writes": []
            },
            "CYT.transfer(address,uint256)": {
                "reads": [
                    "balances"
                ],
                "writes": [
                    "balances"
                ]
            },
            "CYT.transferFrom(address,address,uint256)": {
                "reads": [
                    "allowed",
                    "balances"
                ],
                "writes": [
                    "allowed",
                    "balances"
                ]
            },
            "CYT.approve(address,uint256)": {
                "reads": [],
                "writes": [
                    "allowed"
                ]
            },
            "CYT.allowance(address,address)": {
                "reads": [
                    "allowed"
                ],
                "writes": []
            }
        },
        "0x00111feeb7ee43e262ff38aaf912b72ea668edc3.solRipgaleToken": {
            "constructor": {
                "reads": [
                    "totalSupply"
                ],
                "writes": [
                    "balances",
                    "name",
                    "symbol",
                    "decimals",
                    "totalSupply"
                ]
            },
            "RipgaleToken.transfer(address,uint256)": {
                "reads": [
                    "balances"
                ],
                "writes": [
                    "balances"
                ]
            },
            "RipgaleToken.approve(address,uint256)": {
                "reads": [],
                "writes": [
                    "allowance"
                ]
            },
            "RipgaleToken.transferFrom(address,address,uint256)": {
                "reads": [
                    "balances",
                    "allowance"
                ],
                "writes": [
                    "balances",
                    "allowance"
                ]
            },
            "RipgaleToken.burn(uint256)": {
                "reads": [
                    "balances",
                    "totalSupply"
                ],
                "writes": [
                    "balances",
                    "totalSupply"
                ]
            },
            "RipgaleToken.balanceOf(address)": {
                "reads": [
                    "balances"
                ],
                "writes": []
            }
        },
        "0x29d9ede1d2fac6fe3b19d6005a81540d094665a5.solBlacklist": {
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.isOwner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.renounceOwnership()": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "IWhitelist.isWhitelisted(address)": {
                "reads": [],
                "writes": []
            },
            "Blacklist.addBlacklisted(address)": {
                "reads": [
                    "_blacklisted",
                    "_owner"
                ],
                "writes": []
            },
            "Blacklist.removeBlacklisted(address)": {
                "reads": [
                    "_blacklisted",
                    "_owner"
                ],
                "writes": []
            },
            "Blacklist.isWhitelisted(address)": {
                "reads": [
                    "_blacklisted"
                ],
                "writes": []
            },
            "constructor": {
                "reads": [],
                "writes": []
            }
        },
        "0x4e8c0598ef8c3d44967bd4fa101c54939ab97d53.solBlacklist": {
            "Ownable.owner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.isOwner()": {
                "reads": [
                    "_owner"
                ],
                "writes": []
            },
            "Ownable.renounceOwnership()": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "Ownable.transferOwnership(address)": {
                "reads": [
                    "_owner"
                ],
                "writes": [
                    "_owner"
                ]
            },
            "IWhitelist.isWhitelisted(address)": {
                "reads": [],
                "writes": []
            },
            "Blacklist.addBlacklisted(address)": {
                "reads": [
                    "_blacklisted",
                    "_owner"
                ],
                "writes": []
            },
            "Blacklist.removeBlacklisted(address)": {
                "reads": [
                    "_blacklisted",
                    "_owner"
                ],
                "writes": []
            },
            "Blacklist.isWhitelisted(address)": {
                "reads": [
                    "_blacklisted"
                ],
                "writes": []
            },
            "constructor": {
                "reads": [],
                "writes": []
            }
        },
        "0x283d2d5fa7ec80f00bfeeb370e1b8cbf7caba614.solYAMToken": {
            "constructor": {
                "reads": [
                    "totalSupply"
                ],
                "writes": [
                    "balances",
                    "name",
                    "symbol",
                    "decimals",
                    "totalSupply"
                ]
            },
            "YAMToken.transfer(address,uint256)": {
                "reads": [
                    "balances"
                ],
                "writes": [
                    "balances"
                ]
            },
            "YAMToken.approve(address,uint256)": {
                "reads": [],
                "writes": [
                    "allowance"
                ]
            },
            "YAMToken.transferFrom(address,address,uint256)": {
                "reads": [
                    "balances",
                    "allowance"
                ],
                "writes": [
                    "balances",
                    "allowance"
                ]
            },
            "YAMToken.burn(uint256)": {
                "reads": [
                    "balances",
                    "totalSupply"
                ],
                "writes": [
                    "balances",
                    "totalSupply"
                ]
            },
            "YAMToken.balanceOf(address)": {
                "reads": [
                    "balances"
                ],
                "writes": []
            }
        }
    }
}