++++ 0x93ecd2ecdfb91ab2fee28a8779a6adfe2851cda6.sol  :  0.5.11  :  LoanBurst ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 4468
['constructor']:writes at the last depth:['0', '1', '7', '3', '5', '5']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 96.69% coverage.
dynamic svars:['5']
static svars:['0', '2', '4', '6', '3', '7', '1']
Ending preprocessing.
preprocessing time(s): 113.20830726623535
contract coverage: 86.93%
transferFrom(address,address,uint256) is not reachable
Function Reads: State variables read in conditions
	_minLoan(uint256):['7']
	transfer(address,uint256):['5', '3']
	Loan(uint256):['5']
	allowance(address,address):[]
	whitelist(address,bool):['7']
	MIN_FREEZE_AMOUNT():[]
	burn(uint256):['5']
	allInfoFor(address):[]
	balanceOf(address):[]
	distribute(uint256):['4', '5']
	symbol():[]
	ClaimInterest():['5']
	totalFrozen():[]
	transferFrom(address,address,uint256):[]
	CutLoan(uint256):['5']
	decimals():[]
	isWhitelisted(address):[]
	transferAndCall(address,uint256,bytes):['5', '3']
	dividendsOf(address):[]
	name():[]
	approve(address,uint256):[]
	bulkTransfer(address[],uint256[]):[]
	totalSupply():[]
	frozenOf(address):[]
Function Writes: State variables written
	_minLoan(uint256):['0']
	approve(address,uint256):['5']
	whitelist(address,bool):['5']
	CutLoan(uint256):['2', '4', '5', '6']
	burn(uint256):['5', '2', '3', '6']
	ClaimInterest():['5']
	transferFrom(address,address,uint256):['5', '2', '3']
	transfer(address,uint256):['5', '2', '3', '6']
	distribute(uint256):['5', '6']
	Loan(uint256):['5', '4']
	transferAndCall(address,uint256,bytes):['5', '2', '3', '6']
	bulkTransfer(address[],uint256[]):['5', '2']
============================
iteration:3
targets:['distribute(uint256)', 'transfer(address,uint256)', 'transferAndCall(address,uint256,bytes)', 'burn(uint256)', 'ClaimInterest()', 'transferFrom(address,address,uint256)', 'CutLoan(uint256)']
['_minLoan(uint256)']:writes at the last depth:['0']
['approve(address,uint256)']:writes at the last depth:['5']
['whitelist(address,bool)']:writes at the last depth:['5']
['burn(uint256)']:writes at the last depth:['3', '2', '5']
['ClaimInterest()']:writes at the last depth:['5']
['CutLoan(uint256)']:writes at the last depth:['4', '5']
['Loan(uint256)']:writes at the last depth:['4', '5']
['transfer(address,uint256)']:writes at the last depth:['2', '5']
['transfer(address,uint256)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
['transferFrom(address,address,uint256)']:writes at the last depth:['2', '5']
['transferFrom(address,address,uint256)']:writes at the last depth:['2', '5']
['bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2', '5']
['bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2', '5']
['transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
['bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2', '5']
contract coverage: 86.93%
============================
iteration:4
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['5']
['bulkTransfer(address[],uint256[])', 'CutLoan(uint256)']:writes at the last depth:['4', '5']
contract coverage: 86.93%
============================
iteration:5
contract coverage: 86.93%
============================
iteration:6
contract coverage: 86.93%
============================
iteration:7
['transferAndCall(address,uint256,bytes)', '_minLoan(uint256)']:writes at the last depth:['0']
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'CutLoan(uint256)']:writes at the last depth:['4', '5']
['transferAndCall(address,uint256,bytes)', 'Loan(uint256)']:writes at the last depth:['4', '5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)', 'transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '5']
['transferAndCall(address,uint256,bytes)', 'transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
contract coverage: 86.93%
============================
iteration:8
contract coverage: 86.93%
============================
iteration:9
contract coverage: 86.93%
============================
iteration:10
contract coverage: 86.93%
============================
iteration:11
contract coverage: 86.93%
============================
iteration:12
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', '_minLoan(uint256)']:writes at the last depth:['0']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'whitelist(address,bool)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'Loan(uint256)']:writes at the last depth:['4', '5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2', '5']
contract coverage: 86.93%
============================
iteration:13
contract coverage: 86.93%
============================
iteration:14
contract coverage: 88.63%
============================
iteration:15
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'whitelist(address,bool)', 'burn(uint256)']:writes at the last depth:['3', '2', '5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'whitelist(address,bool)', 'transfer(address,uint256)']:writes at the last depth:['3', '2', '5']
contract coverage: 88.63%
============================
iteration:16
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)', 'approve(address,uint256)', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.63%
============================
iteration:17
contract coverage: 88.88%
============================
iteration:18
['transferAndCall(address,uint256,bytes)', 'Loan(uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'Loan(uint256)', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:19
['transferAndCall(address,uint256,bytes)', 'Loan(uint256)', 'ClaimInterest()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'Loan(uint256)', 'ClaimInterest()', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:20
['transferAndCall(address,uint256,bytes)', 'Loan(uint256)', 'approve(address,uint256)', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:21
['transferAndCall(address,uint256,bytes)', 'CutLoan(uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'CutLoan(uint256)', 'transferAndCall(address,uint256,bytes)']:writes at the last depth:['2', '5']
contract coverage: 88.88%
============================
iteration:22
contract coverage: 88.88%
============================
iteration:23
['transferAndCall(address,uint256,bytes)', 'CutLoan(uint256)', 'approve(address,uint256)', '_minLoan(uint256)']:writes at the last depth:['0']
['transferAndCall(address,uint256,bytes)', 'CutLoan(uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'CutLoan(uint256)', 'approve(address,uint256)', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:24
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', '_minLoan(uint256)']:writes at the last depth:['0']
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:25
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', 'ClaimInterest()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', 'ClaimInterest()', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:26
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'ClaimInterest()', 'approve(address,uint256)', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:27
contract coverage: 88.88%
============================
iteration:28
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', '_minLoan(uint256)']:writes at the last depth:['0']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'whitelist(address,bool)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'ClaimInterest()']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'CutLoan(uint256)']:writes at the last depth:['4', '5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'Loan(uint256)']:writes at the last depth:['4', '5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '5']
contract coverage: 88.88%
============================
iteration:29
contract coverage: 88.88%
============================
iteration:30
contract coverage: 88.88%
============================
iteration:31
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'CutLoan(uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:32
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'ClaimInterest()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'ClaimInterest()', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:33
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'whitelist(address,bool)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'whitelist(address,bool)', 'burn(uint256)']:writes at the last depth:['3', '2', '5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'whitelist(address,bool)', 'ClaimInterest()']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'whitelist(address,bool)', 'CutLoan(uint256)']:writes at the last depth:['4', '5']
contract coverage: 88.88%
============================
iteration:34
contract coverage: 88.88%
============================
iteration:35
contract coverage: 88.88%
============================
iteration:36
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'whitelist(address,bool)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '2', '5']
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:37
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'ClaimInterest()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'ClaimInterest()', 'ClaimInterest()']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:38
contract coverage: 88.88%
============================
iteration:39
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'whitelist(address,bool)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:40
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 88.88%
============================
iteration:41
contract coverage: 88.88%
============================
iteration:42
contract coverage: 88.88%
============================
iteration:43
contract coverage: 88.88%
============================
iteration:44
contract coverage: 88.88%
============================
iteration:45
contract coverage: 88.88%
============================
iteration:46
contract coverage: 88.88%
============================
iteration:47
contract coverage: 88.88%
============================
iteration:48
contract coverage: 88.88%
============================
iteration:49
contract coverage: 88.88%
============================
iteration:50
contract coverage: 88.88%
============================
iteration:51
contract coverage: 88.88%
============================
iteration:52
contract coverage: 88.88%
============================
iteration:53
contract coverage: 88.88%
============================
iteration:54
contract coverage: 88.88%
============================
iteration:55
contract coverage: 88.88%
============================
iteration:56
contract coverage: 88.88%
============================
iteration:57
contract coverage: 88.88%
#@statespace
4028 nodes, 4027 edges, 61400 total states
#@coverage
Achieved 4.61% coverage for code: 6080604052670de0b6b3a7640000600055601460015534801561002157600080fd5b5033600360040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555069d38be6051f27c260000060036000018190555069d38be6051f27c2600000600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef69d38be6051f27c26000006040518082815260200191505060405180910390a361014f33600161015460201b60201c565b6102b1565b600360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806200274b602a913960400191505060405180910390fd5b80600360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5a25e09a5dba33161281055e015f1279b6b10204d8f90dd56a8ce2b82322d43d82604051808215151515815260200191505060405180910390a25050565b61248a80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c806342966c68116100c3578063a037164d1161007c578063a037164d146107be578063a9059cbb146107ec578063c957b89914610852578063dd62ed3e14610880578063f59c3708146108f8578063fcc7e8a11461094857610157565b806342966c68146105ee57806357f6b8121461061c57806370a082311461069757806391c05b0b146106ef57806395d89b411461071d57806398896de3146107a057610157565b80631e7f87bc116101155780631e7f87bc146103e157806323b872dd146103ff578063276ead9c14610485578063313ce567146104b35780633af32abf146104d75780634000aea01461053357610157565b806265318b1461015c57806306fdde03146101b4578063095ea7b314610237578063153a1f3e1461029d57806318160ddd1461036b5780631bf6e00d14610389575b600080fd5b61019e6004803603602081101561017257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610966565b6040518082815260200191505060405180910390f35b6101bc610a14565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101fc5780820151818401526020810190506101e1565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102836004803603604081101561024d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a4d565b604051808215151515815260200191505060405180910390f35b610369600480360360408110156102b357600080fd5b81019080803590602001906401000000008111156102d057600080fd5b8201836020820111156102e257600080fd5b8035906020019184602083028401116401000000008311171561030457600080fd5b90919293919293908035906020019064010000000081111561032557600080fd5b82018360208201111561033757600080fd5b8035906020019184602083028401116401000000008311171561035957600080fd5b9091929391929390505050610b45565b005b610373610bc2565b6040518082815260200191505060405180910390f35b6103cb6004803603602081101561039f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bcf565b6040518082815260200191505060405180910390f35b6103e9610c1e565b6040518082815260200191505060405180910390f35b61046b6004803603606081101561041557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c2b565b604051808215151515815260200191505060405180910390f35b6104b16004803603602081101561049b57600080fd5b8101908080359060200190929190505050610d63565b005b6104bb610d6f565b604051808260ff1660ff16815260200191505060405180910390f35b610519600480360360208110156104ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d74565b604051808215151515815260200191505060405180910390f35b6105d46004803603606081101561054957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561059057600080fd5b8201836020820111156105a257600080fd5b803590602001918460018302840111640100000000831117156105c457600080fd5b9091929391929390505050610dd0565b604051808215151515815260200191505060405180910390f35b61061a6004803603602081101561060457600080fd5b8101908080359060200190929190505050610f03565b005b61065e6004803603602081101561063257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611131565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b6106d9600480360360208110156106ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c0565b6040518082815260200191505060405180910390f35b61071b6004803603602081101561070557600080fd5b8101908080359060200190929190505050611219565b005b6107256113db565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561076557808201518184015260208101905061074a565b50505050905090810190601f1680156107925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a8611414565b6040518082815260200191505060405180910390f35b6107ea600480360360208110156107d457600080fd5b8101908080359060200190929190505050611604565b005b6108386004803603604081101561080257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116de565b604051808215151515815260200191505060405180910390f35b61087e6004803603602081101561086857600080fd5b81019080803590602001909291905050506116f6565b005b6108e26004803603604081101561089657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611702565b6040518082815260200191505060405180910390f35b6109466004803603604081101561090e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061178f565b005b6109506118eb565b6040518082815260200191505060405180910390f35b600068010000000000000000600360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600360020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546003800154020381610a0c57fe5b049050919050565b6040518060400160405280600981526020017f4c6f616e4275727374000000000000000000000000000000000000000000000081525081565b600081600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b818190508484905014610b5757600080fd5b60008090505b84849050811015610bbb57610bad33868684818110610b7857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16858585818110610ba157fe5b905060200201356118f1565b508080600101915050610b5d565b5050505050565b6000600360000154905090565b6000600360020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6000600360010154905090565b600081600360020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cbc57600080fd5b81600360020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d578484846118f1565b50600190509392505050565b610d6c81611cbe565b50565b601281565b6000600360020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b600080610dde3387876118f1565b90506000863b905060008163ffffffff161115610ef5578673ffffffffffffffffffffffffffffffffffffffff16636be32e73338488886040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b505050506040513d6020811015610eda57600080fd5b8101908080519060200190929190505050610ef457600080fd5b5b600192505050949350505050565b80610f0d336111c0565b1015610f64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018061241b603b913960400191505060405180910390fd5b80600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550806002819055506000600360010154111561107857600280600082825481610fdb57fe5b0492505081905550600360010154680100000000000000006002540281610ffe57fe5b0460038001600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a35b600254600360000160008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb6002546040518082815260200191505060405180910390a150565b600080600080600080611142610bc2565b61114a610c1e565b611153896111c0565b61115c8a610bcf565b6111658b610966565b600360020160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015495509550955095509550955091939550919395565b60006111cb82610bcf565b600360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154039050919050565b600060036001015411611294576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f206f6e6520686173207374616b656420796574000000000000000000000081525060200191505060405180910390fd5b8061129e336111c0565b10156112f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b81526020018061241b603b913960400191505060405180910390fd5b80600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825403925050819055506003600101546801000000000000000082028161136157fe5b0460038001600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6040518060400160405280600681526020017f4c4275727374000000000000000000000000000000000000000000000000000081525081565b60008061142033610966565b90506000811015611499576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f796f7520646f206e6f74206861766520616e79206469766964656e642079657481525060200191505060405180910390fd5b680100000000000000008102600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254019250508190555080600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f4256a058fa2b123d727576d3d31e3a272db98ee5fe264e229610ce43dc849999826040518082815260200191505060405180910390a28091505090565b600360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b670de0b6b3a7640000810260008190555050565b60006116eb3384846118f1565b506001905092915050565b6116ff816120fb565b50565b6000600360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806123f1602a913960400191505060405180910390fd5b80600360020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5a25e09a5dba33161281055e015f1279b6b10204d8f90dd56a8ce2b82322d43d82604051808215151515815260200191505060405180910390a25050565b60005481565b6000816118fd856111c0565b101561190857600080fd5b81600360020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825403925050819055506064600a83028161196857fe5b046002819055506064600169d38be6051f27c2600000028161198657fe5b04600254611992610bc2565b0310806119a457506119a384610d74565b5b156119b25760006002819055505b60006002548303905080600360020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a360006002541115611cb35760006003600101541115611bfb576000606460506002540281611a9d57fe5b04905060036001015468010000000000000000820281611ab957fe5b0460038001600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a36000606460146002540281611b4157fe5b04905080600360000160008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a37fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb816040518082815260200191505060405180910390a15050611cb2565b600254600360000160008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb6002546040518082815260200191505060405180910390a15b5b809150509392505050565b80611cc833610bcf565b1015611d1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061239e602a913960400191505060405180910390fd5b6000600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501544203905062278d00811015611f84576064600154830281611d8457fe5b04600281905550600254600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825403925050819055508160036001016000828254039250508190555081600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254039250508190555060038001548202600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282540392505081905550600360010154680100000000000000006002540281611eba57fe5b0460038001600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f836040518082815260200191505060405180910390a26120f7565b8160036001016000828254039250508190555081600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254039250508190555060038001548202600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f836040518082815260200191505060405180910390a25b5050565b80612105336111c0565b1015612179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e73756666696369656e7420746f6b656e2062616c616e636500000000000081525060200191505060405180910390fd5b6000548161218633610bcf565b0110156121de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806123c86029913960400191505060405180910390fd5b42600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055508060036001016000828254019250508190555080600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254019250508190555060038001548102600360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e0826040518082815260200191505060405180910390a25056fe596f7520646f206e6f74206861766520757020746f207468617420616d6f756e74206f66207374616b65596f75722062616c616e6365206973206c6f776572207468616e20746865206d696e2e207374616b656f776e61626c653a204f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e796f75722062616c616e6365206973206c657373207468616e2074686520616d6f756e7420796f752077616e7420746f2064697374726962757465a265627a7a7231582069e7298a5ff2498f80860a037b39174c74d45973093c53b87a9956876fe022dc64736f6c634300050b00326f776e61626c653a204f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e
#@coverage
Achieved 88.88% coverage for code: 
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LoanBurst
Function name: transferAndCall(address,uint256,bytes)
PC address: 3763
Estimated Gas Usage: 33109 - 152548
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x93ecd2ecdfb91ab2fee28a8779a6adfe2851cda6.sol:139

Callable(_to).tokenCallback(msg.sender, _transferred, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferAndCall(address,uint256,bytes), txdata: 0x4000aea0800200100808000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000004f268000000000000000000000000000000000000000000000000000000000000000000000000000003c, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: LoanBurst
Function name: _minLoan(uint256)
PC address: 5845
Estimated Gas Usage: 6148 - 26573
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x93ecd2ecdfb91ab2fee28a8779a6adfe2851cda6.sol:65

_number*1000000000000000000

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: _minLoan(uint256), txdata: 0xa037164d0000040000000000000000000000001278400000428b0008b00037698f391d18, decoded_data: (27606985387162255149739023449114386732075526511209101037740925419855128,), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: LoanBurst
Function name: CutLoan(uint256)
PC address: 7542
Estimated Gas Usage: 2204 - 2679
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x93ecd2ecdfb91ab2fee28a8779a6adfe2851cda6.sol:252

if(interval < MIN_REWARD_DUR){
		_burnedAmount = _amount * Q_BURN_RATE / 100;
		
		info.users[msg.sender].balance -= _burnedAmount;
		
		info.totalFrozen -= _amount;
		info.users[msg.sender].frozen -= _amount;
		info.users[msg.sender].scaledPayout -= int256(_amount * info.scaledPayoutPerToken);
		info.scaledPayoutPerToken += _burnedAmount * FLOAT_SCALAR / info.totalFrozen;
		emit Transfer(address(this), msg.sender, _amount);
		emit Unfreeze(msg.sender, _amount);
		 
		}else{
		    
		info.totalFrozen -= _amount;
		info.users[msg.sender].frozen -= _amount;
		info.users[msg.sender].scaledPayout -= int256(_amount * info.scaledPayoutPerToken);
		emit Transfer(address(this), msg.sender, _amount);
		emit Unfreeze(msg.sender, _amount);
		
		}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: CutLoan(uint256), txdata: 0x276ead9c0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: LoanBurst
Function name: CutLoan(uint256)
PC address: 7865
Estimated Gas Usage: 34952 - 135997
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x93ecd2ecdfb91ab2fee28a8779a6adfe2851cda6.sol:170

function frozenOf(address _user) public view returns (uint256) {
		return info.users[_user].frozen;
	}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: CutLoan(uint256), txdata: 0x276ead9c0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0


time_used: 36050.101487636566 seconds
#@contract_info_time
0x93ecd2ecdfb91ab2fee28a8779a6adfe2851cda6.sol:0.5.11:LoanBurst:36050.101487636566:36100:60:36000
