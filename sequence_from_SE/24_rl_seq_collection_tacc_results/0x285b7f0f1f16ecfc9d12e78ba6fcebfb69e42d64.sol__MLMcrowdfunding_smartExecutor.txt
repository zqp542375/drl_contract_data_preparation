++++ 0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol  :  0.5.16  :  MLMcrowdfunding ++++
152293755344841835762139653667104514057915978597 is added into actors.
993370317642358223093005376778319921081173428846 is added into actors.
1226469905363936942573897619807385282821119234105 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 4733
['constructor']:writes at the last depth:['0', '2', '7', '8', '9', '10']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 77.03% coverage.
dynamic svars:['6', '0', '5']
static svars:['2', '0', '10', '7', '1', '8', '9', '4', '3', '51421440056055728346017419001665401074216449311']
Ending preprocessing.
preprocessing time(s): 100.6288468837738
contract coverage: 85.42%
getUserInfo(address) is not reachable
fallback is not reachable
Function Reads: State variables read in conditions
	newOwnerCandidate():[]
	setaddressSupportProject(address):['0']
	acceptOwner():['1']
	changeLevel33(uint8):['0']
	dateUntilFundsLocked():[]
	changeLevels4_L12(uint8):['0']
	changeprocentC(uint8):['0']
	transferTokens(address,address,uint256):['0', '4', '51421440056055728346017419001665401074216449311', '3']
	setaddressAdv(address):['0']
	setaddressRes(address):['0']
	withdrawReward():['6']
	setaddressPV(address):['0']
	getRefByUser(address):[]
	changeOwnerCandidate(address):['0']
	changeprocentD(uint8):['0']
	getUserInfo(address):[]
	fundsLockedtoWithdraw():[]
	owner():[]
	changeMinAmountOfEthToBeEffectiveRefferal(uint256):['0']
	addInvestment2(uint256,address):['0']
	changeprocentB(uint8):['0']
	changeLevel1(uint8):['0']
	changeLevel2(uint8):['0']
	changeprocentA(uint8):['0']
Function Writes: State variables written
	changeMinAmountOfEthToBeEffectiveRefferal(uint256):['2']
	acceptOwner():['0']
	changeprocentC(uint8):['10']
	setaddressSupportProject(address):['7']
	changeOwnerCandidate(address):['1']
	setaddressAdv(address):['8']
	changeprocentD(uint8):['10']
	changeprocentB(uint8):['10']
	changeLevel33(uint8):['7']
	setaddressRes(address):['9']
	changeLevel1(uint8):['7']
	changeLevel2(uint8):['7']
	changeLevels4_L12(uint8):['7']
	setaddressPV(address):['10']
	changeprocentA(uint8):['10']
	fallback:['6', '0', '5']
	withdrawReward():['6']
============================
iteration:3
targets:['acceptOwner()', 'getUserInfo(address)', 'withdrawReward()', 'transferTokens(address,address,uint256)', 'fallback']
['fallback']:writes at the last depth:[]
['fallback']:writes at the last depth:[]
['fallback']:writes at the last depth:[]
['fallback']:writes at the last depth:[]
['fallback']:writes at the last depth:[]
['changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['changeprocentC(uint8)']:writes at the last depth:['10']
['setaddressSupportProject(address)']:writes at the last depth:['7']
['changeOwnerCandidate(address)']:writes at the last depth:['1']
['setaddressAdv(address)']:writes at the last depth:['8']
['changeprocentD(uint8)']:writes at the last depth:['10']
['changeprocentB(uint8)']:writes at the last depth:['10']
['changeLevel33(uint8)']:writes at the last depth:['7']
['setaddressRes(address)']:writes at the last depth:['9']
['changeLevel1(uint8)']:writes at the last depth:['7']
['changeLevel2(uint8)']:writes at the last depth:['7']
['changeLevels4_L12(uint8)']:writes at the last depth:['7']
['setaddressPV(address)']:writes at the last depth:['10']
['changeprocentA(uint8)']:writes at the last depth:['10']
['addInvestment2(uint256,address)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback']:writes at the last depth:['6']
['withdrawReward()']:writes at the last depth:['6']
['fallback']:writes at the last depth:['6']
['fallback']:writes at the last depth:['6']
['fallback']:writes at the last depth:['6']
['fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:4
['fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback']:writes at the last depth:[]
['fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:5
['fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:6
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:7
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:8
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:9
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:10
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'withdrawReward()', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'withdrawReward()', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'withdrawReward()', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'withdrawReward()', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'withdrawReward()', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'withdrawReward()', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'withdrawReward()', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'withdrawReward()', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'withdrawReward()', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'withdrawReward()', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'withdrawReward()', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'withdrawReward()', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'withdrawReward()', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'withdrawReward()', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'withdrawReward()', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'withdrawReward()', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:11
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'fallback', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'fallback', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'fallback', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'fallback', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'fallback', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'fallback', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'fallback', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:12
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:13
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:14
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:15
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:16
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'addInvestment2(uint256,address)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'withdrawReward()']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:['6']
contract coverage: 85.42%
============================
iteration:17
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeMinAmountOfEthToBeEffectiveRefferal(uint256)']:writes at the last depth:['2']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentC(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressSupportProject(address)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['1']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressAdv(address)']:writes at the last depth:['8']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentD(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentB(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel33(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressRes(address)']:writes at the last depth:['9']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel1(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevel2(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeLevels4_L12(uint8)']:writes at the last depth:['7']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'setaddressPV(address)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'changeprocentA(uint8)']:writes at the last depth:['10']
['fallback', 'fallback', 'transferTokens(address,address,uint256)', 'addInvestment2(uint256,address)']:writes at the last depth:[]
contract coverage: 85.42%
============================
iteration:18
contract coverage: 85.42%
============================
iteration:19
contract coverage: 85.42%
============================
iteration:20
contract coverage: 85.42%
============================
iteration:21
contract coverage: 85.42%
============================
iteration:22
contract coverage: 85.42%
============================
iteration:23
contract coverage: 85.42%
============================
iteration:24
contract coverage: 85.42%
============================
iteration:25
contract coverage: 85.42%
============================
iteration:26
contract coverage: 85.42%
============================
iteration:27
contract coverage: 85.42%
============================
iteration:28
contract coverage: 85.42%
============================
iteration:29
contract coverage: 85.42%
============================
iteration:30
contract coverage: 85.42%
============================
iteration:31
contract coverage: 85.42%
============================
iteration:32
contract coverage: 85.42%
============================
iteration:33
contract coverage: 85.42%
============================
iteration:34
contract coverage: 85.42%
============================
iteration:35
contract coverage: 85.42%
============================
iteration:36
contract coverage: 85.42%
============================
iteration:37
contract coverage: 85.42%
============================
iteration:38
contract coverage: 85.42%
============================
iteration:39
contract coverage: 85.42%
============================
iteration:40
contract coverage: 85.42%
============================
iteration:41
contract coverage: 85.42%
============================
iteration:42
contract coverage: 85.42%
============================
iteration:43
contract coverage: 85.42%
============================
iteration:44
contract coverage: 85.42%
============================
iteration:45
contract coverage: 85.42%
============================
iteration:46
contract coverage: 85.42%
============================
iteration:47
contract coverage: 85.42%
============================
iteration:48
contract coverage: 85.42%
============================
iteration:49
contract coverage: 85.42%
============================
iteration:50
contract coverage: 85.42%
============================
iteration:51
contract coverage: 85.42%
============================
iteration:52
contract coverage: 85.42%
============================
iteration:53
contract coverage: 85.42%
============================
iteration:54
contract coverage: 85.42%
============================
iteration:55
contract coverage: 85.42%
============================
iteration:56
contract coverage: 85.42%
============================
iteration:57
contract coverage: 85.42%
============================
iteration:58
contract coverage: 85.42%
============================
iteration:59
contract coverage: 85.42%
============================
iteration:60
contract coverage: 85.42%
============================
iteration:61
contract coverage: 85.42%
============================
iteration:62
contract coverage: 85.42%
============================
iteration:63
contract coverage: 85.42%
============================
iteration:64
contract coverage: 85.42%
============================
iteration:65
contract coverage: 85.42%
============================
iteration:66
contract coverage: 85.42%
============================
iteration:67
contract coverage: 85.42%
============================
iteration:68
contract coverage: 85.42%
============================
iteration:69
contract coverage: 85.42%
============================
iteration:70
contract coverage: 85.42%
============================
iteration:71
contract coverage: 85.42%
============================
iteration:72
contract coverage: 85.42%
============================
iteration:73
contract coverage: 85.42%
============================
iteration:74
contract coverage: 85.42%
============================
iteration:75
contract coverage: 85.42%
============================
iteration:76
contract coverage: 85.42%
============================
iteration:77
contract coverage: 85.42%
============================
iteration:78
contract coverage: 85.42%
============================
iteration:79
contract coverage: 85.42%
============================
iteration:80
contract coverage: 85.42%
============================
iteration:81
contract coverage: 85.42%
============================
iteration:82
contract coverage: 85.42%
============================
iteration:83
contract coverage: 85.42%
============================
iteration:84
contract coverage: 85.42%
============================
iteration:85
contract coverage: 85.42%
============================
iteration:86
contract coverage: 85.42%
============================
iteration:87
contract coverage: 85.42%
============================
iteration:88
contract coverage: 85.42%
============================
iteration:89
contract coverage: 85.42%
============================
iteration:90
contract coverage: 85.42%
============================
iteration:91
contract coverage: 85.42%
============================
iteration:92
contract coverage: 85.42%
============================
iteration:93
contract coverage: 85.42%
============================
iteration:94
contract coverage: 85.42%
============================
iteration:95
contract coverage: 85.42%
============================
iteration:96
contract coverage: 85.42%
============================
iteration:97
contract coverage: 85.42%
============================
iteration:98
contract coverage: 85.42%
============================
iteration:99
contract coverage: 85.42%
============================
iteration:100
contract coverage: 85.42%
============================
iteration:101
contract coverage: 85.42%
============================
iteration:102
contract coverage: 85.42%
============================
iteration:103
contract coverage: 85.42%
============================
iteration:104
contract coverage: 85.42%
============================
iteration:105
contract coverage: 85.42%
#@statespace
14397 nodes, 14396 edges, 191656 total states
#@coverage
Achieved 5.88% coverage for code: 6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555067016345785d8a0000600255600a600760006101000a81548160ff021916908360ff160217905550600f600760016101000a81548160ff021916908360ff1602179055506014600760026101000a81548160ff021916908360ff1602179055506001600760036101000a81548160ff021916908360ff160217905550731a08070ffe5695ab0eb4612640eec11bf2cf58ee600760046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731aad1692aef5743767f33733d64b75031ac9d365600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ae0043ffa867c758c432c81e4ff75f8f1d684a6e600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d6d4d00905aa8caf30cc31ffb95d9a211cfb5039600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a8060146101000a81548160ff021916908360ff160217905550600a8060156101000a81548160ff021916908360ff160217905550601e600a60166101000a81548160ff021916908360ff160217905550600a8060176101000a81548160ff021916908360ff16021790555034801561028d57600080fd5b506127b88061029d6000396000f3fe60806040526004361061014b5760003560e01c806399eda48d116100b6578063d091b5501161006f578063d091b55014610f96578063d15ffaef14610fed578063ebbc49651461103e578063f3652beb14611055578063f8800fae14611093578063fdcd1878146110be5761014b565b806399eda48d14610dd3578063a64b6e5f14610e11578063ae6d4bb914610e8c578063b484b26d14610edd578063c885bc5814610f2e578063cec84cbc14610f455761014b565b8063524b50e511610108578063524b50e514610b52578063561a01b814610be35780635d06095314610c345780636386c1c714610c7257806389c3ef6c14610d515780638da5cb5b14610d7c5761014b565b80631a3e27c4146109c45780631d78daed146109ff5780632e1e9e1a14610a5a578063425ca06a14610a9857806342685fcb14610ad6578063513e685a14610b14575b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018057fe5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101da576109c2565b60003414156101f0576101eb6110fc565b6109c2565b662386f26fc1000034101561020457600080fd5b60008073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102ff57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610415565b601460003690501461031057600080fd5b61035e6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611363565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039657fe5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60003490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008082600f0154149050801561051757600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e01600081819054906101000a90046fffffffffffffffffffffffffffffffff168092919060010191906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550504282600f01819055505b61052e34836000015461137190919063ffffffff16565b82600001819055508160100160009054906101000a900460ff1615801561055a57506002548260000154115b1561061c5760018260100160006101000a81548160ff021916908315150217905550600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e01601081819054906101000a90046fffffffffffffffffffffffffffffffff168092919060010191906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505b60008090505b600c8160ff1610156107855760008061063a836113f9565b8092508193505050600060648334028161065057fe5b04905061066681886114d190919063ffffffff16565b965080600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101836fffffffffffffffffffffffffffffffff16600c81106106c857fe5b0160008282540192505081905550600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169750600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561077557505050610785565b5050508080600101915050610622565b50600760049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60149054906101000a900460ff1660ff168602816107e057fe5b049081150290604051600060405180830381858888f1935050505015801561080c573d6000803e3d6000fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60159054906101000a900460ff1660ff1686028161086757fe5b049081150290604051600060405180830381858888f19350505050158015610893573d6000803e3d6000fd5b50600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60169054906101000a900460ff1660ff168602816108ee57fe5b049081150290604051600060405180830381858888f1935050505015801561091a573d6000803e3d6000fd5b506000600a60179054906101000a900460ff1660ff16146109bd57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60179054906101000a900460ff1660ff1686028161098f57fe5b049081150290604051600060405180830381858888f193505050501580156109bb573d6000803e3d6000fd5b505b505050505b005b3480156109d057600080fd5b506109fd600480360360208110156109e757600080fd5b810190808035906020019092919050505061155a565b005b348015610a0b57600080fd5b50610a5860048036036040811015610a2257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ba565b005b348015610a6657600080fd5b50610a9660048036036020811015610a7d57600080fd5b81019080803560ff16906020019092919050505061165b565b005b348015610aa457600080fd5b50610ad460048036036020811015610abb57600080fd5b81019080803560ff1690602001909291905050506116cf565b005b348015610ae257600080fd5b50610b1260048036036020811015610af957600080fd5b81019080803560ff169060200190929190505050611743565b005b348015610b2057600080fd5b50610b5060048036036020811015610b3757600080fd5b81019080803560ff1690602001909291905050506117b7565b005b348015610b5e57600080fd5b50610ba160048036036020811015610b7557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061182b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bef57600080fd5b50610c3260048036036020811015610c0657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611894565b005b348015610c4057600080fd5b50610c7060048036036020811015610c5757600080fd5b81019080803560ff16906020019092919050505061192e565b005b348015610c7e57600080fd5b50610cc160048036036020811015610c9557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119a2565b6040518088815260200187600c60200280838360005b83811015610cf2578082015181840152602081019050610cd7565b50505050905001868152602001858152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200197505050505050505060405180910390f35b348015610d5d57600080fd5b50610d66611c34565b6040518082815260200191505060405180910390f35b348015610d8857600080fd5b50610d91611c3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ddf57600080fd5b50610e0f60048036036020811015610df657600080fd5b81019080803560ff169060200190929190505050611c5f565b005b348015610e1d57600080fd5b50610e8a60048036036060811015610e3457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cd3565b005b348015610e9857600080fd5b50610edb60048036036020811015610eaf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e5e565b005b348015610ee957600080fd5b50610f2c60048036036020811015610f0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ef8565b005b348015610f3a57600080fd5b50610f436110fc565b005b348015610f5157600080fd5b50610f9460048036036020811015610f6857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f92565b005b348015610fa257600080fd5b50610fab61202c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ff957600080fd5b5061103c6004803603602081101561101057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612052565b005b34801561104a57600080fd5b506110536120ec565b005b34801561106157600080fd5b506110916004803603602081101561107857600080fd5b81019080803560ff1690602001909291905050506121aa565b005b34801561109f57600080fd5b506110a861221e565b6040518082815260200191505060405180910390f35b3480156110ca57600080fd5b506110fa600480360360208110156110e157600080fd5b81019080803560ff169060200190929190505050612224565b005b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000339050600080905060008084600f015411801561116857506301e1338084600f0154420310155b80156111a65750600c84600e0160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16105b905060008090505b60088160ff1610156112a857600c8160ff16101580156111cb5750815b156111d5576112a8565b60006111e0826113f9565b905080915050806fffffffffffffffffffffffffffffffff1686600e0160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1610611294576000866001018360ff16600c811061124557fe5b0154111561128f57611273866001018360ff16600c811061126257fe5b01548561137190919063ffffffff16565b93506000866001018360ff16600c811061128957fe5b01819055505b61129a565b506112a8565b5080806001019150506111ae565b503373ffffffffffffffffffffffffffffffffffffffff167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9836040518082815260200191505060405180910390a261130e8285600d015461137190919063ffffffff16565b84600d01819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561135c573d6000803e3d6000fd5b5050505050565b600060148201519050919050565b6000808284019050838110156113ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060008360ff16141561142c57600760009054906101000a900460ff1660008160ff169150809050915091506114cc565b60018360ff16141561145c57600760019054906101000a900460ff1660008160ff169150809050915091506114cc565b60028360ff16141561148c57600760029054906101000a900460ff1660008160ff169150809050915091506114cc565b60088360ff1610156114be57600760039054906101000a900460ff16838160ff1691508060ff169050915091506114cc565b600080819150809050915091505b915091565b600082821115611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b057fe5b8060028190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461161057fe5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611656573d6000803e3d6000fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116b157fe5b80600a60156101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461172557fe5b80600760006101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461179957fe5b80600760016101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461180d57fe5b80600a60146101000a81548160ff021916908360ff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ea57fe5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461198457fe5b80600a60176101000a81548160ff021916908360ff16021790555050565b60006119ac612736565b6000806000806000600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549650600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600c806020026040519081016040528092919082600c8015611a72576020028201915b815481526020019060010190808311611a5e575b50505050509550600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d01549450600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e0160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169350600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e0160109054906101000a90046fffffffffffffffffffffffffffffffff169250600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600f01549150600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060100160009054906101000a900460ff169050919395979092949650565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cb557fe5b80600a60166101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d2957fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d83576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611dfd575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15611e2e57426004541115611e2d57600354611e2282476114d190919063ffffffff16565b11611e2c57600080fd5b5b5b611e5982828573ffffffffffffffffffffffffffffffffffffffff166122989092919063ffffffff16565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611eb457fe5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f4e57fe5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fe857fe5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120a857fe5b80600760046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461214657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461220057fe5b80600760026101000a81548160ff021916908360ff16021790555050565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461227a57fe5b80600760036101000a81548160ff021916908360ff16021790555050565b6122a583838360006122ab565b50505050565b6000808314156122be57600190506123ff565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480612338575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b156123cf57811561237f578373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505090506123ff565b8373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156123c5573d6000803e3d6000fd5b50600190506123ff565b6123fa84848773ffffffffffffffffffffffffffffffffffffffff166124079092919063ffffffff16565b600190505b949350505050565b6124d3838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506124d8565b505050565b6124f78273ffffffffffffffffffffffffffffffffffffffff16612723565b612569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106125b85780518252602082019150602081019050602083039250612595565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461261a576040519150601f19603f3d011682016040523d82523d6000602084013e61261f565b606091505b509150915081612697576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561271d578080602001905160208110156126b657600080fd5b810190808051906020019092919050505061271c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061275a602a913960400191505060405180910390fd5b5b50505050565b600080823b905060008111915050919050565b604051806101800160405280600c9060208202803883398082019150509050509056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820df0ec6218a661c4dd050e9e7cba7d3bf855c748d840169f857431933806d549e64736f6c63430005100032
#@coverage
Achieved 85.42% coverage for code: 60806040526004361061014b5760003560e01c806399eda48d116100b6578063d091b5501161006f578063d091b55014610f96578063d15ffaef14610fed578063ebbc49651461103e578063f3652beb14611055578063f8800fae14611093578063fdcd1878146110be5761014b565b806399eda48d14610dd3578063a64b6e5f14610e11578063ae6d4bb914610e8c578063b484b26d14610edd578063c885bc5814610f2e578063cec84cbc14610f455761014b565b8063524b50e511610108578063524b50e514610b52578063561a01b814610be35780635d06095314610c345780636386c1c714610c7257806389c3ef6c14610d515780638da5cb5b14610d7c5761014b565b80631a3e27c4146109c45780631d78daed146109ff5780632e1e9e1a14610a5a578063425ca06a14610a9857806342685fcb14610ad6578063513e685a14610b14575b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018057fe5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101da576109c2565b60003414156101f0576101eb6110fc565b6109c2565b662386f26fc1000034101561020457600080fd5b60008073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102ff57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610415565b601460003690501461031057600080fd5b61035e6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611363565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039657fe5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60003490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008082600f0154149050801561051757600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e01600081819054906101000a90046fffffffffffffffffffffffffffffffff168092919060010191906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550504282600f01819055505b61052e34836000015461137190919063ffffffff16565b82600001819055508160100160009054906101000a900460ff1615801561055a57506002548260000154115b1561061c5760018260100160006101000a81548160ff021916908315150217905550600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e01601081819054906101000a90046fffffffffffffffffffffffffffffffff168092919060010191906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505b60008090505b600c8160ff1610156107855760008061063a836113f9565b8092508193505050600060648334028161065057fe5b04905061066681886114d190919063ffffffff16565b965080600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101836fffffffffffffffffffffffffffffffff16600c81106106c857fe5b0160008282540192505081905550600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169750600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561077557505050610785565b5050508080600101915050610622565b50600760049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60149054906101000a900460ff1660ff168602816107e057fe5b049081150290604051600060405180830381858888f1935050505015801561080c573d6000803e3d6000fd5b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60159054906101000a900460ff1660ff1686028161086757fe5b049081150290604051600060405180830381858888f19350505050158015610893573d6000803e3d6000fd5b50600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60169054906101000a900460ff1660ff168602816108ee57fe5b049081150290604051600060405180830381858888f1935050505015801561091a573d6000803e3d6000fd5b506000600a60179054906101000a900460ff1660ff16146109bd57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6064600a60179054906101000a900460ff1660ff1686028161098f57fe5b049081150290604051600060405180830381858888f193505050501580156109bb573d6000803e3d6000fd5b505b505050505b005b3480156109d057600080fd5b506109fd600480360360208110156109e757600080fd5b810190808035906020019092919050505061155a565b005b348015610a0b57600080fd5b50610a5860048036036040811015610a2257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ba565b005b348015610a6657600080fd5b50610a9660048036036020811015610a7d57600080fd5b81019080803560ff16906020019092919050505061165b565b005b348015610aa457600080fd5b50610ad460048036036020811015610abb57600080fd5b81019080803560ff1690602001909291905050506116cf565b005b348015610ae257600080fd5b50610b1260048036036020811015610af957600080fd5b81019080803560ff169060200190929190505050611743565b005b348015610b2057600080fd5b50610b5060048036036020811015610b3757600080fd5b81019080803560ff1690602001909291905050506117b7565b005b348015610b5e57600080fd5b50610ba160048036036020811015610b7557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061182b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bef57600080fd5b50610c3260048036036020811015610c0657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611894565b005b348015610c4057600080fd5b50610c7060048036036020811015610c5757600080fd5b81019080803560ff16906020019092919050505061192e565b005b348015610c7e57600080fd5b50610cc160048036036020811015610c9557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119a2565b6040518088815260200187600c60200280838360005b83811015610cf2578082015181840152602081019050610cd7565b50505050905001868152602001858152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200197505050505050505060405180910390f35b348015610d5d57600080fd5b50610d66611c34565b6040518082815260200191505060405180910390f35b348015610d8857600080fd5b50610d91611c3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ddf57600080fd5b50610e0f60048036036020811015610df657600080fd5b81019080803560ff169060200190929190505050611c5f565b005b348015610e1d57600080fd5b50610e8a60048036036060811015610e3457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cd3565b005b348015610e9857600080fd5b50610edb60048036036020811015610eaf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e5e565b005b348015610ee957600080fd5b50610f2c60048036036020811015610f0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ef8565b005b348015610f3a57600080fd5b50610f436110fc565b005b348015610f5157600080fd5b50610f9460048036036020811015610f6857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f92565b005b348015610fa257600080fd5b50610fab61202c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ff957600080fd5b5061103c6004803603602081101561101057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612052565b005b34801561104a57600080fd5b506110536120ec565b005b34801561106157600080fd5b506110916004803603602081101561107857600080fd5b81019080803560ff1690602001909291905050506121aa565b005b34801561109f57600080fd5b506110a861221e565b6040518082815260200191505060405180910390f35b3480156110ca57600080fd5b506110fa600480360360208110156110e157600080fd5b81019080803560ff169060200190929190505050612224565b005b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000339050600080905060008084600f015411801561116857506301e1338084600f0154420310155b80156111a65750600c84600e0160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16105b905060008090505b60088160ff1610156112a857600c8160ff16101580156111cb5750815b156111d5576112a8565b60006111e0826113f9565b905080915050806fffffffffffffffffffffffffffffffff1686600e0160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1610611294576000866001018360ff16600c811061124557fe5b0154111561128f57611273866001018360ff16600c811061126257fe5b01548561137190919063ffffffff16565b93506000866001018360ff16600c811061128957fe5b01819055505b61129a565b506112a8565b5080806001019150506111ae565b503373ffffffffffffffffffffffffffffffffffffffff167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9836040518082815260200191505060405180910390a261130e8285600d015461137190919063ffffffff16565b84600d01819055508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561135c573d6000803e3d6000fd5b5050505050565b600060148201519050919050565b6000808284019050838110156113ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060008360ff16141561142c57600760009054906101000a900460ff1660008160ff169150809050915091506114cc565b60018360ff16141561145c57600760019054906101000a900460ff1660008160ff169150809050915091506114cc565b60028360ff16141561148c57600760029054906101000a900460ff1660008160ff169150809050915091506114cc565b60088360ff1610156114be57600760039054906101000a900460ff16838160ff1691508060ff169050915091506114cc565b600080819150809050915091505b915091565b600082821115611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b057fe5b8060028190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461161057fe5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611656573d6000803e3d6000fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116b157fe5b80600a60156101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461172557fe5b80600760006101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461179957fe5b80600760016101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461180d57fe5b80600a60146101000a81548160ff021916908360ff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ea57fe5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461198457fe5b80600a60176101000a81548160ff021916908360ff16021790555050565b60006119ac612736565b6000806000806000600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549650600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600c806020026040519081016040528092919082600c8015611a72576020028201915b815481526020019060010190808311611a5e575b50505050509550600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600d01549450600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e0160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169350600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600e0160109054906101000a90046fffffffffffffffffffffffffffffffff169250600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600f01549150600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060100160009054906101000a900460ff169050919395979092949650565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cb557fe5b80600a60166101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d2957fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d83576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611dfd575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15611e2e57426004541115611e2d57600354611e2282476114d190919063ffffffff16565b11611e2c57600080fd5b5b5b611e5982828573ffffffffffffffffffffffffffffffffffffffff166122989092919063ffffffff16565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611eb457fe5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f4e57fe5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fe857fe5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120a857fe5b80600760046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461214657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461220057fe5b80600760026101000a81548160ff021916908360ff16021790555050565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461227a57fe5b80600760036101000a81548160ff021916908360ff16021790555050565b6122a583838360006122ab565b50505050565b6000808314156122be57600190506123ff565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480612338575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b156123cf57811561237f578373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505090506123ff565b8373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156123c5573d6000803e3d6000fd5b50600190506123ff565b6123fa84848773ffffffffffffffffffffffffffffffffffffffff166124079092919063ffffffff16565b600190505b949350505050565b6124d3838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506124d8565b505050565b6124f78273ffffffffffffffffffffffffffffffffffffffff16612723565b612569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106125b85780518252602082019150602081019050602083039250612595565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461261a576040519150601f19603f3d011682016040523d82523d6000602084013e61261f565b606091505b509150915081612697576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561271d578080602001905160208110156126b657600080fd5b810190808051906020019092919050505061271c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061275a602a913960400191505060405180910390fd5b5b50505050565b600080823b905060008111915050919050565b604051806101800160405280600c9060208202803883398082019150509050509056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820df0ec6218a661c4dd050e9e7cba7d3bf855c748d840169f857431933806d549e64736f6c63430005100032
==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: fallback
PC address: 382
Estimated Gas Usage: 62 - 157
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:443

assert(msg.sender == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: fallback
PC address: 469
Estimated Gas Usage: 935 - 1360
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:445

if (msg.sender == owner) return;

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: fallback
PC address: 916
Estimated Gas Usage: 2481 - 6201
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:462

assert(ref != msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20913002b3b4001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0xe000000000000000000000000000000000000000, decoded_data: , value: 0x2386f26fc10000

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: fallback
PC address: 917
Estimated Gas Usage: 2491 - 6211
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:242

{
          addr := mload(add(bys,20))
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0xd6d4d00905aa8caf30cc31ffb95d9a211cfb5039, decoded_data: , value: 0x2386f26fc10000

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeMinAmountOfEthToBeEffectiveRefferal(uint256)
PC address: 5550
Estimated Gas Usage: 1100 - 1525
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: changeMinAmountOfEthToBeEffectiveRefferal(uint256), txdata: 0x1a3e27c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4, decoded_data: (89000978394172448247136913967462078193101635272413923732288966531572444742852,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeMinAmountOfEthToBeEffectiveRefferal(uint256)
PC address: 5551
Estimated Gas Usage: 1110 - 1535
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:230

function changeMinAmountOfEthToBeEffectiveRefferal(uint256 minAmount) onlyOwner public {
        minAmountOfEthToBeEffectiveRefferal = minAmount;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeMinAmountOfEthToBeEffectiveRefferal(uint256), txdata: 0x1a3e27c40000000000000000000000000000000008800440800200200180800820400440, decoded_data: (11298524204029100138457097365473985600,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: addInvestment2(uint256,address)
PC address: 5646
Estimated Gas Usage: 1155 - 1580
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: addInvestment2(uint256,address), txdata: 0x1d78daedadadadadadadadadadadadaddeadbeefdeadbeefdeadbeefdeadbeefdeadbeefadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: addInvestment2(uint256,address)
PC address: 5647
Estimated Gas Usage: 1165 - 1590
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:370

function addInvestment2( uint investment, address payable investorAddr) public onlyOwner  {
        investorAddr.transfer(investment);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: addInvestment2(uint256,address), txdata: 0x1d78daed00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0, '0x0000000000000000000000000000000000000000'), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeprocentB(uint8)
PC address: 5807
Estimated Gas Usage: 1150 - 1575
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentB(uint8), txdata: 0x2e1e9e1a0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeprocentB(uint8)
PC address: 5808
Estimated Gas Usage: 1160 - 1585
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:406

function changeprocentB( uint8 B) public onlyOwner  {
        b = B;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentB(uint8), txdata: 0x2e1e9e1a0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeLevel1(uint8)
PC address: 5923
Estimated Gas Usage: 1172 - 1597
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevel1(uint8), txdata: 0x425ca06a0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeLevel1(uint8)
PC address: 5924
Estimated Gas Usage: 1182 - 1607
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:300

function changeLevel1( uint8 L1) public  onlyOwner  {
        l1 = L1;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevel1(uint8), txdata: 0x425ca06a0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeLevel2(uint8)
PC address: 6039
Estimated Gas Usage: 1194 - 1619
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevel2(uint8), txdata: 0x42685fcb0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeLevel2(uint8)
PC address: 6040
Estimated Gas Usage: 1204 - 1629
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:304

function changeLevel2( uint8 L2) public onlyOwner  {
        l2 = L2;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevel2(uint8), txdata: 0x42685fcb0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeprocentA(uint8)
PC address: 6155
Estimated Gas Usage: 1216 - 1641
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentA(uint8), txdata: 0x513e685a0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeprocentA(uint8)
PC address: 6156
Estimated Gas Usage: 1226 - 1651
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:402

function changeprocentA( uint8 A) public onlyOwner  {
        a = A;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentA(uint8), txdata: 0x513e685a0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeOwnerCandidate(address)
PC address: 6376
Estimated Gas Usage: 1127 - 1552
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeOwnerCandidate(address), txdata: 0x561a01b80000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeOwnerCandidate(address)
PC address: 6377
Estimated Gas Usage: 1137 - 1562
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:213

function changeOwnerCandidate(address payable newOwner) public onlyOwner {
        newOwnerCandidate = newOwner;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeOwnerCandidate(address), txdata: 0x561a01b80000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeprocentD(uint8)
PC address: 6530
Estimated Gas Usage: 1149 - 1574
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentD(uint8), txdata: 0x5d0609530000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeprocentD(uint8)
PC address: 6531
Estimated Gas Usage: 1159 - 1584
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:412

function changeprocentD( uint8 D) public onlyOwner  {
        d = D;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentD(uint8), txdata: 0x5d0609530000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeprocentC(uint8)
PC address: 7347
Estimated Gas Usage: 1105 - 1530
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: changeprocentC(uint8), txdata: 0x99eda48d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeprocentC(uint8)
PC address: 7348
Estimated Gas Usage: 1115 - 1540
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:409

function changeprocentC( uint8 C) public onlyOwner  {
        c = C;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeprocentC(uint8), txdata: 0x99eda48d0000000000000000000000000040400020018004020020208010000800020240, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: transferTokens(address,address,uint256)
PC address: 7463
Estimated Gas Usage: 1187 - 1612
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5fadadadadadadadadadadadaddeadbeefdeadbeefdeadbeefdeadbeefdeadbeefadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: transferTokens(address,address,uint256)
PC address: 7464
Estimated Gas Usage: 1197 - 1622
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:251

function transferTokens(ERC20 token, address target, uint256 amount) onlyOwner public
    {
        if (target == address(0x0)) target = owner;
        
        if (token == ZERO_ADDRESS || token == ETH_ADDRESS) {
            if (dateUntilFundsLocked > now) require(address(this).balance.sub(amount) > fundsLockedtoWithdraw);
        }
        ERC20(token).universalTransfer(target, amount);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: MLMcrowdfunding
Function name: transferTokens(address,address,uint256)
PC address: 7692
Estimated Gas Usage: 2104 - 2529
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:256

if (dateUntilFundsLocked > now) require(address(this).balance.sub(amount) > fundsLockedtoWithdraw)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0101010101010101010101010101010101010101', 0), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: setaddressAdv(address)
PC address: 7858
Estimated Gas Usage: 1149 - 1574
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressAdv(address), txdata: 0xae6d4bb90000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: setaddressAdv(address)
PC address: 7859
Estimated Gas Usage: 1159 - 1584
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:423

function setaddressAdv(address payable addr ) public onlyOwner {
      
        addressAdv = addr;
        
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressAdv(address), txdata: 0xae6d4bb90000000000000000000000000000000020018000040000018000100004102000, decoded_data: ('0x0000000020018000040000018000100004102000',), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: setaddressRes(address)
PC address: 8012
Estimated Gas Usage: 1171 - 1596
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressRes(address), txdata: 0xb484b26d0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: setaddressRes(address)
PC address: 8013
Estimated Gas Usage: 1181 - 1606
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:434

function setaddressRes(address payable addr ) public onlyOwner {
      
        addressRes = addr;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressRes(address), txdata: 0xb484b26d0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: setaddressPV(address)
PC address: 8166
Estimated Gas Usage: 1215 - 1640
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressPV(address), txdata: 0xcec84cbc0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: setaddressPV(address)
PC address: 8167
Estimated Gas Usage: 1225 - 1650
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:429

function setaddressPV(address payable addr ) public onlyOwner {
      
        addressPV = addr;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressPV(address), txdata: 0xcec84cbc0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: setaddressSupportProject(address)
PC address: 8358
Estimated Gas Usage: 1126 - 1551
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressSupportProject(address), txdata: 0xd15ffaef0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: setaddressSupportProject(address)
PC address: 8359
Estimated Gas Usage: 1136 - 1561
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:418

function setaddressSupportProject(address payable addr ) public onlyOwner {
      
        addressSupportProject = addr;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setaddressSupportProject(address), txdata: 0xd15ffaef0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: acceptOwner()
PC address: 8513
Estimated Gas Usage: 1060 - 1485
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:218

require(msg.sender == newOwnerCandidate)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: acceptOwner(), txdata: 0xebbc4965, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeLevel33(uint8)
PC address: 8702
Estimated Gas Usage: 1170 - 1595
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevel33(uint8), txdata: 0xf3652beb0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeLevel33(uint8)
PC address: 8703
Estimated Gas Usage: 1180 - 1605
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:307

function changeLevel33( uint8 L3) public onlyOwner  {
        l3 = L3;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevel33(uint8), txdata: 0xf3652beb0000000000000000000000000000002020022010204010040840018040000004, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MLMcrowdfunding
Function name: changeLevels4_L12(uint8)
PC address: 8824
Estimated Gas Usage: 1214 - 1639
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:209

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevels4_L12(uint8), txdata: 0xfdcd18780000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MLMcrowdfunding
Function name: changeLevels4_L12(uint8)
PC address: 8825
Estimated Gas Usage: 1224 - 1649
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:310

function changeLevels4_L12( uint8 L4_L8) public onlyOwner  {
        l4_l8 = L4_L8;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeLevels4_L12(uint8), txdata: 0xfdcd18780000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MLMcrowdfunding
Function name: transferTokens(address,address,uint256)
PC address: 9707
Estimated Gas Usage: 4856 - 42193
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:127

address(token).call(data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000000101400102012001400101010140028002040101100201010101010440010140, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0x0000000000000000000000000000000000000000', 454521434585273425276277365146035338803544053972999873696238918729491087680), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MLMcrowdfunding
Function name: transferTokens(address,address,uint256)
PC address: 9732
Estimated Gas Usage: 4856 - 42193
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000101080101010101014001018008010101010101010101010101080101010001, decoded_data: ('0x0000000000000000000000000000000000000001', '0x0000000000000000000000000000000000000000', 454134936684491045417530500144424320858264540634125495034274582817480441857), value: 0x0


time_used: 36139.120175123215 seconds
#@contract_info_time
0x285b7f0f1f16ecfc9d12e78ba6fcebfb69e42d64.sol:0.5.16:MLMcrowdfunding:36139.120175123215:36100:60:36000
