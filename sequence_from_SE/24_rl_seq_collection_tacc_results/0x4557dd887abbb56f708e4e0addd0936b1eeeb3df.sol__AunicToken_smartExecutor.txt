++++ 0x4557dd887abbb56f708e4e0addd0936b1eeeb3df.sol  :  0.5.13  :  AunicToken ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 5437
['constructor']:writes at the last depth:['0', '3', '4', '7', '8', '9', '10', '1', '2']
preprocessing: Achieved 99.43% coverage.
dynamic svars:['7', '8', '2', '6', '5']
static svars:['0', '10', '3', '4', '1', '9']
Ending preprocessing.
preprocessing time(s): 81.89928126335144
contract coverage: 77.67%
symbol() is not reachable
name() is not reachable
Function Reads: State variables read in conditions
	removeBlackList(address):['0']
	MAX_UINT():[]
	transferOwnership(address):['0']
	destroyBlackFunds(address):['0', '6', '10']
	redeem(uint256):['0', '1']
	allowance(address,address):['10']
	basisPointsRate():[]
	isBlackListed(address):[]
	symbol():[]
	transfer(address,uint256):['0', '6', '3', '2']
	setParams(uint256,uint256):['0']
	issue(uint256):['0', '1']
	balanceOf(address):['10']
	pause():['0']
	getOwner():[]
	owner():[]
	unpause():['0']
	getBlackListStatus(address):[]
	allowed(address,address):[]
	paused():[]
	balances(address):[]
	decimals():[]
	maximumFee():[]
	_totalSupply():[]
	addBlackList(address):['0']
	totalSupply():['10']
	transferFrom(address,address,uint256):['0', '6', '3', '5', '2']
	upgradedAddress():[]
	name():[]
	deprecate(address):['0']
	approve(address,uint256):['10', '5']
	deprecated():[]
Function Writes: State variables written
	unpause():['0']
	pause():['0']
	deprecate(address):['10']
	setParams(uint256,uint256):['3', '4']
	removeBlackList(address):['6']
	transferOwnership(address):['0']
	addBlackList(address):['6']
	redeem(uint256):['1', '2']
	approve(address,uint256):['5']
	issue(uint256):['2', '1']
	destroyBlackFunds(address):['2', '1']
	transfer(address,uint256):['2']
	transferFrom(address,address,uint256):['5', '2']
============================
iteration:3
targets:['totalSupply()', 'destroyBlackFunds(address)', 'balanceOf(address)', 'allowance(address,address)', 'unpause()', 'approve(address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'symbol()', 'name()', 'pause()']
['pause()']:writes at the last depth:['0']
['transferOwnership(address)']:writes at the last depth:['0']
['removeBlackList(address)']:writes at the last depth:['6']
['addBlackList(address)']:writes at the last depth:['6']
['deprecate(address)']:writes at the last depth:['10']
['setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['redeem(uint256)']:writes at the last depth:['2', '1']
['approve(address,uint256)']:writes at the last depth:['5']
['issue(uint256)']:writes at the last depth:['2', '1']
['approve(address,uint256)']:writes at the last depth:['5']
['transfer(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 77.67%
============================
iteration:4
['transferFrom(address,address,uint256)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'redeem(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'issue(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 77.67%
============================
iteration:5
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'redeem(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'issue(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 77.67%
============================
iteration:6
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 77.67%
============================
iteration:7
contract coverage: 77.67%
============================
iteration:8
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 77.67%
============================
iteration:9
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'redeem(uint256)']:writes at the last depth:['', '1']
contract coverage: 77.67%
============================
iteration:10
contract coverage: 77.67%
============================
iteration:11
contract coverage: 77.67%
============================
iteration:12
contract coverage: 77.67%
============================
iteration:13
contract coverage: 77.67%
============================
iteration:14
contract coverage: 86.30%
============================
iteration:15
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'balanceOf(address)']:writes at the last depth:[]
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'allowance(address,address)']:writes at the last depth:[]
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'redeem(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'deprecate(address)', 'transfer(address,uint256)']:writes at the last depth:[]
contract coverage: 86.35%
============================
iteration:16
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addBlackList(address)', 'addBlackList(address)']:writes at the last depth:['6']
contract coverage: 86.35%
============================
iteration:17
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'redeem(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'issue(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'removeBlackList(address)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 86.41%
============================
iteration:18
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'deprecate(address)']:writes at the last depth:['10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'redeem(uint256)']:writes at the last depth:['2', '1']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'issue(uint256)']:writes at the last depth:['2', '1']
contract coverage: 86.57%
============================
iteration:19
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'pause()', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'pause()', 'addBlackList(address)']:writes at the last depth:['6']
contract coverage: 86.57%
============================
iteration:20
contract coverage: 86.57%
============================
iteration:21
contract coverage: 86.63%
============================
iteration:22
['transferFrom(address,address,uint256)', 'approve(address,uint256)', 'pause()']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'approve(address,uint256)', 'removeBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'approve(address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'approve(address,uint256)', 'redeem(uint256)']:writes at the last depth:['', '1']
['transferFrom(address,address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 86.63%
============================
iteration:23
contract coverage: 86.63%
============================
iteration:24
contract coverage: 86.63%
============================
iteration:25
contract coverage: 86.63%
============================
iteration:26
contract coverage: 86.63%
============================
iteration:27
contract coverage: 86.63%
============================
iteration:28
contract coverage: 86.63%
============================
iteration:29
contract coverage: 86.63%
============================
iteration:30
contract coverage: 86.63%
============================
iteration:31
contract coverage: 86.63%
============================
iteration:32
contract coverage: 86.63%
============================
iteration:33
contract coverage: 86.63%
============================
iteration:34
contract coverage: 86.63%
============================
iteration:35
contract coverage: 86.63%
============================
iteration:36
contract coverage: 86.63%
============================
iteration:37
contract coverage: 86.63%
============================
iteration:38
contract coverage: 86.63%
============================
iteration:39
contract coverage: 86.63%
============================
iteration:40
contract coverage: 86.63%
============================
iteration:41
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 86.63%
============================
iteration:42
contract coverage: 86.63%
============================
iteration:43
contract coverage: 86.63%
============================
iteration:44
contract coverage: 86.63%
============================
iteration:45
['approve(address,uint256)', 'pause()']:writes at the last depth:['0']
['approve(address,uint256)', 'removeBlackList(address)']:writes at the last depth:['6']
['approve(address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['approve(address,uint256)', 'deprecate(address)']:writes at the last depth:['10']
['approve(address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['approve(address,uint256)', 'setParams(uint256,uint256)']:writes at the last depth:['3', '4']
['approve(address,uint256)', 'redeem(uint256)']:writes at the last depth:['0', '1']
['approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['2']
['approve(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
['approve(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '2']
contract coverage: 86.63%
============================
iteration:46
contract coverage: 86.63%
============================
iteration:47
contract coverage: 86.63%
============================
iteration:48
contract coverage: 86.63%
============================
iteration:49
['approve(address,uint256)', 'redeem(uint256)', 'deprecate(address)']:writes at the last depth:['10']
['approve(address,uint256)', 'redeem(uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['approve(address,uint256)', 'redeem(uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 86.63%
============================
iteration:50
contract coverage: 86.63%
============================
iteration:51
['approve(address,uint256)', 'redeem(uint256)', 'approve(address,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['approve(address,uint256)', 'redeem(uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
contract coverage: 86.68%
============================
iteration:52
contract coverage: 86.68%
============================
iteration:53
contract coverage: 86.68%
============================
iteration:54
['approve(address,uint256)', 'setParams(uint256,uint256)', 'addBlackList(address)']:writes at the last depth:['6']
['approve(address,uint256)', 'setParams(uint256,uint256)', 'deprecate(address)']:writes at the last depth:['10']
contract coverage: 86.68%
============================
iteration:55
contract coverage: 86.68%
============================
iteration:56
contract coverage: 86.68%
============================
iteration:57
contract coverage: 86.68%
============================
iteration:58
contract coverage: 86.68%
============================
iteration:59
contract coverage: 86.68%
============================
iteration:60
contract coverage: 86.68%
============================
iteration:61
contract coverage: 86.68%
============================
iteration:62
contract coverage: 86.68%
============================
iteration:63
contract coverage: 86.68%
============================
iteration:64
contract coverage: 86.68%
============================
iteration:65
contract coverage: 86.68%
============================
iteration:66
contract coverage: 86.68%
============================
iteration:67
contract coverage: 86.68%
============================
iteration:68
contract coverage: 86.68%
============================
iteration:69
contract coverage: 86.68%
============================
iteration:70
contract coverage: 86.68%
#@statespace
4225 nodes, 4224 edges, 54749 total states
#@coverage
Achieved 4.87% coverage for code: 608060405260008060146101000a81548160ff021916908315150217905550600060035560006004556040518060400160405280600581526020017f41554e49430000000000000000000000000000000000000000000000000000008152506007908051906020019062000075929190620001b1565b506040518060400160405280600581526020017f41554e494300000000000000000000000000000000000000000000000000000081525060089080519060200190620000c3929190620001b1565b5060126009556000600a60146101000a81548160ff021916908315150217905550348015620000f157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506a084595161401484a000000600181905550600154600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001f457805160ff191683800117855562000225565b8280016001018555821562000225579182015b828111156200022457825182559160200191906001019062000207565b5b50905062000234919062000238565b5090565b6200025d91905b80821115620002595760008160009055506001016200023f565b5090565b90565b612d3080620002706000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063db006a75116100a2578063e4997dc511610071578063e4997dc5146109d5578063e5b5019a14610a19578063f2fde38b14610a37578063f3bdc22814610a7b576101f0565b8063db006a751461089d578063dd62ed3e146108e3578063dd644f721461095b578063e47d606014610979576101f0565b806395d89b41116100de57806395d89b4114610736578063a9059cbb146107b9578063c0324c771461081f578063cc872b6614610857576101f0565b806370a08231146106405780638456cb5914610698578063893d20e8146106a25780638da5cb5b146106ec576101f0565b806327e235e3116101875780633f4ba83a116101565780633f4ba83a1461054057806359bf1abe1461054a5780635c658165146105a65780635c975abb1461061e576101f0565b806327e235e31461048e578063313ce567146104e657806335390714146105045780633eaaf86b14610522576101f0565b80630ecb93c0116101c35780630ecb93c01461035c57806318160ddd146103a057806323b872dd146103be57806326976e3f14610444576101f0565b806306fdde03146101f55780630753c30c14610278578063095ea7b3146102d45780630e136b191461033a575b600080fd5b6101fd610abf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023d578082015181840152602081019050610222565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ba6004803603602081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b5d565b604051808215151515815260200191505060405180910390f35b610320600480360360408110156102ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c80565b604051808215151515815260200191505060405180910390f35b610342610de0565b604051808215151515815260200191505060405180910390f35b61039e6004803603602081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df3565b005b6103a8610f0a565b6040518082815260200191505060405180910390f35b61042a600480360360608110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fd4565b604051808215151515815260200191505060405180910390f35b61044c6111c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104d0600480360360208110156104a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111e9565b6040518082815260200191505060405180910390f35b6104ee611201565b6040518082815260200191505060405180910390f35b61050c611207565b6040518082815260200191505060405180910390f35b61052a61120d565b6040518082815260200191505060405180910390f35b610548611213565b005b61058c6004803603602081101561056057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112cd565b604051808215151515815260200191505060405180910390f35b610608600480360360408110156105bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611323565b6040518082815260200191505060405180910390f35b610626611348565b604051808215151515815260200191505060405180910390f35b6106826004803603602081101561065657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061135b565b6040518082815260200191505060405180910390f35b6106a0611464565b005b6106aa611520565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106f4611549565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61073e61156e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077e578082015181840152602081019050610763565b50505050905090810190601f1680156107ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610805600480360360408110156107cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061160c565b604051808215151515815260200191505060405180910390f35b6108556004803603604081101561083557600080fd5b8101908080359060200190929190803590602001909291905050506117c5565b005b6108836004803603602081101561086d57600080fd5b81019080803590602001909291905050506118a4565b604051808215151515815260200191505060405180910390f35b6108c9600480360360208110156108b357600080fd5b8101908080359060200190929190505050611a9d565b604051808215151515815260200191505060405180910390f35b610945600480360360408110156108f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c32565b6040518082815260200191505060405180910390f35b610963611d71565b6040518082815260200191505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d77565b604051808215151515815260200191505060405180910390f35b610a17600480360360208110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d97565b005b610a21611eae565b6040518082815260200191505060405180910390f35b610a7960048036036020811015610a4d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ed2565b005b610abd60048036036020811015610a9157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fa3565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb857600080fd5b6001600a60146101000a81548160ff02191690831515021790555081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160019050919050565b600060406004810160003690501015610c9857600080fd5b600a60149054906101000a900460ff1615610dcc57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333386866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b505050506040513d6020811015610db457600080fd5b81019080805190602001909291905050509150610dd9565b610dd68484612123565b91505b5092915050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4c57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610fcb57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8957600080fd5b505afa158015610f9d573d6000803e3d6000fd5b505050506040513d6020811015610fb357600080fd5b81019080805190602001909291905050509050610fd1565b60015490505b90565b60008060149054906101000a900460ff1615610fef57600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561104657600080fd5b600a60149054906101000a900460ff16156111ae57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338686866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b15801561116c57600080fd5b505af1158015611180573d6000803e3d6000fd5b505050506040513d602081101561119657600080fd5b810190808051906020019092919050505090506111bc565b6111b98484846122c4565b90505b9392505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126c57600080fd5b600060149054906101000a900460ff1661128557600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561145357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561141157600080fd5b505afa158015611425573d6000803e3d6000fd5b505050506040513d602081101561143b57600080fd5b8101908080519060200190929190505050905061145f565b61145c82612772565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114bd57600080fd5b600060149054906101000a900460ff16156114d757600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116045780601f106115d957610100808354040283529160200191611604565b820191906000526020600020905b8154815290600101906020018083116115e757829003601f168201915b505050505081565b60008060149054906101000a900460ff161561162757600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561167e57600080fd5b600a60149054906101000a900460ff16156117b257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3385856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561177057600080fd5b505af1158015611784573d6000803e3d6000fd5b505050506040513d602081101561179a57600080fd5b810190808051906020019092919050505090506117bf565b6117bc83836127bb565b90505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461181e57600080fd5b6014821061182b57600080fd5b6032811061183857600080fd5b81600381905550611857600954600a0a82612bde90919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ff57600080fd5b60015482600154011161191157600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401116119df57600080fd5b81600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a826040518082815260200191505060405180910390a160019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611af857600080fd5b816001541015611b0757600080fd5b81600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611b7457600080fd5b8160016000828254039250508190555081600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44826040518082815260200191505060405180910390a160019050919050565b6000600a60149054906101000a900460ff1615611d5e57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611d1c57600080fd5b505afa158015611d30573d6000803e3d6000fd5b505050506040513d6020811015611d4657600080fd5b81019080805190602001909291905050509050611d6b565b611d688383612c15565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611df057600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f2b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611fa057806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ffc57600080fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661205257600080fd5b600061205d8261135b565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60006040600481016000369050101561213b57600080fd5b600083141580156121c957506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156121d357600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000606060048101600036905010156122dc57600080fd5b6000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061238861271061237a60035488612bde90919063ffffffff16565b612c9c90919063ffffffff16565b905060045481111561239a5760045490505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821015612456576123d58583612cb590919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600061246b8287612cb590919063ffffffff16565b90506124bf86600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cb590919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061255481600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008211156126fe5761261382600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a360019450505050509392505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000604060048101600036905010156127d357600080fd5b60006127fe6127106127f060035487612bde90919063ffffffff16565b612c9c90919063ffffffff16565b90506004548111156128105760045490505b60006128258286612cb590919063ffffffff16565b905061287985600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cb590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061290e81600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000821115612ab8576129cd82600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b612ac186612ce8565b15612b6c5760008690508073ffffffffffffffffffffffffffffffffffffffff16633b66d02b33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015612b5257600080fd5b505af1158015612b66573d6000803e3d6000fd5b50505050505b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a36001935050505092915050565b600080831415612bf15760009050612c0f565b6000828402905082848281612c0257fe5b0414612c0a57fe5b809150505b92915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828481612ca857fe5b0490508091505092915050565b600082821115612cc157fe5b818303905092915050565b600080828401905083811015612cde57fe5b8091505092915050565b600080823b90506000811191505091905056fea265627a7a72315820f80da8b86a2ed869b0906f500f58e58add583cf5f2afa3ce8e18c832180e889164736f6c634300050d0032
#@coverage
Achieved 86.68% coverage for code: 608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063db006a75116100a2578063e4997dc511610071578063e4997dc5146109d5578063e5b5019a14610a19578063f2fde38b14610a37578063f3bdc22814610a7b576101f0565b8063db006a751461089d578063dd62ed3e146108e3578063dd644f721461095b578063e47d606014610979576101f0565b806395d89b41116100de57806395d89b4114610736578063a9059cbb146107b9578063c0324c771461081f578063cc872b6614610857576101f0565b806370a08231146106405780638456cb5914610698578063893d20e8146106a25780638da5cb5b146106ec576101f0565b806327e235e3116101875780633f4ba83a116101565780633f4ba83a1461054057806359bf1abe1461054a5780635c658165146105a65780635c975abb1461061e576101f0565b806327e235e31461048e578063313ce567146104e657806335390714146105045780633eaaf86b14610522576101f0565b80630ecb93c0116101c35780630ecb93c01461035c57806318160ddd146103a057806323b872dd146103be57806326976e3f14610444576101f0565b806306fdde03146101f55780630753c30c14610278578063095ea7b3146102d45780630e136b191461033a575b600080fd5b6101fd610abf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023d578082015181840152602081019050610222565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ba6004803603602081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b5d565b604051808215151515815260200191505060405180910390f35b610320600480360360408110156102ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c80565b604051808215151515815260200191505060405180910390f35b610342610de0565b604051808215151515815260200191505060405180910390f35b61039e6004803603602081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610df3565b005b6103a8610f0a565b6040518082815260200191505060405180910390f35b61042a600480360360608110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fd4565b604051808215151515815260200191505060405180910390f35b61044c6111c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104d0600480360360208110156104a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111e9565b6040518082815260200191505060405180910390f35b6104ee611201565b6040518082815260200191505060405180910390f35b61050c611207565b6040518082815260200191505060405180910390f35b61052a61120d565b6040518082815260200191505060405180910390f35b610548611213565b005b61058c6004803603602081101561056057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112cd565b604051808215151515815260200191505060405180910390f35b610608600480360360408110156105bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611323565b6040518082815260200191505060405180910390f35b610626611348565b604051808215151515815260200191505060405180910390f35b6106826004803603602081101561065657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061135b565b6040518082815260200191505060405180910390f35b6106a0611464565b005b6106aa611520565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106f4611549565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61073e61156e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077e578082015181840152602081019050610763565b50505050905090810190601f1680156107ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610805600480360360408110156107cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061160c565b604051808215151515815260200191505060405180910390f35b6108556004803603604081101561083557600080fd5b8101908080359060200190929190803590602001909291905050506117c5565b005b6108836004803603602081101561086d57600080fd5b81019080803590602001909291905050506118a4565b604051808215151515815260200191505060405180910390f35b6108c9600480360360208110156108b357600080fd5b8101908080359060200190929190505050611a9d565b604051808215151515815260200191505060405180910390f35b610945600480360360408110156108f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c32565b6040518082815260200191505060405180910390f35b610963611d71565b6040518082815260200191505060405180910390f35b6109bb6004803603602081101561098f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d77565b604051808215151515815260200191505060405180910390f35b610a17600480360360208110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d97565b005b610a21611eae565b6040518082815260200191505060405180910390f35b610a7960048036036020811015610a4d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ed2565b005b610abd60048036036020811015610a9157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fa3565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb857600080fd5b6001600a60146101000a81548160ff02191690831515021790555081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160019050919050565b600060406004810160003690501015610c9857600080fd5b600a60149054906101000a900460ff1615610dcc57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333386866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b505050506040513d6020811015610db457600080fd5b81019080805190602001909291905050509150610dd9565b610dd68484612123565b91505b5092915050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4c57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610fcb57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8957600080fd5b505afa158015610f9d573d6000803e3d6000fd5b505050506040513d6020811015610fb357600080fd5b81019080805190602001909291905050509050610fd1565b60015490505b90565b60008060149054906101000a900460ff1615610fef57600080fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561104657600080fd5b600a60149054906101000a900460ff16156111ae57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338686866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050602060405180830381600087803b15801561116c57600080fd5b505af1158015611180573d6000803e3d6000fd5b505050506040513d602081101561119657600080fd5b810190808051906020019092919050505090506111bc565b6111b98484846122c4565b90505b9392505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126c57600080fd5b600060149054906101000a900460ff1661128557600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561145357600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561141157600080fd5b505afa158015611425573d6000803e3d6000fd5b505050506040513d602081101561143b57600080fd5b8101908080519060200190929190505050905061145f565b61145c82612772565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114bd57600080fd5b600060149054906101000a900460ff16156114d757600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116045780601f106115d957610100808354040283529160200191611604565b820191906000526020600020905b8154815290600101906020018083116115e757829003601f168201915b505050505081565b60008060149054906101000a900460ff161561162757600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561167e57600080fd5b600a60149054906101000a900460ff16156117b257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3385856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561177057600080fd5b505af1158015611784573d6000803e3d6000fd5b505050506040513d602081101561179a57600080fd5b810190808051906020019092919050505090506117bf565b6117bc83836127bb565b90505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461181e57600080fd5b6014821061182b57600080fd5b6032811061183857600080fd5b81600381905550611857600954600a0a82612bde90919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ff57600080fd5b60015482600154011161191157600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401116119df57600080fd5b81600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a826040518082815260200191505060405180910390a160019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611af857600080fd5b816001541015611b0757600080fd5b81600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611b7457600080fd5b8160016000828254039250508190555081600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44826040518082815260200191505060405180910390a160019050919050565b6000600a60149054906101000a900460ff1615611d5e57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611d1c57600080fd5b505afa158015611d30573d6000803e3d6000fd5b505050506040513d6020811015611d4657600080fd5b81019080805190602001909291905050509050611d6b565b611d688383612c15565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611df057600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f2b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611fa057806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ffc57600080fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661205257600080fd5b600061205d8261135b565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60006040600481016000369050101561213b57600080fd5b600083141580156121c957506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156121d357600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000606060048101600036905010156122dc57600080fd5b6000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061238861271061237a60035488612bde90919063ffffffff16565b612c9c90919063ffffffff16565b905060045481111561239a5760045490505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821015612456576123d58583612cb590919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600061246b8287612cb590919063ffffffff16565b90506124bf86600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cb590919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061255481600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008211156126fe5761261382600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a360019450505050509392505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000604060048101600036905010156127d357600080fd5b60006127fe6127106127f060035487612bde90919063ffffffff16565b612c9c90919063ffffffff16565b90506004548111156128105760045490505b60006128258286612cb590919063ffffffff16565b905061287985600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cb590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061290e81600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000821115612ab8576129cd82600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ccc90919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35b612ac186612ce8565b15612b6c5760008690508073ffffffffffffffffffffffffffffffffffffffff16633b66d02b33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015612b5257600080fd5b505af1158015612b66573d6000803e3d6000fd5b50505050505b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a36001935050505092915050565b600080831415612bf15760009050612c0f565b6000828402905082848281612c0257fe5b0414612c0a57fe5b809150505b92915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828481612ca857fe5b0490508091505092915050565b600082821115612cc157fe5b818303905092915050565b600080828401905083811015612cde57fe5b8091505092915050565b600080823b90506000811191505091905056fea265627a7a72315820f80da8b86a2ed869b0906f500f58e58add583cf5f2afa3ce8e18c832180e889164736f6c634300050d0032
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AunicToken
Function name: transfer(address,uint256)
PC address: 11093
Estimated Gas Usage: 21351 - 98675
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x4557dd887abbb56f708e4e0addd0936b1eeeb3df.sol:95

receiver.tokenFallback(msg.sender, sendAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transfer(address,uint256), txdata: 0xa9059cbb000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', 2), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AunicToken
Function name: transfer(address,uint256)
PC address: 11456
Estimated Gas Usage: 5999 - 7464
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4557dd887abbb56f708e4e0addd0936b1eeeb3df.sol:87

balances[msg.sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb00000000000000000000000000000000000000000000000000000000000000005254085f95b1ac090a04a6420000000000000004000000000010000100000000, decoded_data: ('0x0000000000000000000000000000000000000000', 37238126528199557319478315062090192493287558575800129273559879823978427056128), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AunicToken
Function name: transferFrom(address,address,uint256)
PC address: 11456
Estimated Gas Usage: 6079 - 7734
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4557dd887abbb56f708e4e0addd0936b1eeeb3df.sol:126

_allowance.sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transferFrom(address,address,uint256), txdata: 0x23b872ddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0000000000000000000000000000000000000000080ea18d110e045c5063e9c159029311d324819a85c0db80bc197a512884a64b, value: 0x0


time_used: 36059.88399195671 seconds
#@contract_info_time
0x4557dd887abbb56f708e4e0addd0936b1eeeb3df.sol:0.5.13:AunicToken:36059.88399195671:36100:60:36000
