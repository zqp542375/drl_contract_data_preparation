++++ 0x2b6695a4a36f388980c559137135fb2906d6f20f.sol  :  0.4.24  :  Berry ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 5338
['constructor']:writes at the last depth:['9', '2', '4', '5', '6', '6', '6', '6', '6', '6', '6', '7', '1', '0']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 99.64% coverage.
dynamic svars:['4', '5', '6', '0', '8', '10', '11', '12']
static svars:['9', '1', '3', '2']
Ending preprocessing.
preprocessing time(s): 103.60732746124268
contract coverage: 95.67%
note() is not reachable
Function Reads: State variables read in conditions
	name():[]
	approve(address,uint256):['8']
	totalSupply():[]
	addTokenLockDate(address,uint256,uint256):['2', '10']
	lockVolumeAddress(address):[]
	transferFrom(address,address,uint256):['2', '3', '9', '11', '10']
	note():[]
	addressburn(address,uint256):['2']
	noTokenLocked():[]
	decimals():[]
	burn(uint256):['2', '0']
	transferEnabled():[]
	unlockAllTokens():['2']
	decreaseApproval(address,uint256):['8']
	setAdmin(address):['2', '3', '8']
	balanceOf(address):[]
	getMinLockedAmount(address):['10']
	canTransferIfLocked(address,uint256):['10']
	addressLockTransfer(address,bool):['2']
	owner():[]
	symbol():[]
	mint(uint256):['2', '0']
	LockTransferAddress(address):[]
	transfer(address,uint256):['2', '3', '9', '11', '12', '0', '10']
	increaseApproval(address,uint256):[]
	allowance(address,address):[]
	addTokenLock(address,uint256):['2']
	enableTransfer(bool):['2']
	transferOwnership(address):['2']
	admin():[]
Function Writes: State variables written
	approve(address,uint256):['8']
	unlockAllTokens():['9']
	addTokenLockDate(address,uint256,uint256):['10']
	burn(uint256):['0', '1']
	decreaseApproval(address,uint256):['8']
	addressLockTransfer(address,bool):['11']
	enableTransfer(bool):['9']
	transferFrom(address,address,uint256):['0', '8']
	setAdmin(address):['3', '8']
	addTokenLock(address,uint256):['12']
	mint(uint256):['0', '1']
	addressburn(address,uint256):['0', '1']
	increaseApproval(address,uint256):['8']
	transferOwnership(address):['2']
	transfer(address,uint256):['0']
============================
iteration:3
targets:['note()', 'getMinLockedAmount(address)', 'canTransferIfLocked(address,uint256)', 'decreaseApproval(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)']
['unlockAllTokens()']:writes at the last depth:['9']
['approve(address,uint256)']:writes at the last depth:['8']
['approve(address,uint256)']:writes at the last depth:['8']
['enableTransfer(bool)']:writes at the last depth:['9']
['addressLockTransfer(address,bool)']:writes at the last depth:['11']
['burn(uint256)']:writes at the last depth:['1', '0']
['addTokenLock(address,uint256)']:writes at the last depth:['12']
['addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['10']
['decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferOwnership(address)']:writes at the last depth:['2']
['mint(uint256)']:writes at the last depth:['1', '0']
['addressburn(address,uint256)']:writes at the last depth:['1', '0']
['increaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['setAdmin(address)']:writes at the last depth:['8', '3']
['transfer(address,uint256)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
contract coverage: 95.67%
============================
iteration:4
['transferFrom(address,address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transferFrom(address,address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferFrom(address,address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transferFrom(address,address,uint256)', 'setAdmin(address)']:writes at the last depth:['', '3', '8']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
contract coverage: 95.67%
============================
iteration:5
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)']:writes at the last depth:['8', '', '3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
contract coverage: 95.67%
============================
iteration:6
contract coverage: 95.67%
============================
iteration:7
contract coverage: 96.74%
============================
iteration:8
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'transferOwnership(address)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'setAdmin(address)']:writes at the last depth:['8', '', '3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 96.74%
============================
iteration:9
contract coverage: 96.74%
============================
iteration:10
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
contract coverage: 96.74%
============================
iteration:11
contract coverage: 96.74%
============================
iteration:12
contract coverage: 96.74%
============================
iteration:13
contract coverage: 96.74%
============================
iteration:14
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
contract coverage: 96.74%
============================
iteration:15
contract coverage: 96.74%
============================
iteration:16
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
contract coverage: 96.74%
============================
iteration:17
contract coverage: 96.74%
============================
iteration:18
contract coverage: 96.74%
============================
iteration:19
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfer(bool)', 'approve(address,uint256)']:writes at the last depth:['8']
contract coverage: 96.74%
============================
iteration:20
contract coverage: 96.74%
============================
iteration:21
contract coverage: 96.74%
============================
iteration:22
contract coverage: 96.74%
============================
iteration:23
contract coverage: 96.74%
============================
iteration:24
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
contract coverage: 96.74%
============================
iteration:25
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'setAdmin(address)']:writes at the last depth:['', '3', '8']
contract coverage: 96.74%
============================
iteration:26
contract coverage: 96.74%
============================
iteration:27
contract coverage: 96.74%
============================
iteration:28
contract coverage: 96.74%
============================
iteration:29
contract coverage: 96.74%
============================
iteration:30
contract coverage: 96.74%
============================
iteration:31
contract coverage: 96.74%
============================
iteration:32
contract coverage: 96.74%
============================
iteration:33
contract coverage: 96.74%
============================
iteration:34
contract coverage: 96.74%
============================
iteration:35
contract coverage: 96.74%
============================
iteration:36
contract coverage: 96.74%
============================
iteration:37
contract coverage: 96.74%
============================
iteration:38
['transferFrom(address,address,uint256)', 'transferOwnership(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transferFrom(address,address,uint256)', 'transferOwnership(address)', 'burn(uint256)']:writes at the last depth:['1', '0']
contract coverage: 96.74%
============================
iteration:39
['transferFrom(address,address,uint256)', 'transferOwnership(address)', 'burn(uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transferFrom(address,address,uint256)', 'transferOwnership(address)', 'burn(uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)', 'transferOwnership(address)', 'burn(uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
contract coverage: 96.74%
============================
iteration:40
contract coverage: 96.74%
============================
iteration:41
contract coverage: 96.74%
============================
iteration:42
contract coverage: 96.74%
============================
iteration:43
contract coverage: 96.74%
============================
iteration:44
contract coverage: 96.74%
============================
iteration:45
contract coverage: 96.74%
============================
iteration:46
contract coverage: 96.74%
============================
iteration:47
contract coverage: 96.74%
============================
iteration:48
contract coverage: 96.74%
============================
iteration:49
contract coverage: 96.74%
============================
iteration:50
contract coverage: 96.74%
============================
iteration:51
contract coverage: 96.74%
============================
iteration:52
contract coverage: 96.74%
============================
iteration:53
contract coverage: 96.74%
============================
iteration:54
contract coverage: 96.74%
============================
iteration:55
contract coverage: 96.74%
============================
iteration:56
contract coverage: 96.74%
============================
iteration:57
contract coverage: 96.74%
============================
iteration:58
contract coverage: 96.74%
============================
iteration:59
contract coverage: 96.74%
============================
iteration:60
contract coverage: 96.74%
============================
iteration:61
contract coverage: 96.74%
============================
iteration:62
contract coverage: 96.74%
============================
iteration:63
contract coverage: 96.74%
============================
iteration:64
contract coverage: 96.74%
============================
iteration:65
contract coverage: 96.74%
============================
iteration:66
contract coverage: 96.74%
#@statespace
3671 nodes, 3670 edges, 54306 total states
#@coverage
Achieved 7.05% coverage for code: 60806040526001600960006101000a81548160ff0219169083151502179055506000600960016101000a81548160ff0219169083151502179055503480156200004757600080fd5b506040805190810160405280600581526020017f42657272790000000000000000000000000000000000000000000000000000008152506040805190810160405280600581526020017f426572727900000000000000000000000000000000000000000000000000000081525060e06040519081016040528060a481526020016200345460a49139601233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600490805190602001906200012a92919062000265565b5082600590805190602001906200014392919062000265565b5081600690805190602001906200015c92919062000265565b5080600760006101000a81548160ff021916908360ff16021790555050505050601260ff16600a0a633b9aca0002600181905550600154600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001546040518082815260200191505060405180910390a362000314565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a857805160ff1916838001178555620002d9565b82800160010185558215620002d9579182015b82811115620002d8578251825591602001919060010190620002bb565b5b509050620002e89190620002ec565b5090565b6200031191905b808211156200030d576000816000905550600101620002f3565b5090565b90565b61313080620003246000396000f300608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610185578063095ea7b31461021557806318160ddd1461027a5780631eee6a8d146102a55780632292952c146102fc57806323b872dd1461035357806326d111f5146103d857806329ba3177146104685780632a7806e4146104b5578063313ce567146104e457806342966c68146105155780634cd412d5146105425780635e0be607146105715780636618846314610588578063704b6c02146105ed57806370a082311461063057806374ad74e91461068757806375d7e8ea146106de5780637784f2c7146107435780638da5cb5b1461079257806395d89b41146107e9578063a0712d6814610879578063a802a2f4146108a6578063a9059cbb14610901578063d73dd62314610966578063dd62ed3e146109cb578063eb20ca4114610a42578063ef7ac0e514610a8f578063f2fde38b14610abe578063f851a44014610b01575b600080fd5b34801561019157600080fd5b5061019a610b58565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101da5780820151818401526020810190506101bf565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022157600080fd5b50610260600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b91565b604051808215151515815260200191505060405180910390f35b34801561028657600080fd5b5061028f610d18565b6040518082815260200191505060405180910390f35b3480156102b157600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610d22565b005b34801561030857600080fd5b5061033d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f77565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b506103be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc0565b604051808215151515815260200191505060405180910390f35b3480156103e457600080fd5b506103ed61146a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047457600080fd5b506104b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611487565b005b3480156104c157600080fd5b506104ca61186a565b604051808215151515815260200191505060405180910390f35b3480156104f057600080fd5b506104f961187d565b604051808260ff1660ff16815260200191505060405180910390f35b34801561052157600080fd5b5061054060048036038101908080359060200190929190505050611882565b005b34801561054e57600080fd5b50610557611a43565b604051808215151515815260200191505060405180910390f35b34801561057d57600080fd5b50610586611a56565b005b34801561059457600080fd5b506105d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611acf565b604051808215151515815260200191505060405180910390f35b3480156105f957600080fd5b5061062e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d61565b005b34801561063c57600080fd5b50610671600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e15565b6040518082815260200191505060405180910390f35b34801561069357600080fd5b506106c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e5d565b6040518082815260200191505060405180910390f35b3480156106ea57600080fd5b50610729600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f57565b604051808215151515815260200191505060405180910390f35b34801561074f57600080fd5b50610790600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611fcc565b005b34801561079e57600080fd5b506107a7612111565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107f557600080fd5b506107fe612137565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561083e578082015181840152602081019050610823565b50505050905090810190601f16801561086b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561088557600080fd5b506108a460048036038101908080359060200190929190505050612170565b005b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612331565b604051808215151515815260200191505060405180910390f35b34801561090d57600080fd5b5061094c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612387565b604051808215151515815260200191505060405180910390f35b34801561097257600080fd5b506109b1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061259e565b604051808215151515815260200191505060405180910390f35b3480156109d757600080fd5b50610a2c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061279a565b6040518082815260200191505060405180910390f35b348015610a4e57600080fd5b50610a8d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612821565b005b348015610a9b57600080fd5b50610abc6004803603810190808035151590602001909291905050506129f0565b005b348015610aca57600080fd5b50610aff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a69565b005b348015610b0d57600080fd5b50610b16612c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6040805190810160405280600581526020017f426572727900000000000000000000000000000000000000000000000000000081525081565b600080821480610c1d57506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b1515610c2857600080fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610e055750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e045750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b1515610e1057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610e4c57600080fd5b600083111515610e5b57600080fd5b4282111515610e6957600080fd5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000154821115610ec0578181600001819055505b806001016040805190810160405280858152602001848152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508373ffffffffffffffffffffffffffffffffffffffff167fdbb3979b78c94a13fcfc98491a14180b56267350de06698a75ba88fa114f315c8385604051808381526020018281526020019250505060405180910390a250505050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fff57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561103a57600080fd5b8483600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561107857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806111215750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806111b75750600960009054906101000a900460ff1680156111b65750600960019054906101000a900460ff16806111b55750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156111b457506111b38282611f57565b5b5b5b5b15156111c257600080fd5b611213856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112a6856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137785600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a3600193505050509392505050565b60e06040519081016040528060a4815260200161306160a4913981565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114e357600080fd5b600081116040805190810160405280601481526020017f496e76616c696420746f6b656e2076616c7565730000000000000000000000008152509015156115c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561158a57808201518184015260208101905061156f565b50505050905090810190601f1680156115b75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156040805190810160405280601181526020017f4e6f7420656e6f75676820746f6b656e730000000000000000000000000000008152509015156116e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116ab578082015181840152602081019050611690565b50505050905090810190601f1680156116d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611738816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061178f81600154612ca190919063ffffffff16565b6001819055507f549fe1c7b7237a3f61e4860f69519c5d76c20fb3cb213bf84ba242f2d4e631018282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600960019054906101000a900460ff1681565b601281565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118de57600080fd5b61192f816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061198681600154612ca190919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b600960009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ab257600080fd5b6001600960016101000a81548160ff021916908315150217905550565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515611be1576000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c75565b611bf48382612ca190919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dbf57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611ded82612cd8565b611df8816000610b91565b50611e1082601260ff16600a0a633b9aca0002610b91565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008060008060009150600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090504281600001541015611ec05760009550611f4d565b600094505b8060010180549050851015611f49578060010185815481101515611ee557fe5b90600052602060002090600202016000015493508060010185815481101515611f0a57fe5b906000526020600020906002020160010154925042831115611f3c57611f398483612cba90919063ffffffff16565b91505b8480600101955050611ec5565b8195505b5050505050919050565b600080611fab836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b9050611fb684610f77565b611fbf85611e5d565b0181101591505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561202857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561206457600080fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6dd5a7941ee5159148c1fc57fc90e228da8894ad0402921937808ff3387cecc482604051808215151515815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600581526020017f426572727900000000000000000000000000000000000000000000000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121cc57600080fd5b61221d816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061227481600154612cba90919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123c657600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561240157600080fd5b3383600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561243f57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806124e85750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061257e5750600960009054906101000a900460ff16801561257d5750600960019054906101000a900460ff168061257c5750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561257b575061257a8282611f57565b5b5b5b5b151561258957600080fd5b6125938686612e32565b935050505092915050565b600061262f82600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156129035750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806129025750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b151561290e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561294a57600080fd5b6000811015151561295a57600080fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f9fdfba1cadc85a4f86fec37bf6eb2bda0beeeee783af62de3c2c59ddbf889d33826040518082815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612a4c57600080fd5b80600960006101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612ac557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b0157600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b5e57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612bbb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000828211151515612caf57fe5b818303905092915050565b6000808284019050838110151515612cce57fe5b8091505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612d3457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612d9157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612dee57600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612e6f57600080fd5b600082111515612e7e57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612ecb57600080fd5b612f1c826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612faf826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509291505056004265727279206973204d75736963202620656e7465727461696e6d656e7420636f6e74656e747320706c6174666f726d20616e64206d6f62696c65207061796d656e7420616e6420736d61727420636f6e747261637420746f20696e746572616374207769746820646563656e7472616c697a6564206170706c69636174696f6e7320746861742072756e206f6e2074686520457468657269756d206e6574776f726b2ea165627a7a7230582078e416dcd0577418957cae03bef0be35e57ccf4f3e6823e32b32f876d8fd412800294265727279206973204d75736963202620656e7465727461696e6d656e7420636f6e74656e747320706c6174666f726d20616e64206d6f62696c65207061796d656e7420616e6420736d61727420636f6e747261637420746f20696e746572616374207769746820646563656e7472616c697a6564206170706c69636174696f6e7320746861742072756e206f6e2074686520457468657269756d206e6574776f726b2e
#@coverage
Achieved 96.74% coverage for code: 608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610185578063095ea7b31461021557806318160ddd1461027a5780631eee6a8d146102a55780632292952c146102fc57806323b872dd1461035357806326d111f5146103d857806329ba3177146104685780632a7806e4146104b5578063313ce567146104e457806342966c68146105155780634cd412d5146105425780635e0be607146105715780636618846314610588578063704b6c02146105ed57806370a082311461063057806374ad74e91461068757806375d7e8ea146106de5780637784f2c7146107435780638da5cb5b1461079257806395d89b41146107e9578063a0712d6814610879578063a802a2f4146108a6578063a9059cbb14610901578063d73dd62314610966578063dd62ed3e146109cb578063eb20ca4114610a42578063ef7ac0e514610a8f578063f2fde38b14610abe578063f851a44014610b01575b600080fd5b34801561019157600080fd5b5061019a610b58565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101da5780820151818401526020810190506101bf565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022157600080fd5b50610260600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b91565b604051808215151515815260200191505060405180910390f35b34801561028657600080fd5b5061028f610d18565b6040518082815260200191505060405180910390f35b3480156102b157600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610d22565b005b34801561030857600080fd5b5061033d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f77565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b506103be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc0565b604051808215151515815260200191505060405180910390f35b3480156103e457600080fd5b506103ed61146a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561047457600080fd5b506104b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611487565b005b3480156104c157600080fd5b506104ca61186a565b604051808215151515815260200191505060405180910390f35b3480156104f057600080fd5b506104f961187d565b604051808260ff1660ff16815260200191505060405180910390f35b34801561052157600080fd5b5061054060048036038101908080359060200190929190505050611882565b005b34801561054e57600080fd5b50610557611a43565b604051808215151515815260200191505060405180910390f35b34801561057d57600080fd5b50610586611a56565b005b34801561059457600080fd5b506105d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611acf565b604051808215151515815260200191505060405180910390f35b3480156105f957600080fd5b5061062e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d61565b005b34801561063c57600080fd5b50610671600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e15565b6040518082815260200191505060405180910390f35b34801561069357600080fd5b506106c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e5d565b6040518082815260200191505060405180910390f35b3480156106ea57600080fd5b50610729600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f57565b604051808215151515815260200191505060405180910390f35b34801561074f57600080fd5b50610790600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611fcc565b005b34801561079e57600080fd5b506107a7612111565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107f557600080fd5b506107fe612137565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561083e578082015181840152602081019050610823565b50505050905090810190601f16801561086b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561088557600080fd5b506108a460048036038101908080359060200190929190505050612170565b005b3480156108b257600080fd5b506108e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612331565b604051808215151515815260200191505060405180910390f35b34801561090d57600080fd5b5061094c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612387565b604051808215151515815260200191505060405180910390f35b34801561097257600080fd5b506109b1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061259e565b604051808215151515815260200191505060405180910390f35b3480156109d757600080fd5b50610a2c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061279a565b6040518082815260200191505060405180910390f35b348015610a4e57600080fd5b50610a8d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612821565b005b348015610a9b57600080fd5b50610abc6004803603810190808035151590602001909291905050506129f0565b005b348015610aca57600080fd5b50610aff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a69565b005b348015610b0d57600080fd5b50610b16612c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6040805190810160405280600581526020017f426572727900000000000000000000000000000000000000000000000000000081525081565b600080821480610c1d57506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b1515610c2857600080fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610e055750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e045750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b1515610e1057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610e4c57600080fd5b600083111515610e5b57600080fd5b4282111515610e6957600080fd5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000154821115610ec0578181600001819055505b806001016040805190810160405280858152602001848152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508373ffffffffffffffffffffffffffffffffffffffff167fdbb3979b78c94a13fcfc98491a14180b56267350de06698a75ba88fa114f315c8385604051808381526020018281526020019250505060405180910390a250505050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fff57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561103a57600080fd5b8483600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561107857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806111215750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806111b75750600960009054906101000a900460ff1680156111b65750600960019054906101000a900460ff16806111b55750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156111b457506111b38282611f57565b5b5b5b5b15156111c257600080fd5b611213856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112a6856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137785600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a3600193505050509392505050565b60e06040519081016040528060a4815260200161306160a4913981565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114e357600080fd5b600081116040805190810160405280601481526020017f496e76616c696420746f6b656e2076616c7565730000000000000000000000008152509015156115c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561158a57808201518184015260208101905061156f565b50505050905090810190601f1680156115b75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156040805190810160405280601181526020017f4e6f7420656e6f75676820746f6b656e730000000000000000000000000000008152509015156116e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116ab578082015181840152602081019050611690565b50505050905090810190601f1680156116d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611738816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061178f81600154612ca190919063ffffffff16565b6001819055507f549fe1c7b7237a3f61e4860f69519c5d76c20fb3cb213bf84ba242f2d4e631018282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600960019054906101000a900460ff1681565b601281565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118de57600080fd5b61192f816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061198681600154612ca190919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b600960009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ab257600080fd5b6001600960016101000a81548160ff021916908315150217905550565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515611be1576000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c75565b611bf48382612ca190919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dbf57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611ded82612cd8565b611df8816000610b91565b50611e1082601260ff16600a0a633b9aca0002610b91565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008060008060009150600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090504281600001541015611ec05760009550611f4d565b600094505b8060010180549050851015611f49578060010185815481101515611ee557fe5b90600052602060002090600202016000015493508060010185815481101515611f0a57fe5b906000526020600020906002020160010154925042831115611f3c57611f398483612cba90919063ffffffff16565b91505b8480600101955050611ec5565b8195505b5050505050919050565b600080611fab836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b9050611fb684610f77565b611fbf85611e5d565b0181101591505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561202857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561206457600080fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6dd5a7941ee5159148c1fc57fc90e228da8894ad0402921937808ff3387cecc482604051808215151515815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600581526020017f426572727900000000000000000000000000000000000000000000000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121cc57600080fd5b61221d816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061227481600154612cba90919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123c657600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561240157600080fd5b3383600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561243f57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806124e85750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061257e5750600960009054906101000a900460ff16801561257d5750600960019054906101000a900460ff168061257c5750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561257b575061257a8282611f57565b5b5b5b5b151561258957600080fd5b6125938686612e32565b935050505092915050565b600061262f82600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156129035750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806129025750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b151561290e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561294a57600080fd5b6000811015151561295a57600080fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f9fdfba1cadc85a4f86fec37bf6eb2bda0beeeee783af62de3c2c59ddbf889d33826040518082815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612a4c57600080fd5b80600960006101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612ac557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b0157600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b5e57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612bbb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000828211151515612caf57fe5b818303905092915050565b6000808284019050838110151515612cce57fe5b8091505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612d3457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612d9157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612dee57600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612e6f57600080fd5b600082111515612e7e57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515612ecb57600080fd5b612f1c826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ca190919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612faf826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612cba90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509291505056004265727279206973204d75736963202620656e7465727461696e6d656e7420636f6e74656e747320706c6174666f726d20616e64206d6f62696c65207061796d656e7420616e6420736d61727420636f6e747261637420746f20696e746572616374207769746820646563656e7472616c697a6564206170706c69636174696f6e7320746861742072756e206f6e2074686520457468657269756d206e6574776f726b2ea165627a7a7230582078e416dcd0577418957cae03bef0be35e57ccf4f3e6823e32b32f876d8fd41280029
==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Berry
Function name: addTokenLockDate(address,uint256,uint256)
PC address: 3684
Estimated Gas Usage: 1337 - 1762
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:268

require(_release_time > now)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addTokenLockDate(address,uint256,uint256), txdata: 0x1eee6a8d000000000000000000000000000800000000000000000000000000000004008001, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Berry
Function name: getMinLockedAmount(address)
PC address: 7863
Estimated Gas Usage: 1482 - 1767
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:245

if (lockState.latestReleaseTime < now) {
      return 0;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getMinLockedAmount(address), txdata: 0x74ad74e9, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Berry
Function name: burn(uint256)
PC address: 11438
Estimated Gas Usage: 2235 - 2850
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:180

balances[msg.sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: burn(uint256), txdata: 0x42966c6801, decoded_data: (452312848583266388373324160190187140051835877600158453279131187530910662656,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Berry
Function name: canTransferIfLocked(address,uint256)
PC address: 11438
Estimated Gas Usage: 1553 - 1838
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:346

balances[_sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: canTransferIfLocked(address,uint256), txdata: 0x75d7e8ea000000000000000000000000000000000000000000000000000000000000000019, decoded_data: ('0x0000000000000000000000000000000000000000', 11307821214581659709333104004754678501295896940003961331978279688272766566400), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Berry
Function name: transferFrom(address,address,uint256)
PC address: 11438
Estimated Gas Usage: 14662 - 56227
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:365

allowed[_from][msg.sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transferFrom(address,address,uint256), txdata: 0x23b872dd000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000004000000000102014002000400202040400408000000000000000000000000000000000000000001, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', '0x0004000000000102014002000400202040400408', 309485009821345068724781056), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Berry
Function name: mint(uint256)
PC address: 11469
Estimated Gas Usage: 2494 - 3109
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:197

balances[msg.sender].add(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: mint(uint256), txdata: 0xa0712d68fffffffffffffffffffffffffffffffffffffffffd, decoded_data: (115792089237316195423570985008687907853269984665639635584428119972706955296768,), value: 0x0


time_used: 36036.511687994 seconds
#@contract_info_time
0x2b6695a4a36f388980c559137135fb2906d6f20f.sol:0.4.24:Berry:36036.511687994:36100:60:36000
