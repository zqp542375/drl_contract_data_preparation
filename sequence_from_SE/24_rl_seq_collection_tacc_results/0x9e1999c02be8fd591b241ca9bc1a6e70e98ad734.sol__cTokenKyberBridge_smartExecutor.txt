++++ 0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol  :  0.5.14  :  cTokenKyberBridge ++++
618392237034260790696952574810978057808940683765 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 2252
['constructor']:writes at the last depth:['2', '0', '1', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3']
preprocessing: Achieved 98.93% coverage.
dynamic svars:['2', '0', '4']
static svars:['3', '1']
Ending preprocessing.
preprocessing time(s): 33.82240891456604
contract coverage: 92.58%
name() is not reachable
Function Reads: State variables read in conditions
	kill():['1']
	delAdmin(address):['0']
	addAdmin(address):['0']
	setProxy(address):['0']
	delcToken(address):['0']
	proxy():[]
	name():[]
	addcToken(address):['0']
	getSwapQuantity(address,address,uint256):['4']
	isAdmin(address):[]
	getSwapRate(address,address,uint256):['4']
Function Writes: State variables written
	setProxy(address):['3']
	delAdmin(address):['0']
	addcToken(address):['4']
	addAdmin(address):['0']
	delcToken(address):['4']
============================
iteration:3
targets:['name()', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']
['setProxy(address)']:writes at the last depth:['3']
['delAdmin(address)']:writes at the last depth:['0']
['addcToken(address)']:writes at the last depth:['4']
['addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)']:writes at the last depth:['4']
['getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:4
['getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:5
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:6
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:7
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:8
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:9
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:10
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.58%
============================
iteration:11
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:12
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:13
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:14
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:15
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:16
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:17
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:18
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:19
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:20
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:21
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.05%
============================
iteration:22
contract coverage: 96.05%
============================
iteration:23
contract coverage: 96.05%
============================
iteration:24
contract coverage: 96.05%
============================
iteration:25
contract coverage: 96.05%
============================
iteration:26
contract coverage: 96.05%
============================
iteration:27
contract coverage: 96.05%
============================
iteration:28
contract coverage: 96.05%
============================
iteration:29
contract coverage: 96.05%
============================
iteration:30
contract coverage: 96.05%
============================
iteration:31
contract coverage: 96.05%
============================
iteration:32
contract coverage: 96.05%
============================
iteration:33
contract coverage: 96.05%
============================
iteration:34
contract coverage: 96.05%
============================
iteration:35
contract coverage: 96.05%
============================
iteration:36
contract coverage: 96.05%
============================
iteration:37
contract coverage: 96.05%
============================
iteration:38
contract coverage: 96.05%
============================
iteration:39
contract coverage: 96.05%
============================
iteration:40
contract coverage: 96.05%
============================
iteration:41
contract coverage: 96.05%
============================
iteration:42
contract coverage: 96.05%
============================
iteration:43
contract coverage: 96.05%
============================
iteration:44
contract coverage: 96.05%
============================
iteration:45
contract coverage: 96.05%
============================
iteration:46
contract coverage: 96.05%
============================
iteration:47
contract coverage: 96.05%
#@statespace
5477 nodes, 5476 edges, 94057 total states
#@coverage
Achieved 19.52% coverage for code: 60806040526040518060400160405280601181526020017f63546f6b656e4b796265724272696467650000000000000000000000000000008152506002908051906020019061004f92919061051b565b5034801561005c57600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160046000736c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000735d3a536e4d6dbd6114cc1ead35777bab948e364373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000734ddc2d193948926d02f9b1fe9e1daa0718270ed573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073158079ee67fce2f58472a96584a73c7ab9ac95c173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073f5dce57282a584d2746faf1593d3121fcac444dc73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600460007339aa39c021dfbae8fac545936693ac917d5e756373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073f650c3d88d12db855b8bf7d11be6c55a4e07dcc973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073c11b1268c1a384e55c48c2391d8d480264a3a7f473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073b3319f5d18bc0d84dd1b4825dcde5d5f7266d40773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550736c51aabd10b939c1d607694571fd6d6cf4dcd1f5600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105c0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061055c57805160ff191683800117855561058a565b8280016001018555821561058a579182015b8281111561058957825182559160200191906001019061056e565b5b509050610597919061059b565b5090565b6105bd91905b808211156105b95760008160009055506001016105a1565b5090565b90565b6110e880620005d06000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806341c0e1b51161007157806341c0e1b5146102d557806362d91855146102df578063704802751461032357806397107d6d14610367578063e00a5bba146103ab578063ec556889146103ef576100a9565b806306fdde03146100ae578063109b88df146101315780631c9fa5931461017557806324d7806c146101f757806334b3371514610253575b600080fd5b6100b6610439565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101736004803603602081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d7565b005b6101e16004803603606081101561018b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ad565b6040518082815260200191505060405180910390f35b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066f565b604051808215151515815260200191505060405180910390f35b6102bf6004803603606081101561026957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106c4565b6040518082815260200191505060405180910390f35b6102dd610bfa565b005b610321600480360360208110156102f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf8565b005b6103656004803603602081101561033957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dcd565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea2565b005b6103ed600480360360208110156103c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f61565b005b6103f7611037565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b505050505081565b6104e03361066f565b610552576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806105bb8585856106c4565b905060008590506000670de0b6b3a7640000838373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561061457600080fd5b505afa158015610628573d6000803e3d6000fd5b505050506040513d602081101561063e57600080fd5b8101908080519060200190929190505050601203600a0a8702028161065f57fe5b0490508093505050509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000806000806000806106d68961105d565b156108c15760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561072657600080fd5b505afa15801561073a573d6000803e3d6000fd5b505050506040513d602081101561075057600080fd5b810190808051906020019092919050505095508873ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610825578073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156107dd57600080fd5b505afa1580156107f1573d6000803e3d6000fd5b505050506040513d602081101561080757600080fd5b81019080805190602001909291905050509650505050505050610bf3565b670de0b6b3a76400008173ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561087457600080fd5b505afa158015610888573d6000803e3d6000fd5b505050506040513d602081101561089e57600080fd5b81019080805190602001909291905050508902816108b857fe5b049350506108c8565b8894508692505b6108d18861105d565b15610aa95760008890508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561092157600080fd5b505afa158015610935573d6000803e3d6000fd5b505050506040513d602081101561094b57600080fd5b810190808051906020019092919050505094508073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d60208110156109ce57600080fd5b810190808051906020019092919050505092508473ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415610aa3578073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5b57600080fd5b505afa158015610a6f573d6000803e3d6000fd5b505050506040513d6020811015610a8557600080fd5b81019080805190602001909291905050509650505050505050610bf3565b50610aad565b8793505b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166334b337158787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b158015610b8d57600080fd5b505afa158015610ba1573d6000803e3d6000fd5b505050506040513d6020811015610bb757600080fd5b8101908080519060200190929190505050915060008314610be957670de0b6b3a764000083830281610be557fe5b0491505b8196505050505050505b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f74204f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610d013361066f565b610d73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610dd63361066f565b610e48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610eab3361066f565b610f1d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610f6a3361066f565b610fdc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820a7262c41cb05e913033516326036b203d77003e55c951ea9c6d4c6342f2e47ba64736f6c634300050e0032
#@coverage
Achieved 96.05% coverage for code: 
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1559
Estimated Gas Usage: 6468 - 111095
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:136

srcToken.decimals()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xf5dce57282a584d2746faf1593d3121fcac444dc', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5931c1c1c1c1c1c1c1c1c1c1c1c158079ee67fce2f58472a96584a73c7ab9ac95c11c1c1c1c1c1c1c1c1c1c1c1cf5dce57282a584d2746faf1593d3121fcac444dc1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1618
Estimated Gas Usage: 6468 - 111095
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:136

18-srcToken.decimals()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f400000000000000000000000001801080008000200101800004800080802004800000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0x0180108000800020010180000480008080200480', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1621
Estimated Gas Usage: 6468 - 111095
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:136

10**(18-srcToken.decimals())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f4000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1623
Estimated Gas Usage: 12394 - 220942
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:136

srcQty * (10**(18-srcToken.decimals()))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5930000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e3643000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c100000000080210a0ba0000c01c1e5518f6000000000000000000000000000007, decoded_data: ('0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 843347805532810912703480378165322871598078565750996457042227494919), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2016
Estimated Gas Usage: 4754 - 74584
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:151

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapRate(address,address,uint256), txdata: 0x34b337150000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e3643000000000000000000000000b3319f5d18bc0d84dd1b4825dcde5d5f7266d4070000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', '0xb3319f5d18bc0d84dd1b4825dcde5d5f7266d407', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2016
Estimated Gas Usage: 6468 - 111095
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:151

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5930000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e364300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2167
Estimated Gas Usage: 10680 - 184431
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:153

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapRate(address,address,uint256), txdata: 0x34b33715000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc0000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e36430000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xf5dce57282a584d2746faf1593d3121fcac444dc', '0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2167
Estimated Gas Usage: 12394 - 220942
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:153

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000b3319f5d18bc0d84dd1b4825dcde5d5f7266d407000000000000000000000000b3319f5d18bc0d84dd1b4825dcde5d5f7266d4070000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xb3319f5d18bc0d84dd1b4825dcde5d5f7266d407', '0xb3319f5d18bc0d84dd1b4825dcde5d5f7266d407', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2225
Estimated Gas Usage: 9088 - 148702
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:153

srcQty * cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000f650c3d80d12db005b8b00001be6c5004e05dcc9000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c100000000000005901420004f5818d3180446000000000000000000000000000b, decoded_data: ('0xf650c3d80d12db005b8b00001be6c5004e05dcc9', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 8939086334870753798058278908321916194052139909291368121368587), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2340
Estimated Gas Usage: 10680 - 184431
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:162

cToken.underlying()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f40000000000000000000000006c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0x6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e', 0), value: 0x0
Caller: [SOMEGUY], function: getSwapRate(address,address,uint256), txdata: 0x34b33715939393939393939393939393f650c3d88d12db855b8bf7d11be6c55a4e07dcc99393939393939393939393934ddc2d193948926d02f9b1fe9e1daa0718270ed59393939393939393939393939393939393939393939393939393939393939393, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2340
Estimated Gas Usage: 12394 - 220942
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:162

cToken.underlying()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5930000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e3643000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5931c1c1c1c1c1c1c1c1c1c1c1c5d3a536e4d6dbd6114cc1ead35777bab948e36431c1c1c1c1c1c1c1c1c1c1c1c5d3a536e4d6dbd6114cc1ead35777bab948e36431c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2471
Estimated Gas Usage: 7374 - 112191
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:163

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapRate(address,address,uint256), txdata: 0x34b33715000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e36430000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', '0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2471
Estimated Gas Usage: 9088 - 148702
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:163

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000b300000018bc0000000000000000005f720000000000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e36430000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xb300000018bc0000000000000000005f72000000', '0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2654
Estimated Gas Usage: 7374 - 112191
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:165

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f40000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e36430000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', 0), value: 0x0
Caller: [SOMEGUY], function: getSwapRate(address,address,uint256), txdata: 0x34b337151c1c1c1c1c1c1c1c1c1c1c1c00000000000000000000010000000000000000001c1c1c1c1c1c1c1c1c1c1c1c39aa39c021dfbae8fac545936693ac917d5e75631c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2654
Estimated Gas Usage: 9088 - 148702
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:165

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5930000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e3643000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5931c1c1c1c1c1c1c1c1c1c1c1c050000b0008042c00100000000100044000004441c1c1c1c1c1c1c1c1c1c1c1cf650c3d88d12db855b8bf7d11be6c55a4e07dcc91c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c, value: 0x0


time_used: 36051.353028297424 seconds
#@contract_info_time
0x9e1999c02be8fd591b241ca9bc1a6e70e98ad734.sol:0.5.14:cTokenKyberBridge:36051.353028297424:36100:60:36000
