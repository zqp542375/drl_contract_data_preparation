++++ 0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol  :  0.5.14  :  cTokenKyberBridge ++++
618392237034260790696952574810978057808940683765 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 2069
['constructor']:writes at the last depth:['2', '0', '1', '4', '4', '4', '4', '4', '4', '4', '4', '4', '3']
preprocessing: Achieved 99.03% coverage.
dynamic svars:['2', '0', '4']
static svars:['3', '1']
Ending preprocessing.
preprocessing time(s): 22.142892122268677
contract coverage: 92.27%
name() is not reachable
Function Reads: State variables read in conditions
	delAdmin(address):['0']
	addAdmin(address):['0']
	setProxy(address):['0']
	delcToken(address):['0']
	proxy():[]
	name():[]
	addcToken(address):['0']
	getSwapQuantity(address,address,uint256):['4']
	isAdmin(address):[]
	kill():['1']
Function Writes: State variables written
	setProxy(address):['3']
	delAdmin(address):['0']
	addAdmin(address):['0']
	addcToken(address):['4']
	delcToken(address):['4']
============================
iteration:3
targets:['name()', 'getSwapQuantity(address,address,uint256)']
['setProxy(address)']:writes at the last depth:['3']
['delAdmin(address)']:writes at the last depth:['0']
['addAdmin(address)']:writes at the last depth:['0']
['addcToken(address)']:writes at the last depth:['4']
['delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.27%
============================
iteration:4
['getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.27%
============================
iteration:5
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.27%
============================
iteration:6
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.27%
============================
iteration:7
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.27%
============================
iteration:8
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 92.27%
============================
iteration:9
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:10
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:11
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:12
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:13
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:14
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:15
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:16
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:17
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:18
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:19
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:20
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:21
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:22
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:23
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:24
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:25
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:26
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:27
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:28
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:29
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:30
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.28%
============================
iteration:31
contract coverage: 96.28%
============================
iteration:32
contract coverage: 96.28%
============================
iteration:33
contract coverage: 96.28%
============================
iteration:34
contract coverage: 96.28%
============================
iteration:35
contract coverage: 96.28%
============================
iteration:36
contract coverage: 96.28%
============================
iteration:37
contract coverage: 96.28%
============================
iteration:38
contract coverage: 96.28%
============================
iteration:39
contract coverage: 96.28%
============================
iteration:40
contract coverage: 96.28%
============================
iteration:41
contract coverage: 96.28%
============================
iteration:42
contract coverage: 96.28%
============================
iteration:43
contract coverage: 96.28%
============================
iteration:44
contract coverage: 96.28%
============================
iteration:45
contract coverage: 96.28%
============================
iteration:46
contract coverage: 96.28%
============================
iteration:47
contract coverage: 96.28%
============================
iteration:48
contract coverage: 96.28%
#@statespace
5650 nodes, 5649 edges, 91534 total states
#@coverage
Achieved 20.86% coverage for code: 60806040526040518060400160405280601181526020017f63546f6b656e4b796265724272696467650000000000000000000000000000008152506002908051906020019061004f92919061051b565b5034801561005c57600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160046000736c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000735d3a536e4d6dbd6114cc1ead35777bab948e364373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000734ddc2d193948926d02f9b1fe9e1daa0718270ed573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073158079ee67fce2f58472a96584a73c7ab9ac95c173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073f5dce57282a584d2746faf1593d3121fcac444dc73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600460007339aa39c021dfbae8fac545936693ac917d5e756373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073f650c3d88d12db855b8bf7d11be6c55a4e07dcc973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073c11b1268c1a384e55c48c2391d8d480264a3a7f473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073b3319f5d18bc0d84dd1b4825dcde5d5f7266d40773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550736c51aabd10b939c1d607694571fd6d6cf4dcd1f5600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105c0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061055c57805160ff191683800117855561058a565b8280016001018555821561058a579182015b8281111561058957825182559160200191906001019061056e565b5b509050610597919061059b565b5090565b6105bd91905b808211156105b95760008160009055506001016105a1565b5090565b90565b610f97806105cf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806362d918551161006657806362d9185514610252578063704802751461029657806397107d6d146102da578063e00a5bba1461031e578063ec556889146103625761009e565b806306fdde03146100a3578063109b88df146101265780631c9fa5931461016a57806324d7806c146101ec57806341c0e1b514610248575b600080fd5b6100ab6103ac565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101686004803603602081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061044a565b005b6101d66004803603606081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610520565b6040518082815260200191505060405180910390f35b61022e6004803603602081101561020257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a54565b604051808215151515815260200191505060405180910390f35b610250610aa9565b005b6102946004803603602081101561026857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba7565b005b6102d8600480360360208110156102ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c7c565b005b61031c600480360360208110156102f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d51565b005b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e10565b005b61036a610ee6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104425780601f1061041757610100808354040283529160200191610442565b820191906000526020600020905b81548152906001019060200180831161042557829003601f168201915b505050505081565b61045333610a54565b6104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060008060008060006105348a610f0c565b1561065d5760008a90508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561058457600080fd5b505afa158015610598573d6000803e3d6000fd5b505050506040513d60208110156105ae57600080fd5b81019080805190602001909291905050509650670de0b6b3a76400008173ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d602081101561063a57600080fd5b81019080805190602001909291905050508a028161065457fe5b04945050610664565b8995508793505b61066d89610f0c565b156108065760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156106bd57600080fd5b505afa1580156106d1573d6000803e3d6000fd5b505050506040513d60208110156106e757600080fd5b810190808051906020019092919050505095508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d602081101561076a57600080fd5b810190808051906020019092919050505093508073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c357600080fd5b505afa1580156107d7573d6000803e3d6000fd5b505050506040513d60208110156107ed57600080fd5b8101908080519060200190929190505050925050610891565b8894508873ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d602081101561087957600080fd5b81019080805190602001909291905050509250600191505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610908576108ce89610f0c565b156108f2578183602403600a0a8502816108e457fe5b049650505050505050610a4d565b82601203600a0a84029650505050505050610a4d565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c9fa5938787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156109e357600080fd5b505afa1580156109f7573d6000803e3d6000fd5b505050506040513d6020811015610a0d57600080fd5b81019080805190602001909291905050509050610a2989610f0c565b15610a43578183602403600a0a820281610a3f57fe5b0490505b8096505050505050505b9392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f74204f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610bb033610a54565b610c22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610c8533610a54565b610cf7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610d5a33610a54565b610dcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e1933610a54565b610e8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820e4665253fb527e984dd991700242c33b75e375336bac78c22724417447e8c72664736f6c634300050e0032
#@coverage
Achieved 96.28% coverage for code: 608060405234801561001057600080fd5b506004361061009e5760003560e01c806362d918551161006657806362d9185514610252578063704802751461029657806397107d6d146102da578063e00a5bba1461031e578063ec556889146103625761009e565b806306fdde03146100a3578063109b88df146101265780631c9fa5931461016a57806324d7806c146101ec57806341c0e1b514610248575b600080fd5b6100ab6103ac565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101686004803603602081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061044a565b005b6101d66004803603606081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610520565b6040518082815260200191505060405180910390f35b61022e6004803603602081101561020257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a54565b604051808215151515815260200191505060405180910390f35b610250610aa9565b005b6102946004803603602081101561026857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba7565b005b6102d8600480360360208110156102ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c7c565b005b61031c600480360360208110156102f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d51565b005b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e10565b005b61036a610ee6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104425780601f1061041757610100808354040283529160200191610442565b820191906000526020600020905b81548152906001019060200180831161042557829003601f168201915b505050505081565b61045333610a54565b6104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060008060008060006105348a610f0c565b1561065d5760008a90508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561058457600080fd5b505afa158015610598573d6000803e3d6000fd5b505050506040513d60208110156105ae57600080fd5b81019080805190602001909291905050509650670de0b6b3a76400008173ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d602081101561063a57600080fd5b81019080805190602001909291905050508a028161065457fe5b04945050610664565b8995508793505b61066d89610f0c565b156108065760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156106bd57600080fd5b505afa1580156106d1573d6000803e3d6000fd5b505050506040513d60208110156106e757600080fd5b810190808051906020019092919050505095508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d602081101561076a57600080fd5b810190808051906020019092919050505093508073ffffffffffffffffffffffffffffffffffffffff1663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c357600080fd5b505afa1580156107d7573d6000803e3d6000fd5b505050506040513d60208110156107ed57600080fd5b8101908080519060200190929190505050925050610891565b8894508873ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561084f57600080fd5b505afa158015610863573d6000803e3d6000fd5b505050506040513d602081101561087957600080fd5b81019080805190602001909291905050509250600191505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610908576108ce89610f0c565b156108f2578183602403600a0a8502816108e457fe5b049650505050505050610a4d565b82601203600a0a84029650505050505050610a4d565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c9fa5938787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156109e357600080fd5b505afa1580156109f7573d6000803e3d6000fd5b505050506040513d6020811015610a0d57600080fd5b81019080805190602001909291905050509050610a2989610f0c565b15610a43578183602403600a0a820281610a3f57fe5b0490505b8096505050505050505b9392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f74204f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610bb033610a54565b610c22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610c8533610a54565b610cf7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610d5a33610a54565b610dcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e1933610a54565b610e8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820e4665253fb527e984dd991700242c33b75e375336bac78c22724417447e8c72664736f6c634300050e0032
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1555
Estimated Gas Usage: 11663 - 186264
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:144

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc0000000000000000000000004ddc2d193948926d02f9b1fe9e1daa0718270ed50000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xf5dce57282a584d2746faf1593d3121fcac444dc', '0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1613
Estimated Gas Usage: 11663 - 186264
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:144

srcQty * cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f40000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e3643000297cb081b26d0500000000000000000000000000000000000000000000001, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0x5d3a536e4d6dbd6114cc1ead35777bab948e3643', 4581331550763435725760289277049807414020594174567120355388242747281375233), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1728
Estimated Gas Usage: 11663 - 186264
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:153

cToken.underlying()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f400000000000000000000000039aa39c021dfbae8fac545936693ac917d5e75630000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0x39aa39c021dfbae8fac545936693ac917d5e7563', 0), value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa59310101010101010101010101039aa39c021dfbae8fac545936693ac917d5e75631010101010101010101010104ddc2d193948926d02f9b1fe9e1daa0718270ed51010101010101010101010101010101010101010101010101010101010101010, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1859
Estimated Gas Usage: 8395 - 114062
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:154

cToken.decimals()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000f5dc457200a5040230650d051311400202844054000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xf5dc457200a5040230650d051311400202844054', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1990
Estimated Gas Usage: 8395 - 114062
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:155

cToken.exchangeRateStored()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f4000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', '0xc11b1268c1a384e55c48c2391d8d480264a3a7f4', 0), value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5939393939393939393939393934000000000004040400000400080000000000000939393939393939393939393c11b1268c1a384e55c48c2391d8d480264a3a7f49393939393939393939393939393939393939393939393939393939393939393, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2130
Estimated Gas Usage: 8404 - 114071
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:158

ERC20(dst).decimals()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xf5dce57282a584d2746faf1593d3121fcac444dc', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593101010101010101010101010b3319f5d18bc0d84dd1b4825dcde5d5f7266d407101010101010101010101010c1001200000080c15c4042281588480000a306001010101010101010101010101010101010101010101010101010101010101010, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2264
Estimated Gas Usage: 8395 - 114062
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:165

36-dstDecimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5930000000000000000000000000010000000000000000000000000000000000000000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0010000000000000000000000000000000000000', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2267
Estimated Gas Usage: 8395 - 114062
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:165

10**(36-dstDecimals)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000f540804000a584d2746e00150090100800000000000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xf540804000a584d2746e00150090100800000000', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2269
Estimated Gas Usage: 8395 - 114062
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:165

srcQuantity * 10**(36-dstDecimals)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa59300000000000000000000000000085320000000000040000000000020808e0000000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000895049400140088434000000000000000000000000000000000000000001, decoded_data: ('0x00085320000000000040000000000020808e0000', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 947703759371052893253357227452375269886196614782782475431247148331565057), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2275
Estimated Gas Usage: 8290 - 113676
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:127

function isCToken(address _token) internal view returns(bool) {
        return cTokens[_token];
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5930000000000000000000000006c8c6b0200000094d47a00a25f56c7d9a1088e48000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c10000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x6c8c6b0200000094d47a00a25f56c7d9a1088e48', '0x158079ee67fce2f58472a96584a73c7ab9ac95c1', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2294
Estimated Gas Usage: 5136 - 41869
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:167

18-dstDecimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2297
Estimated Gas Usage: 5136 - 41869
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:167

10**(18-dstDecimals)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000100000000', '0x0000000000000000000000000000000100000000', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2299
Estimated Gas Usage: 5136 - 41869
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:167

srcQuantity * 10**(18-dstDecimals)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa59300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021040e00804409a7ca94080048e47d80b4c0100000000000000000000000001, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 933343001841482615516651704300161686628692261553218726902181662218887626753), value: 0x0


time_used: 36057.064913511276 seconds
#@contract_info_time
0x6fda9ea3b5bb66abefaa0fbf144c1a174ca8f448.sol:0.5.14:cTokenKyberBridge:36057.064913511276:36100:60:36000
