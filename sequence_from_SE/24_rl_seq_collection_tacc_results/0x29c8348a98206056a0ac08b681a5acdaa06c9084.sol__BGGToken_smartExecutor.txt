++++ 0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol  :  0.4.24  :  BGGToken ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 3647
['constructor']:writes at the last depth:['3', '9', '10', '11', '4', '5', '6', '7', '8', '0', '1']
preprocessing: Achieved 99.97% coverage.
dynamic svars:['3', '1', '2']
static svars:['5', '9', '6', '7', '4', '10', '11', '8', '0']
Ending preprocessing.
preprocessing time(s): 33.00942540168762
contract coverage: 84.48%
migrate() is not reachable
transferFrom(address,address,uint256) is not reachable
fallback is not reachable
stopFunding() is not reachable
version() is not reachable
startFunding(uint256,uint256) is not reachable
Function Reads: State variables read in conditions
	name():[]
	approve(address,uint256):[]
	allocateToken(address,uint256):[]
	isFunding():[]
	totalSupply():[]
	transferFrom(address,address,uint256):[]
	tokenRaised():[]
	decimals():[]
	newContractAddr():[]
	tokenExchangeRate():[]
	stopFunding():[]
	setMigrateContract(address):[]
	version():[]
	tokenMigrated():[]
	balanceOf(address):[]
	currentSupply():[]
	startFunding(uint256,uint256):[]
	migrate():[]
	symbol():[]
	decreaseSupply(uint256):[]
	changeOwner(address):[]
	ethFundDeposit():[]
	transfer(address,uint256):[]
	increaseSupply(uint256):[]
	setTokenExchangeRate(uint256):[]
	fundingStartBlock():[]
	allowance(address,address):[]
	transferETH():[]
	fundingStopBlock():[]
Function Writes: State variables written
	approve(address,uint256):['2']
	stopFunding():['5']
	fallback:['9', '1']
	transferFrom(address,address,uint256):['1', '2']
	setMigrateContract(address):['5']
	startFunding(uint256,uint256):['6', '7', '5']
	changeOwner(address):['4']
	migrate():['1', '10']
	setTokenExchangeRate(uint256):['11']
	allocateToken(address,uint256):['9', '1']
	transfer(address,uint256):['1']
	decreaseSupply(uint256):['8']
	increaseSupply(uint256):['8']
============================
iteration:3
targets:['migrate()', 'transferFrom(address,address,uint256)', 'fallback', 'stopFunding()', 'version()', 'startFunding(uint256,uint256)']
['approve(address,uint256)']:writes at the last depth:['2']
['setMigrateContract(address)']:writes at the last depth:['5']
['changeOwner(address)']:writes at the last depth:['4']
['setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transferETH()']:writes at the last depth:[]
['decreaseSupply(uint256)']:writes at the last depth:['8']
['allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['increaseSupply(uint256)']:writes at the last depth:['8']
['allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:4
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['9', '1']
['transfer(address,uint256)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:5
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:6
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:7
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['9', '1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseSupply(uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:8
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:9
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseSupply(uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 84.51%
============================
iteration:10
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferETH()', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 86.04%
============================
iteration:11
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'stopFunding()']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 86.04%
============================
iteration:12
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['9', '1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 86.04%
============================
iteration:13
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 89.80%
============================
iteration:14
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'allocateToken(address,uint256)']:writes at the last depth:['9', '1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'increaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 93.67%
============================
iteration:15
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'decreaseSupply(uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['1', '2']
contract coverage: 93.67%
============================
iteration:16
['transfer(address,uint256)', 'increaseSupply(uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'increaseSupply(uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'increaseSupply(uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'increaseSupply(uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'increaseSupply(uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 93.67%
============================
iteration:17
contract coverage: 93.67%
============================
iteration:18
['transfer(address,uint256)', 'increaseSupply(uint256)', 'transferETH()', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'increaseSupply(uint256)', 'transferETH()', 'setMigrateContract(address)']:writes at the last depth:['5']
contract coverage: 93.67%
============================
iteration:19
['transfer(address,uint256)', 'increaseSupply(uint256)', 'startFunding(uint256,uint256)', 'stopFunding()']:writes at the last depth:['5']
['transfer(address,uint256)', 'increaseSupply(uint256)', 'startFunding(uint256,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 93.67%
============================
iteration:20
contract coverage: 93.67%
============================
iteration:21
contract coverage: 93.67%
============================
iteration:22
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'allocateToken(address,uint256)']:writes at the last depth:['1', '9']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 93.67%
============================
iteration:23
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'startFunding(uint256,uint256)']:writes at the last depth:['7', '5', '6']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 93.67%
============================
iteration:24
contract coverage: 93.67%
============================
iteration:25
contract coverage: 93.67%
============================
iteration:26
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'stopFunding()']:writes at the last depth:['5']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'changeOwner(address)']:writes at the last depth:['4']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'transferETH()']:writes at the last depth:[]
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'startFunding(uint256,uint256)', 'transfer(address,uint256)']:writes at the last depth:['1']
contract coverage: 93.67%
============================
iteration:27
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'setTokenExchangeRate(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'setTokenExchangeRate(uint256)', 'setMigrateContract(address)']:writes at the last depth:['5']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'setTokenExchangeRate(uint256)', 'setTokenExchangeRate(uint256)']:writes at the last depth:['11']
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'setTokenExchangeRate(uint256)', 'transferETH()']:writes at the last depth:[]
contract coverage: 93.67%
============================
iteration:28
['transfer(address,uint256)', 'allocateToken(address,uint256)', 'changeOwner(address)', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 93.67%
============================
iteration:29
contract coverage: 93.67%
============================
iteration:30
contract coverage: 93.67%
============================
iteration:31
contract coverage: 93.67%
============================
iteration:32
['transfer(address,uint256)', 'transferETH()', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 93.67%
============================
iteration:33
contract coverage: 93.67%
============================
iteration:34
contract coverage: 93.67%
============================
iteration:35
contract coverage: 93.67%
============================
iteration:36
contract coverage: 93.67%
============================
iteration:37
contract coverage: 93.67%
============================
iteration:38
contract coverage: 93.67%
============================
iteration:39
contract coverage: 93.67%
============================
iteration:40
contract coverage: 93.67%
============================
iteration:41
contract coverage: 93.67%
============================
iteration:42
contract coverage: 93.67%
============================
iteration:43
contract coverage: 93.67%
============================
iteration:44
contract coverage: 93.67%
============================
iteration:45
contract coverage: 93.67%
============================
iteration:46
contract coverage: 93.67%
============================
iteration:47
contract coverage: 93.67%
============================
iteration:48
contract coverage: 93.67%
#@statespace
5349 nodes, 5348 edges, 63274 total states
#@coverage
Achieved 7.97% coverage for code: 60806040526040805190810160405280600381526020017f312e3000000000000000000000000000000000000000000000000000000000008152506003908051906020019062000051929190620001bf565b5060006009556000600a5561012c600b553480156200006f57600080fd5b5060405160408062001f66833981018060405281019080805190602001909291908051906020019092919050505081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560146101000a81548160ff021916908315150217905550600060068190555060006007819055506200012381620001af640100000000026401000000009004565b600881905550620001476301fc1e20620001af640100000000026401000000009004565b600081905550600054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005460085411151515620001a757600080fd5b50506200026e565b60006012600a0a82029050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200020257805160ff191683800117855562000233565b8280016001018555821562000233579182015b828111156200023257825182559160200191906001019062000215565b5b50905062000242919062000246565b5090565b6200026b91905b80821115620002675760008160009055506001016200024d565b5090565b90565b611ce8806200027e6000396000f300608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610297578063095ea7b3146103275780630a9ffdb71461038c57806313b53153146103d957806318160ddd1461040857806323b872dd1461043357806326a21575146104b8578063313ce567146104e357806332513ce51461050e5780634172d080146105655780634477c5da146105905780634a36df25146105a757806354fd4d50146105ea5780636fe3a5671461067a57806370a08231146106a5578063771282f6146106fc578063775c46cd146107275780638fd3ab801461075e57806395d89b411461077557806398e52f9a14610805578063a6f9dae114610832578063a81c3bdf14610875578063a9059cbb146108cc578063b921e16314610931578063cb7b86731461095e578063d648a6471461098b578063dd62ed3e146109b6578063e28d717b14610a2d578063ff29507d14610a44575b6000600560149054906101000a900460ff16151561019257600080fd5b600034141515156101a257600080fd5b60065443101515156101b357600080fd5b60075443111515156101c457600080fd5b6101d034600b54610a6f565b90506008546009548201111515156101e757600080fd5b6101f360095482610aa2565b60098190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7ba26a0f068612fb882b3272004674d21fed286c2c8c795cf653044690b32db4826040518082815260200191505060405180910390a250005b3480156102a357600080fd5b506102ac610acc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ec5780820151818401526020810190506102d1565b50505050905090810190601f1680156103195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033357600080fd5b50610372600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b2c565b604051808215151515815260200191505060405180910390f35b34801561039857600080fd5b506103d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c1e565b005b3480156103e557600080fd5b506103ee610da5565b604051808215151515815260200191505060405180910390f35b34801561041457600080fd5b5061041d610db8565b6040518082815260200191505060405180910390f35b34801561043f57600080fd5b5061049e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dbe565b604051808215151515815260200191505060405180910390f35b3480156104c457600080fd5b506104cd61103a565b6040518082815260200191505060405180910390f35b3480156104ef57600080fd5b506104f8611040565b6040518082815260200191505060405180910390f35b34801561051a57600080fd5b50610523611045565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561057157600080fd5b5061057a61106b565b6040518082815260200191505060405180910390f35b34801561059c57600080fd5b506105a5611071565b005b3480156105b357600080fd5b506105e8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611105565b005b3480156105f657600080fd5b506105ff611202565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561063f578082015181840152602081019050610624565b50505050905090810190601f16801561066c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561068657600080fd5b5061068f6112a0565b6040518082815260200191505060405180910390f35b3480156106b157600080fd5b506106e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a6565b6040518082815260200191505060405180910390f35b34801561070857600080fd5b506107116112ef565b6040518082815260200191505060405180910390f35b34801561073357600080fd5b5061075c60048036038101908080359060200190929190803590602001909291905050506112f5565b005b34801561076a57600080fd5b506107736113b6565b005b34801561078157600080fd5b5061078a61163c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ca5780820151818401526020810190506107af565b50505050905090810190601f1680156107f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561081157600080fd5b5061083060048036038101908080359060200190929190505050611675565b005b34801561083e57600080fd5b50610873600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611740565b005b34801561088157600080fd5b5061088a61181c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108d857600080fd5b50610917600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611842565b604051808215151515815260200191505060405180910390f35b34801561093d57600080fd5b5061095c600480360381019080803590602001909291905050506119ab565b005b34801561096a57600080fd5b5061098960048036038101908080359060200190929190505050611a76565b005b34801561099757600080fd5b506109a0611afd565b6040518082815260200191505060405180910390f35b3480156109c257600080fd5b50610a17600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b03565b6040518082815260200191505060405180910390f35b348015610a3957600080fd5b50610a42611b8a565b005b348015610a5057600080fd5b50610a59611c88565b6040518082815260200191505060405180910390f35b60008082840290506000841480610a905750828482811515610a8d57fe5b04145b1515610a9857fe5b8091505092915050565b6000808284019050838110158015610aba5750828110155b1515610ac257fe5b8091505092915050565b606060405190810160405280603f81526020017f424747e585a8e79083e4b8ade5b08fe4bc81e4b89ae882a1e69d83e58cbae59d81526020017f97e993bee695b0e5ad97e8b584e4baa7e7aea1e79086e59fbae98791e4bc9a0081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c7c57600080fd5b60008214151515610c8c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610cc857600080fd5b610cdc610cd483611c8e565b600b54610a6f565b9050600854600954820111151515610cf357600080fd5b610cff60095482610aa2565b60098190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff167f1aee3ddc9eba03c98b273cd914e999b78162e1ddd1c022045394f635a469e105826040518082815260200191505060405180910390a2505050565b600560149054906101000a900460ff1681565b60005481565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610e8b575081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610e975750600082115b1561102e5781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050611033565b600090505b9392505050565b60095481565b601281565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110cd57600080fd5b600560149054906101000a900460ff1615156110e857600080fd5b6000600560146101000a81548160ff021916908315150217905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561116157600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111be57600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112985780601f1061126d57610100808354040283529160200191611298565b820191906000526020600020905b81548152906001019060200180831161127b57829003601f168201915b505050505081565b600a5481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60085481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135157600080fd5b600560149054906101000a900460ff1615151561136d57600080fd5b808210151561137b57600080fd5b814310151561138957600080fd5b81600681905550806007819055506001600560146101000a81548160ff0219169083151502179055505050565b600080600560149054906101000a900460ff161515156113d557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561143357600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506000821415151561148557600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114d6600a5483610aa2565b600a81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ad68ebf733846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115a457600080fd5b505af11580156115b8573d6000803e3d6000fd5b505050506040513d60208110156115ce57600080fd5b810190808051906020019092919050505015156115ea57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167fa59785389b00cbd19745afbe8d59b28e3161395c6b1e3525861a2b0dede0b90d836040518082815260200191505060405180910390a25050565b6040805190810160405280600381526020017f424747000000000000000000000000000000000000000000000000000000000081525081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116d357600080fd5b6116dc82611c8e565b90506008546009548201111515156116f357600080fd5b6116ff60085482611c9e565b6008819055507f9ecdebfa921d6ab8cecf7259ef30327664ad0d45d32fa3641089b00b533f2eee816040518082815260200191505060405180910390a15050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561179c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117d857600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156118935750600082115b156119a05781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506119a5565b600090505b92915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a0957600080fd5b611a1282611c8e565b9050600054600854820111151515611a2957600080fd5b611a3560085482610aa2565b6008819055507ffaabf704b783af9e21c676de8e3e6e0c9c2260dce2ee299437ec9b70151ddaeb816040518082815260200191505060405180910390a15050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ad257600080fd5b60008114151515611ae257600080fd5b600b548114151515611af357600080fd5b80600b8190555050565b60065481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611be657600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163114151515611c0d57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515611c8657600080fd5b565b60075481565b60006012600a0a82029050919050565b600080828410151515611cad57fe5b828403905080915050929150505600a165627a7a72305820de8de86739292de63eab1eb7fc0fe77f0dd7ea6b4fb5c52c8c296b39cf0ed6470029
#@coverage
Achieved 93.67% coverage for code: 608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610297578063095ea7b3146103275780630a9ffdb71461038c57806313b53153146103d957806318160ddd1461040857806323b872dd1461043357806326a21575146104b8578063313ce567146104e357806332513ce51461050e5780634172d080146105655780634477c5da146105905780634a36df25146105a757806354fd4d50146105ea5780636fe3a5671461067a57806370a08231146106a5578063771282f6146106fc578063775c46cd146107275780638fd3ab801461075e57806395d89b411461077557806398e52f9a14610805578063a6f9dae114610832578063a81c3bdf14610875578063a9059cbb146108cc578063b921e16314610931578063cb7b86731461095e578063d648a6471461098b578063dd62ed3e146109b6578063e28d717b14610a2d578063ff29507d14610a44575b6000600560149054906101000a900460ff16151561019257600080fd5b600034141515156101a257600080fd5b60065443101515156101b357600080fd5b60075443111515156101c457600080fd5b6101d034600b54610a6f565b90506008546009548201111515156101e757600080fd5b6101f360095482610aa2565b60098190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f7ba26a0f068612fb882b3272004674d21fed286c2c8c795cf653044690b32db4826040518082815260200191505060405180910390a250005b3480156102a357600080fd5b506102ac610acc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ec5780820151818401526020810190506102d1565b50505050905090810190601f1680156103195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033357600080fd5b50610372600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b2c565b604051808215151515815260200191505060405180910390f35b34801561039857600080fd5b506103d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c1e565b005b3480156103e557600080fd5b506103ee610da5565b604051808215151515815260200191505060405180910390f35b34801561041457600080fd5b5061041d610db8565b6040518082815260200191505060405180910390f35b34801561043f57600080fd5b5061049e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dbe565b604051808215151515815260200191505060405180910390f35b3480156104c457600080fd5b506104cd61103a565b6040518082815260200191505060405180910390f35b3480156104ef57600080fd5b506104f8611040565b6040518082815260200191505060405180910390f35b34801561051a57600080fd5b50610523611045565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561057157600080fd5b5061057a61106b565b6040518082815260200191505060405180910390f35b34801561059c57600080fd5b506105a5611071565b005b3480156105b357600080fd5b506105e8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611105565b005b3480156105f657600080fd5b506105ff611202565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561063f578082015181840152602081019050610624565b50505050905090810190601f16801561066c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561068657600080fd5b5061068f6112a0565b6040518082815260200191505060405180910390f35b3480156106b157600080fd5b506106e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a6565b6040518082815260200191505060405180910390f35b34801561070857600080fd5b506107116112ef565b6040518082815260200191505060405180910390f35b34801561073357600080fd5b5061075c60048036038101908080359060200190929190803590602001909291905050506112f5565b005b34801561076a57600080fd5b506107736113b6565b005b34801561078157600080fd5b5061078a61163c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ca5780820151818401526020810190506107af565b50505050905090810190601f1680156107f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561081157600080fd5b5061083060048036038101908080359060200190929190505050611675565b005b34801561083e57600080fd5b50610873600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611740565b005b34801561088157600080fd5b5061088a61181c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108d857600080fd5b50610917600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611842565b604051808215151515815260200191505060405180910390f35b34801561093d57600080fd5b5061095c600480360381019080803590602001909291905050506119ab565b005b34801561096a57600080fd5b5061098960048036038101908080359060200190929190505050611a76565b005b34801561099757600080fd5b506109a0611afd565b6040518082815260200191505060405180910390f35b3480156109c257600080fd5b50610a17600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b03565b6040518082815260200191505060405180910390f35b348015610a3957600080fd5b50610a42611b8a565b005b348015610a5057600080fd5b50610a59611c88565b6040518082815260200191505060405180910390f35b60008082840290506000841480610a905750828482811515610a8d57fe5b04145b1515610a9857fe5b8091505092915050565b6000808284019050838110158015610aba5750828110155b1515610ac257fe5b8091505092915050565b606060405190810160405280603f81526020017f424747e585a8e79083e4b8ade5b08fe4bc81e4b89ae882a1e69d83e58cbae59d81526020017f97e993bee695b0e5ad97e8b584e4baa7e7aea1e79086e59fbae98791e4bc9a0081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c7c57600080fd5b60008214151515610c8c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610cc857600080fd5b610cdc610cd483611c8e565b600b54610a6f565b9050600854600954820111151515610cf357600080fd5b610cff60095482610aa2565b60098190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff167f1aee3ddc9eba03c98b273cd914e999b78162e1ddd1c022045394f635a469e105826040518082815260200191505060405180910390a2505050565b600560149054906101000a900460ff1681565b60005481565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610e8b575081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610e975750600082115b1561102e5781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050611033565b600090505b9392505050565b60095481565b601281565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110cd57600080fd5b600560149054906101000a900460ff1615156110e857600080fd5b6000600560146101000a81548160ff021916908315150217905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561116157600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111be57600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112985780601f1061126d57610100808354040283529160200191611298565b820191906000526020600020905b81548152906001019060200180831161127b57829003601f168201915b505050505081565b600a5481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60085481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135157600080fd5b600560149054906101000a900460ff1615151561136d57600080fd5b808210151561137b57600080fd5b814310151561138957600080fd5b81600681905550806007819055506001600560146101000a81548160ff0219169083151502179055505050565b600080600560149054906101000a900460ff161515156113d557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561143357600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506000821415151561148557600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114d6600a5483610aa2565b600a81905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ad68ebf733846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115a457600080fd5b505af11580156115b8573d6000803e3d6000fd5b505050506040513d60208110156115ce57600080fd5b810190808051906020019092919050505015156115ea57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167fa59785389b00cbd19745afbe8d59b28e3161395c6b1e3525861a2b0dede0b90d836040518082815260200191505060405180910390a25050565b6040805190810160405280600381526020017f424747000000000000000000000000000000000000000000000000000000000081525081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116d357600080fd5b6116dc82611c8e565b90506008546009548201111515156116f357600080fd5b6116ff60085482611c9e565b6008819055507f9ecdebfa921d6ab8cecf7259ef30327664ad0d45d32fa3641089b00b533f2eee816040518082815260200191505060405180910390a15050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561179c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117d857600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156118935750600082115b156119a05781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506119a5565b600090505b92915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a0957600080fd5b611a1282611c8e565b9050600054600854820111151515611a2957600080fd5b611a3560085482610aa2565b6008819055507ffaabf704b783af9e21c676de8e3e6e0c9c2260dce2ee299437ec9b70151ddaeb816040518082815260200191505060405180910390a15050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ad257600080fd5b60008114151515611ae257600080fd5b600b548114151515611af357600080fd5b80600b8190555050565b60065481565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611be657600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163114151515611c0d57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515611c8657600080fd5b565b60075481565b60006012600a0a82029050919050565b600080828410151515611cad57fe5b828403905080915050929150505600a165627a7a72305820de8de86739292de63eab1eb7fc0fe77f0dd7ea6b4fb5c52c8c296b39cf0ed6470029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BGGToken
Function name: constructor
PC address: 440
Estimated Gas Usage: 61680 - 288926
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:116

_value * 10 ** decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000000000000000000000000000000020, decoded_data: , value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: BGGToken
Function name: increaseSupply(uint256)
PC address: 2753
Estimated Gas Usage: 4167 - 4922
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:150

safeAdd(currentSupply, value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef02202631b8b6a3ddc1c374ad37119ae982ee7723f5820cd2, decoded_data: , value: 0x0
Caller: [ATTACKER], function: increaseSupply(uint256), txdata: 0xb921e16300000ce723a4ae111f1e45a96477328b3e88c46e053ef997, decoded_data: (89052457517208506360614128694623970498393411263273288251385501655760896,), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: BGGToken
Function name: startFunding(uint256,uint256)
PC address: 4996
Estimated Gas Usage: 2343 - 3098
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:167

require(block.number < _fundingStartBlock)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: startFunding(uint256,uint256), txdata: 0x775c46cd000000000000000000000000000000000000000000000000000000084043000003, decoded_data: (35437871104, 1356938545749799165119972480570561420155507632800475359837393562592731987968), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: BGGToken
Function name: transferETH()
PC address: 7286
Estimated Gas Usage: 4683 - 39624
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:212

ethFundDeposit.send(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x41100000000020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x845100c14a00022, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: transfer(address,uint256), txdata: 0xa9059cbb4f4f4f4f4f4f4f4f4f4f4f4f000000000000000000000000000000000000000000000000000000000000000000000000000000000004, value: 0x0
Caller: [ATTACKER], function: transferETH(), txdata: 0xe28d717b, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BGGToken
Function name: decreaseSupply(uint256)
PC address: 7319
Estimated Gas Usage: 9924 - 31216
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:116

_value * 10 ** decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: decreaseSupply(uint256), txdata: 0x98e52f9a01, decoded_data: (452312848583266388373324160190187140051835877600158453279131187530910662656,), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BGGToken
Function name: allocateToken(address,uint256)
PC address: 7319
Estimated Gas Usage: 16917 - 58399
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:116

_value * 10 ** decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: allocateToken(address,uint256), txdata: 0x0a9ffdb7000000000000000000000000000000000000000000000000000000404000020402, decoded_data: ('0x0000000000000000000000000000004040000204', 904625697166532776746648320380374280103671755200316906558262375061821325312), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BGGToken
Function name: increaseSupply(uint256)
PC address: 7319
Estimated Gas Usage: 10046 - 31338
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:116

_value * 10 ** decimals

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: increaseSupply(uint256), txdata: 0xb921e16301, decoded_data: (452312848583266388373324160190187140051835877600158453279131187530910662656,), value: 0x0


time_used: 36039.860657930374 seconds
#@contract_info_time
0x29c8348a98206056a0ac08b681a5acdaa06c9084.sol:0.4.24:BGGToken:36039.860657930374:36100:60:36000
