++++ 0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol  :  0.5.14  :  cTokenKyberBridge ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 2024
['constructor']:writes at the last depth:['2', '0', '1', '4', '4', '4', '4', '4', '4', '4', '4', '4']
preprocessing: Achieved 99.06% coverage.
dynamic svars:['2', '0', '4']
static svars:['3', '1']
Ending preprocessing.
preprocessing time(s): 28.251145601272583
contract coverage: 85.08%
name() is not reachable
Function Reads: State variables read in conditions
	kill():['1']
	delAdmin(address):['0']
	addAdmin(address):['0']
	setProxy(address):['0']
	delcToken(address):['0']
	proxy():[]
	name():[]
	addcToken(address):['0']
	getSwapQuantity(address,address,uint256):['4']
	isAdmin(address):[]
	getSwapRate(address,address,uint256):['4']
Function Writes: State variables written
	setProxy(address):['3']
	delAdmin(address):['0']
	addcToken(address):['4']
	addAdmin(address):['0']
	delcToken(address):['4']
============================
iteration:3
targets:['getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'name()']
['setProxy(address)']:writes at the last depth:['3']
['delAdmin(address)']:writes at the last depth:['0']
['addcToken(address)']:writes at the last depth:['4']
['addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)']:writes at the last depth:['4']
contract coverage: 96.54%
============================
iteration:4
['delcToken(address)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:5
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:6
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:7
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:8
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:9
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:10
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:11
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:12
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:13
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:14
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:15
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:16
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:17
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'setProxy(address)']:writes at the last depth:['3']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'addAdmin(address)']:writes at the last depth:['0']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'delcToken(address)']:writes at the last depth:['4']
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapQuantity(address,address,uint256)']:writes at the last depth:[]
['delcToken(address)', 'getSwapQuantity(address,address,uint256)', 'getSwapRate(address,address,uint256)', 'getSwapRate(address,address,uint256)']:writes at the last depth:[]
contract coverage: 96.54%
============================
iteration:18
contract coverage: 96.54%
============================
iteration:19
contract coverage: 96.54%
============================
iteration:20
contract coverage: 96.54%
============================
iteration:21
contract coverage: 96.54%
============================
iteration:22
contract coverage: 96.54%
============================
iteration:23
contract coverage: 96.54%
============================
iteration:24
contract coverage: 96.54%
============================
iteration:25
contract coverage: 96.54%
============================
iteration:26
contract coverage: 96.54%
============================
iteration:27
contract coverage: 96.54%
============================
iteration:28
contract coverage: 96.54%
============================
iteration:29
contract coverage: 96.54%
============================
iteration:30
contract coverage: 96.54%
============================
iteration:31
contract coverage: 96.54%
============================
iteration:32
contract coverage: 96.54%
============================
iteration:33
contract coverage: 96.54%
============================
iteration:34
contract coverage: 96.54%
============================
iteration:35
contract coverage: 96.54%
============================
iteration:36
contract coverage: 96.54%
============================
iteration:37
contract coverage: 96.54%
============================
iteration:38
contract coverage: 96.54%
============================
iteration:39
contract coverage: 96.54%
============================
iteration:40
contract coverage: 96.54%
============================
iteration:41
contract coverage: 96.54%
============================
iteration:42
contract coverage: 96.54%
#@statespace
4142 nodes, 4141 edges, 72246 total states
#@coverage
Achieved 20.58% coverage for code: 60806040526040518060400160405280601181526020017f63546f6b656e4b796265724272696467650000000000000000000000000000008152506002908051906020019061004f9291906104c6565b5034801561005c57600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160046000736c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000735d3a536e4d6dbd6114cc1ead35777bab948e364373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000734ddc2d193948926d02f9b1fe9e1daa0718270ed573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073158079ee67fce2f58472a96584a73c7ab9ac95c173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073f5dce57282a584d2746faf1593d3121fcac444dc73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600460007339aa39c021dfbae8fac545936693ac917d5e756373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073f650c3d88d12db855b8bf7d11be6c55a4e07dcc973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073c11b1268c1a384e55c48c2391d8d480264a3a7f473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600073b3319f5d18bc0d84dd1b4825dcde5d5f7266d40773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061056b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061050757805160ff1916838001178555610535565b82800160010185558215610535579182015b82811115610534578251825591602001919060010190610519565b5b5090506105429190610546565b5090565b61056891905b8082111561056457600081600090555060010161054c565b5090565b90565b610f418061057a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806341c0e1b51161007157806341c0e1b5146102d557806362d91855146102df578063704802751461032357806397107d6d14610367578063e00a5bba146103ab578063ec556889146103ef576100a9565b806306fdde03146100ae578063109b88df146101315780631c9fa5931461017557806324d7806c146101f757806334b3371514610253575b600080fd5b6100b6610439565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101736004803603602081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d7565b005b6101e16004803603606081101561018b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ad565b6040518082815260200191505060405180910390f35b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066f565b604051808215151515815260200191505060405180910390f35b6102bf6004803603606081101561026957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106c4565b6040518082815260200191505060405180910390f35b6102dd610a53565b005b610321600480360360208110156102f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b51565b005b6103656004803603602081101561033957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c26565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b005b6103ed600480360360208110156103c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b6103f7610e90565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b505050505081565b6104e03361066f565b610552576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806105bb8585856106c4565b905060008590506000670de0b6b3a7640000838373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561061457600080fd5b505afa158015610628573d6000803e3d6000fd5b505050506040513d602081101561063e57600080fd5b8101908080519060200190929190505050601203600a0a8702028161065f57fe5b0490508093505050509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000806000806000806106d689610eb6565b156107ee5760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561072657600080fd5b505afa15801561073a573d6000803e3d6000fd5b505050506040513d602081101561075057600080fd5b810190808051906020019092919050505095508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107a957600080fd5b505afa1580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b810190808051906020019092919050505088029350506107f5565b8894508692505b6107fe88610eb6565b156109145760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561084e57600080fd5b505afa158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b810190808051906020019092919050505094508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d157600080fd5b505afa1580156108e5573d6000803e3d6000fd5b505050506040513d60208110156108fb57600080fd5b8101908080519060200190929190505050925050610918565b8793505b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166334b337158787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d6020811015610a2257600080fd5b8101908080519060200190929190505050915060008314610a435782820291505b8196505050505050509392505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f74204f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610b5a3361066f565b610bcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610c2f3361066f565b610ca1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610d043361066f565b610d76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610dc33361066f565b610e35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820d56d253b80338e09bf5fd204c914a105ebc51bff6f19d0e05d6d14560d65eae464736f6c634300050e0032
#@coverage
Achieved 96.54% coverage for code: 608060405234801561001057600080fd5b50600436106100a95760003560e01c806341c0e1b51161007157806341c0e1b5146102d557806362d91855146102df578063704802751461032357806397107d6d14610367578063e00a5bba146103ab578063ec556889146103ef576100a9565b806306fdde03146100ae578063109b88df146101315780631c9fa5931461017557806324d7806c146101f757806334b3371514610253575b600080fd5b6100b6610439565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101736004803603602081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d7565b005b6101e16004803603606081101561018b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ad565b6040518082815260200191505060405180910390f35b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066f565b604051808215151515815260200191505060405180910390f35b6102bf6004803603606081101561026957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106c4565b6040518082815260200191505060405180910390f35b6102dd610a53565b005b610321600480360360208110156102f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b51565b005b6103656004803603602081101561033957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c26565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b005b6103ed600480360360208110156103c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b6103f7610e90565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b505050505081565b6104e03361066f565b610552576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806105bb8585856106c4565b905060008590506000670de0b6b3a7640000838373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561061457600080fd5b505afa158015610628573d6000803e3d6000fd5b505050506040513d602081101561063e57600080fd5b8101908080519060200190929190505050601203600a0a8702028161065f57fe5b0490508093505050509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000806000806000806106d689610eb6565b156107ee5760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561072657600080fd5b505afa15801561073a573d6000803e3d6000fd5b505050506040513d602081101561075057600080fd5b810190808051906020019092919050505095508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107a957600080fd5b505afa1580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b810190808051906020019092919050505088029350506107f5565b8894508692505b6107fe88610eb6565b156109145760008990508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561084e57600080fd5b505afa158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b810190808051906020019092919050505094508073ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d157600080fd5b505afa1580156108e5573d6000803e3d6000fd5b505050506040513d60208110156108fb57600080fd5b8101908080519060200190929190505050925050610918565b8793505b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166334b337158787876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d6020811015610a2257600080fd5b8101908080519060200190929190505050915060008314610a435782820291505b8196505050505050509392505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f74204f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610b5a3361066f565b610bcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610c2f3361066f565b610ca1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610d043361066f565b610d76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610dc33361066f565b610e35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5468652063616c6c6572206973206e6f742041646d696e00000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820d56d253b80338e09bf5fd204c914a105ebc51bff6f19d0e05d6d14560d65eae464736f6c634300050e0032
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1559
Estimated Gas Usage: 6789 - 78084
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:134

srcToken.decimals()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000000000000000000000000000001000000000000000, decoded_data: ('0x0000000000000000000000001000000000000000',), value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa0000000000000000000000000000000000000000babababababababababababa0000000400000000000000000000000000020010babababababababababababababababababababababababababababababababa, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1618
Estimated Gas Usage: 6789 - 78084
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:134

18-srcToken.decimals()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000004ddc2d193948926d02f9b1fe9e1daa0718270ed5, decoded_data: ('0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa0000400021000001008010000000000180008002babababababababababababa4ddc2d193948926d02f9b1fe9e1daa0718270ed5babababababababababababababababababababababababababababababababa, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1621
Estimated Gas Usage: 6789 - 78084
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:134

10**(18-srcToken.decimals())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa0000000000000000000000000000000000000000babababababababababababa0000000000000000000000000000000000000000babababababababababababababababababababababababababababababababa, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 1964
Estimated Gas Usage: 11577 - 185943
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:148

cToken.exchangeRateCurrent()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000000000000000000000000000000000020000000000, decoded_data: ('0x0000000000000000000000000000020000000000',), value: 0x0
Caller: [CREATOR], function: getSwapRate(address,address,uint256), txdata: 0x34b33715babababababababababababa5d3a536e4d6dbd6114cc1ead35777bab948e3643babababababababababababa39aa39c021dfbae8fac545936693ac917d5e7563babababababababababababababababababababababababababababababababa, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 1964
Estimated Gas Usage: 13291 - 222454
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:148

cToken.exchangeRateCurrent()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba000000000000000000000000fe4f8691bef71fc8d1fa7d6f333adfcd4747e27c, decoded_data: ('0xfe4f8691bef71fc8d1fa7d6f333adfcd4747e27c',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa158079ee67fce2f58472a96584a73c7ab9ac95c1babababababababababababab3319f5d18bc0d84dd1b4825dcde5d5f7266d407babababababababababababababababababababababababababababababababa, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2129
Estimated Gas Usage: 11577 - 185943
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:156

cToken.underlying()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000002010801004208001408040088001400402802020, decoded_data: ('0x2010801004208001408040088001400402802020',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa5d3a536e4d6dbd6114cc1ead35777bab948e3643babababababababababababa158079ee67fce2f58472a96584a73c7ab9ac95c1babababababababababababababababababababababababababababababababa, value: 0x0
Caller: [CREATOR], function: getSwapRate(address,address,uint256), txdata: 0x34b337153131313131313131313131314ddc2d193948926d02f9b1fe9e1daa0718270ed53131313131313131313131316c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e3131313131313131313131313131313131313131313131313131313131313131, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2129
Estimated Gas Usage: 13291 - 222454
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:156

cToken.underlying()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba000000000000000000000000b320015d021001028002010100de208000041010, decoded_data: ('0xb320015d021001028002010100de208000041010',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababac11b1268c1a384e55c48c2391d8d480264a3a7f4babababababababababababaf650c3d88d12db855b8bf7d11be6c55a4e07dcc9babababababababababababababababababababababababababababababababa, value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593313131313131313131313131c11b1268c1a384e55c48c2391d8d480264a3a7f431313131313131313131313139aa39c021dfbae8fac545936693ac917d5e75633131313131313131313131313131313131313131313131313131313131313131, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2260
Estimated Gas Usage: 8334 - 113766
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:157

cToken.exchangeRateCurrent()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba000000000000000000000000f5dce57282a584d2746faf1593d3121fcac444dc, decoded_data: ('0xf5dce57282a584d2746faf1593d3121fcac444dc',), value: 0x0
Caller: [CREATOR], function: getSwapRate(address,address,uint256), txdata: 0x34b33715babababababababababababa00088000040840000880800080d3000000080080babababababababababababa6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4ebabababababababababababababababababababababababababababababababa, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2260
Estimated Gas Usage: 10048 - 150277
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:157

cToken.exchangeRateCurrent()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000000000000000000000002000000000000000000000, decoded_data: ('0x0000000000000000002000000000000000000000',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa0000000000000000002000000000000000000000babababababababababababa158079ee67fce2f58472a96584a73c7ab9ac95c1babababababababababababababababababababababababababababababababa, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapRate(address,address,uint256)
PC address: 2555
Estimated Gas Usage: 8334 - 113766
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:163

kyber.getSwapRate(srcToken,dstToken,srcQuantity)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba0000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab94003600, decoded_data: ('0x5d3a536e4d6dbd6114cc1ead35777bab94003600',), value: 0x0
Caller: [CREATOR], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa158079ee67fce2f58472a96584a73c7ab9ac95c1babababababababababababa6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4ebabababababababababababababababababababababababababababababababa, value: 0x0
Caller: [SOMEGUY], function: getSwapRate(address,address,uint256), txdata: 0x34b33715e5e5e5e5e5e5e5e5e5e5e5e50000000100000000000000000000000000000000e5e5e5e5e5e5e5e5e5e5e5e5c11b1268c1a384e55c48c2391d8d480264a3a7f4e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: cTokenKyberBridge
Function name: getSwapQuantity(address,address,uint256)
PC address: 2555
Estimated Gas Usage: 10048 - 150277
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:163

kyber.getSwapRate(srcToken,dstToken,srcQuantity)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: delcToken(address), txdata: 0xe00a5bba000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c1, decoded_data: ('0x158079ee67fce2f58472a96584a73c7ab9ac95c1',), value: 0x0
Caller: [ATTACKER], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa593babababababababababababa5d3a536e4d6dbd6114cc1ead35777bab948e3643babababababababababababa5d3a536e4d6dbd6114cc1ead35777bab948e3643babababababababababababababababababababababababababababababababa, value: 0x0
Caller: [SOMEGUY], function: getSwapQuantity(address,address,uint256), txdata: 0x1c9fa5931c1c1c1c1c1c1c1c1c1c1c1c00000000000000000000000000000000000000001c1c1c1c1c1c1c1c1c1c1c1c6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c, value: 0x0


time_used: 36066.930507183075 seconds
#@contract_info_time
0x4adc65bca055b390d8eaff37a7f7e11fe572da66.sol:0.5.14:cTokenKyberBridge:36066.930507183075:36100:60:36000
