++++ 0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol  :  0.5.0  :  PolicySet ++++
655251735853922694967911662580490717076041977877 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 5817
['constructor']:writes at the last depth:['0', '1', '3', '4']
preprocessing: Achieved 49.63% coverage.
dynamic svars:['120', '0', '1']
static svars:['2', '4', '3']
Ending preprocessing.
preprocessing time(s): 29.863158702850342
contract coverage: 31.39%
Function Reads: State variables read in conditions
	count():['2']
	getStorageAddress():['2']
	kill():['4']
	deleteAll():['2']
	renounceOwnership():['1']
	owner():[]
	isOwner():[]
	setStorage(address):['1']
	get(uint256):['2']
	changeOwner(address):['1']
	_owner():[]
	addSet(address):['2']
	configAddress():[]
	transferOwnership(address):['1']
	createStorage():['1', '2']
	deleteAddress(bytes32):[]
	getAddress(bytes32):[]
	deleteBool(bytes32):[]
	setInt(bytes32,int256):[]
	deleteBytes(bytes32):[]
	setString(bytes32,string):[]
	getBool(bytes32):[]
	deleteInt(bytes32):[]
	getString(bytes32):[]
	setBool(bytes32,bool):[]
	getUint(bytes32):[]
	getBytes(bytes32):[]
	setAddress(bytes32,address):[]
	setBytes(bytes32,bytes32):[]
	getInt(bytes32):[]
	setUint(bytes32,uint256):[]
	deleteUint(bytes32):[]
	deleteString(bytes32):[]
	validateAddress(address,address):[]
	validateAddresses(address,address,address):[]
	validateGroups(address,address,address):[]
	validateIllegalAddress(address):[]
	validateGroup(address,address):[]
Function Writes: State variables written
	renounceOwnership():['1']
	setStorage(address):['2']
	constructor:['0']
	transferOwnership(address):['1']
	createStorage():['2']
============================
iteration:3
targets:['count()', 'addSet(address)', 'deleteAll()', 'get(uint256)', 'getStorageAddress()', 'createStorage()', 'changeOwner(address)']
['renounceOwnership()']:writes at the last depth:['1']
['setStorage(address)']:writes at the last depth:['2']
['transferOwnership(address)']:writes at the last depth:['1']
['createStorage()']:writes at the last depth:['2']
contract coverage: 45.80%
============================
iteration:4
['createStorage()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:5
['createStorage()', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:6
['createStorage()', 'addSet(address)', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:7
['createStorage()', 'addSet(address)', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:8
['createStorage()', 'addSet(address)', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:9
['createStorage()', 'addSet(address)', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:10
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 47.41%
============================
iteration:11
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:12
['createStorage()', 'addSet(address)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'addSet(address)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'addSet(address)', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:13
['createStorage()', 'addSet(address)', 'renounceOwnership()', 'count()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'renounceOwnership()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'addSet(address)', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:14
['createStorage()', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:15
['createStorage()', 'deleteAll()', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:16
['createStorage()', 'deleteAll()', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:17
['createStorage()', 'deleteAll()', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:18
['createStorage()', 'deleteAll()', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:19
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:20
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:21
['createStorage()', 'deleteAll()', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'deleteAll()', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'deleteAll()', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:22
['createStorage()', 'deleteAll()', 'renounceOwnership()', 'count()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'renounceOwnership()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'deleteAll()', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:23
['createStorage()', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:24
['createStorage()', 'get(uint256)', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:25
['createStorage()', 'get(uint256)', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:26
['createStorage()', 'get(uint256)', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:27
['createStorage()', 'get(uint256)', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:28
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:29
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:30
['createStorage()', 'get(uint256)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'get(uint256)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'get(uint256)', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:31
['createStorage()', 'get(uint256)', 'renounceOwnership()', 'count()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'renounceOwnership()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'get(uint256)', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:32
['createStorage()', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:33
['createStorage()', 'count()', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:34
['createStorage()', 'count()', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:35
['createStorage()', 'count()', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:36
['createStorage()', 'count()', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:37
['createStorage()', 'count()', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:38
['createStorage()', 'count()', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:39
['createStorage()', 'count()', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'count()', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'count()', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'count()', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'count()', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'count()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:40
['createStorage()', 'count()', 'renounceOwnership()', 'count()']:writes at the last depth:[]
['createStorage()', 'count()', 'renounceOwnership()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'count()', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'count()', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:41
['createStorage()', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:42
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:43
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:44
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:45
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:46
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:47
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:48
['createStorage()', 'changeOwner(address)', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:49
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:50
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:51
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:52
['createStorage()', 'changeOwner(address)', 'renounceOwnership()', 'count()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'renounceOwnership()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'changeOwner(address)', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:53
['createStorage()', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:54
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:55
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:56
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'get(uint256)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:57
['createStorage()', 'transferOwnership(address)', 'count()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'count()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'count()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'count()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'count()', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'count()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'count()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'count()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:58
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'changeOwner(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:59
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'transferOwnership(address)', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:60
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:61
['createStorage()', 'transferOwnership(address)', 'renounceOwnership()', 'count()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'renounceOwnership()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'renounceOwnership()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'transferOwnership(address)', 'renounceOwnership()', 'addSet(address)']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:62
['createStorage()', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setStorage(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'setStorage(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:63
['createStorage()', 'setStorage(address)', 'deleteAll()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)', 'deleteAll()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setStorage(address)', 'deleteAll()', 'count()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)', 'deleteAll()', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'deleteAll()', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:64
['createStorage()', 'setStorage(address)', 'addSet(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)', 'addSet(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setStorage(address)', 'addSet(address)', 'count()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)', 'addSet(address)', 'get(uint256)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)', 'addSet(address)']:writes at the last depth:[]
['createStorage()', 'setStorage(address)', 'addSet(address)', 'deleteAll()']:writes at the last depth:[]
contract coverage: 48.86%
============================
iteration:65
contract coverage: 48.86%
============================
iteration:66
contract coverage: 48.86%
============================
iteration:67
contract coverage: 48.86%
============================
iteration:68
contract coverage: 48.86%
============================
iteration:69
contract coverage: 48.86%
============================
iteration:70
contract coverage: 48.86%
============================
iteration:71
contract coverage: 48.86%
============================
iteration:72
contract coverage: 48.86%
============================
iteration:73
contract coverage: 48.86%
============================
iteration:74
contract coverage: 48.86%
============================
iteration:75
contract coverage: 48.86%
============================
iteration:76
contract coverage: 48.86%
============================
iteration:77
contract coverage: 48.86%
#@statespace
22864 nodes, 22863 edges, 283336 total states
#@coverage
Achieved 2.90% coverage for code: 60806040523480156200001157600080fd5b5060405160208062003d96833981018060405260208110156200003357600080fd5b810190808051906020019092919050505080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200009f6200020c640100000000026401000000009004565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200016662000214565b604051809103906000f08015801562000183573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000225565b600033905090565b604051610ad380620032c383390190565b61308e80620002356000396000f3fe6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd146100e0578063393a4d341461010b57806341c0e1b5146101625780634c16440714610179578063715018a6146101905780638da5cb5b146101a75780638f32d59b146101fe5780639137c1a71461022d5780639507d39a1461027e578063a6f9dae1146102f9578063b2bdfa7b1461034a578063d580ded4146103a1578063d6c31871146103f2578063f2fde38b14610449578063fb971d011461049a575b600080fd5b3480156100ec57600080fd5b506100f56104b1565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b5061012061056e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b5061017761065e565b005b34801561018557600080fd5b5061018e61075e565b005b34801561019c57600080fd5b506101a5610b35565b005b3480156101b357600080fd5b506101bc610c72565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020a57600080fd5b50610213610c9c565b604051808215151515815260200191505060405180910390f35b34801561023957600080fd5b5061027c6004803603602081101561025057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b005b34801561028a57600080fd5b506102b7600480360360208110156102a157600080fd5b8101908080359060200190929190505050610dbb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030557600080fd5b506103486004803603602081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e80565b005b34801561035657600080fd5b5061035f610fd4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ad57600080fd5b506103f0600480360360208110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ffa565b005b3480156103fe57600080fd5b506104076113ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045557600080fd5b506104986004803603602081101561046c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113f3565b005b3480156104a657600080fd5b506104af61147b565b005b60006104bb61162a565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56104de61171a565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d602081101561055857600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610636576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610723576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f6e6c79206f776e6572206d6574686f6400000000000000000000000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610766611768565b73ffffffffffffffffffffffffffffffffffffffff166349616d793361078a611792565b73ffffffffffffffffffffffffffffffffffffffff1663b06806466040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156107eb57600080fd5b505afa1580156107ff573d6000803e3d6000fd5b505050506040513d602081101561081557600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b1580156108d557600080fd5b505afa1580156108e9573d6000803e3d6000fd5b5050505060006108f761162a565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f561091a61171a565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d602081101561099457600080fd5b8101908080519060200190929190505050905060008090505b81811015610a935760006109c0826117bb565b90506109ca61162a565b73ffffffffffffffffffffffffffffffffffffffff1663ca446dd98260006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610a6d57600080fd5b505af1158015610a81573d6000803e3d6000fd5b505050505080806001019150506109ad565b50610a9c61162a565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a610abf61171a565b60006040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015610b1a57600080fd5b505af1158015610b2e573d6000803e3d6000fd5b5050505050565b610b3d610c9c565b1515610bb1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cdf611813565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610d03610c9c565b1515610d77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610dc7836117bb565b9050610dd161162a565b73ffffffffffffffffffffffffffffffffffffffff166321f8a721826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610e3d57600080fd5b505afa158015610e51573d6000803e3d6000fd5b505050506040513d6020811015610e6757600080fd5b8101908080519060200190929190505050915050919050565b610e88610c9c565b1515610efc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610fb957600080fd5b505af1158015610fcd573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611002611768565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933611026611792565b73ffffffffffffffffffffffffffffffffffffffff1663b06806466040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561108757600080fd5b505afa15801561109b573d6000803e3d6000fd5b505050506040513d60208110156110b157600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561117157600080fd5b505afa158015611185573d6000803e3d6000fd5b50505050600061119361162a565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56111b661171a565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561120657600080fd5b505afa15801561121a573d6000803e3d6000fd5b505050506040513d602081101561123057600080fd5b81019080805190602001909291905050509050600061124e826117bb565b905061125861162a565b73ffffffffffffffffffffffffffffffffffffffff1663ca446dd982856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b5050505061132660018361181b90919063ffffffff16565b915061133061162a565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a61135361171a565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156113ad57600080fd5b505af11580156113c1573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113fb610c9c565b151561146f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611478816118a5565b50565b611483610c9c565b15156114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156115bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f73746f726167652069732073657474656400000000000000000000000000000081525060200191505060405180910390fd5b60006115c7611a30565b604051809103906000f0801580156115e3573d6000803e3d6000fd5b50905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156116f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060405160200180807f5f706f6c696379536574496e6465780000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008160405160200180807f5f696e6465780000000000000000000000000000000000000000000000000000815250600601828152602001915050604051602081830303815290604052805190602001209050919050565b600033905090565b600080828401905083811015151561189b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611970576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161162280611a418339019056fe6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a7230582065045487f2630428e4ffa56b2ad5287eccaba64777f2c8bc561a197feac4dc7b0029a165627a7a72305820d5dc5c85533ffc8f5bdfde354cedd828dc458b3cfe2a8d329cb38e0df897d0090029608060405234801561001057600080fd5b50610ab3806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806349616d79146100725780636dd893b9146100e3578063a219296314610174578063b292b54914610205578063d16ff47014610256575b600080fd5b34801561007e57600080fd5b506100e16004803603604081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c7565b005b3480156100ef57600080fd5b506101726004803603606081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103d9565b005b34801561018057600080fd5b506102036004803603606081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610526565b005b34801561021157600080fd5b506102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561026257600080fd5b506102c56004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561041257610521565b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c206164647265737300000000000000000081525090151561051f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104e45780820151818401526020810190506104c9565b50505050905090810190601f1680156105115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b8173ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b810190808051906020019092919050505015610604576107b8565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561077b578082015181840152602081019050610760565b50505050905090810190601f1680156107a85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610891578082015181840152602081019050610876565b50505050905090810190601f1680156108be5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561096957600080fd5b505afa15801561097d573d6000803e3d6000fd5b505050506040513d602081101561099357600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c2061646472657373000000000000000000815250901515610a82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a47578082015181840152602081019050610a2c565b50505050905090810190601f168015610a745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505056fea165627a7a72305820c8a7de23b4023e1aeeae8ad0340905328314545e3698e87a3e477b3e71b9fa840029
#@coverage
Achieved 1.09% coverage for code: 608060405234801561001057600080fd5b50610ab3806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806349616d79146100725780636dd893b9146100e3578063a219296314610174578063b292b54914610205578063d16ff47014610256575b600080fd5b34801561007e57600080fd5b506100e16004803603604081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c7565b005b3480156100ef57600080fd5b506101726004803603606081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103d9565b005b34801561018057600080fd5b506102036004803603606081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610526565b005b34801561021157600080fd5b506102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561026257600080fd5b506102c56004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561041257610521565b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c206164647265737300000000000000000081525090151561051f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104e45780820151818401526020810190506104c9565b50505050905090810190601f1680156105115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b8173ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b810190808051906020019092919050505015610604576107b8565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561077b578082015181840152602081019050610760565b50505050905090810190601f1680156107a85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610891578082015181840152602081019050610876565b50505050905090810190601f1680156108be5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561096957600080fd5b505afa15801561097d573d6000803e3d6000fd5b505050506040513d602081101561099357600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c2061646472657373000000000000000000815250901515610a82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a47578082015181840152602081019050610a2c565b50505050905090810190601f168015610a745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505056fea165627a7a72305820c8a7de23b4023e1aeeae8ad0340905328314545e3698e87a3e477b3e71b9fa84002900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 48.86% coverage for code: 6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306661abd146100e0578063393a4d341461010b57806341c0e1b5146101625780634c16440714610179578063715018a6146101905780638da5cb5b146101a75780638f32d59b146101fe5780639137c1a71461022d5780639507d39a1461027e578063a6f9dae1146102f9578063b2bdfa7b1461034a578063d580ded4146103a1578063d6c31871146103f2578063f2fde38b14610449578063fb971d011461049a575b600080fd5b3480156100ec57600080fd5b506100f56104b1565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b5061012061056e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b5061017761065e565b005b34801561018557600080fd5b5061018e61075e565b005b34801561019c57600080fd5b506101a5610b35565b005b3480156101b357600080fd5b506101bc610c72565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020a57600080fd5b50610213610c9c565b604051808215151515815260200191505060405180910390f35b34801561023957600080fd5b5061027c6004803603602081101561025057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cfb565b005b34801561028a57600080fd5b506102b7600480360360208110156102a157600080fd5b8101908080359060200190929190505050610dbb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030557600080fd5b506103486004803603602081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e80565b005b34801561035657600080fd5b5061035f610fd4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ad57600080fd5b506103f0600480360360208110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ffa565b005b3480156103fe57600080fd5b506104076113ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045557600080fd5b506104986004803603602081101561046c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113f3565b005b3480156104a657600080fd5b506104af61147b565b005b60006104bb61162a565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56104de61171a565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d602081101561055857600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610636576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610723576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f6e6c79206f776e6572206d6574686f6400000000000000000000000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610766611768565b73ffffffffffffffffffffffffffffffffffffffff166349616d793361078a611792565b73ffffffffffffffffffffffffffffffffffffffff1663b06806466040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156107eb57600080fd5b505afa1580156107ff573d6000803e3d6000fd5b505050506040513d602081101561081557600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b1580156108d557600080fd5b505afa1580156108e9573d6000803e3d6000fd5b5050505060006108f761162a565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f561091a61171a565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d602081101561099457600080fd5b8101908080519060200190929190505050905060008090505b81811015610a935760006109c0826117bb565b90506109ca61162a565b73ffffffffffffffffffffffffffffffffffffffff1663ca446dd98260006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610a6d57600080fd5b505af1158015610a81573d6000803e3d6000fd5b505050505080806001019150506109ad565b50610a9c61162a565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a610abf61171a565b60006040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015610b1a57600080fd5b505af1158015610b2e573d6000803e3d6000fd5b5050505050565b610b3d610c9c565b1515610bb1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cdf611813565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610d03610c9c565b1515610d77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610dc7836117bb565b9050610dd161162a565b73ffffffffffffffffffffffffffffffffffffffff166321f8a721826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610e3d57600080fd5b505afa158015610e51573d6000803e3d6000fd5b505050506040513d6020811015610e6757600080fd5b8101908080519060200190929190505050915050919050565b610e88610c9c565b1515610efc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610fb957600080fd5b505af1158015610fcd573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611002611768565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933611026611792565b73ffffffffffffffffffffffffffffffffffffffff1663b06806466040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561108757600080fd5b505afa15801561109b573d6000803e3d6000fd5b505050506040513d60208110156110b157600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561117157600080fd5b505afa158015611185573d6000803e3d6000fd5b50505050600061119361162a565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56111b661171a565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561120657600080fd5b505afa15801561121a573d6000803e3d6000fd5b505050506040513d602081101561123057600080fd5b81019080805190602001909291905050509050600061124e826117bb565b905061125861162a565b73ffffffffffffffffffffffffffffffffffffffff1663ca446dd982856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b5050505061132660018361181b90919063ffffffff16565b915061133061162a565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a61135361171a565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156113ad57600080fd5b505af11580156113c1573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113fb610c9c565b151561146f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611478816118a5565b50565b611483610c9c565b15156114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156115bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f73746f726167652069732073657474656400000000000000000000000000000081525060200191505060405180910390fd5b60006115c7611a30565b604051809103906000f0801580156115e3573d6000803e3d6000fd5b50905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156116f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060405160200180807f5f706f6c696379536574496e6465780000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008160405160200180807f5f696e6465780000000000000000000000000000000000000000000000000000815250600601828152602001915050604051602081830303815290604052805190602001209050919050565b600033905090565b600080828401905083811015151561189b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611970576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161162280611a418339019056fe6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a7230582065045487f2630428e4ffa56b2ad5287eccaba64777f2c8bc561a197feac4dc7b0029a165627a7a72305820d5dc5c85533ffc8f5bdfde354cedd828dc458b3cfe2a8d329cb38e0df897d0090029
#@coverage
Achieved 1.25% coverage for code: 6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a7230582065045487f2630428e4ffa56b2ad5287eccaba64777f2c8bc561a197feac4dc7b00290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 23.68% coverage for code: 608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a7230582065045487f2630428e4ffa56b2ad5287eccaba64777f2c8bc561a197feac4dc7b0029
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: deleteAll()
PC address: 2264
Estimated Gas Usage: 12265 - 153439
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:550

addressValidator().validateAddress(
			msg.sender,
			config().policyFactory()
		)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: deleteAll()
PC address: 2413
Estimated Gas Usage: 15879 - 192843
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:555

eternalStorage().getUint(getPlicySetIndexKey())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40101010101010101020101010101010101010101010101010101010101080402, value: 0x0
Caller: [ATTACKER], function: deleteAll(), txdata: 0x4c164407, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: deleteAll()
PC address: 2672
Estimated Gas Usage: 19493 - 232247
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:558

eternalStorage().setAddress(key, address(0))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0x0000000000000000000000000000000000000002',), value: 0x0
Caller: [CREATOR], function: setStorage(address), txdata: 0x9137c1a7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: deleteAll()
PC address: 2672
Estimated Gas Usage: 19493 - 232247
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:558

eternalStorage().setAddress(key, address(0))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40101010101010101010101800410100810011001020108800108040820080402, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0x0000000000000000000000000000000000000002',), value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: deleteAll()
PC address: 2845
Estimated Gas Usage: 19493 - 232247
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:560

eternalStorage().setUint(getPlicySetIndexKey(), 0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0x0000000000000000000000000000000000000002',), value: 0x0
Caller: [CREATOR], function: setStorage(address), txdata: 0x9137c1a7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: deleteAll()
PC address: 2845
Estimated Gas Usage: 12265 - 153439
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:560

eternalStorage().setUint(getPlicySetIndexKey(), 0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40101010101010101010101010101020201010101010101010101010101010103, value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: changeOwner(address)
PC address: 4028
Estimated Gas Usage: 3787 - 38918
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:480

EternalStorage(_storage).changeOwner(newOwner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40101010101020401010101010101010101010101010101010101010101010103, value: 0x0
Caller: [CREATOR], function: setStorage(address), txdata: 0x9137c1a7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [CREATOR], function: changeOwner(address), txdata: 0xa6f9dae10000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0x0000000000000000000000000000000000000002',), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 4468
Estimated Gas Usage: 16171 - 193135
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:537

addressValidator().validateAddress(
			msg.sender,
			config().policyFactory()
		)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 4617
Estimated Gas Usage: 16171 - 193135
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:542

eternalStorage().getUint(getPlicySetIndexKey())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0x0000000000000000000000000000000000000001',), value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 4861
Estimated Gas Usage: 16171 - 193135
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:544

eternalStorage().setAddress(key, _addr)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [CREATOR], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0x0000000000000000000000000000000000000001',), value: 0x0
Caller: [CREATOR], function: setStorage(address), txdata: 0x9137c1a7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 4861
Estimated Gas Usage: 16171 - 193135
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:544

eternalStorage().setAddress(key, _addr)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [CREATOR], function: addSet(address), txdata: 0xd580ded40101010101010101024080040001010140402010080101100120400104042002, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0
Caller: [CREATOR], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0x0000000000000000000000000000000000000002',), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 5040
Estimated Gas Usage: 16171 - 193135
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:546

eternalStorage().setUint(getPlicySetIndexKey(), index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [CREATOR], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0x0000000000000000000000000000000000000001',), value: 0x0
Caller: [CREATOR], function: setStorage(address), txdata: 0x9137c1a7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0
Caller: [ATTACKER], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 5040
Estimated Gas Usage: 16171 - 193135
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:546

eternalStorage().setUint(getPlicySetIndexKey(), index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40101010102010101010101010101010101010101040101010101018001010103, value: 0x0
Caller: [SOMEGUY], function: deleteAll(), txdata: 0x4c164407, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000002, decoded_data: ('0x0000000000000000000000000000000000000002',), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 5040
Estimated Gas Usage: 16171 - 193135
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:546

eternalStorage().setUint(getPlicySetIndexKey(), index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 5705
Estimated Gas Usage: 16171 - 193135
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:452

_storage

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: PolicySet
Function name: addSet(address)
PC address: 5880
Estimated Gas Usage: 16171 - 193135
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:462

_storage

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: addSet(address), txdata: 0xd580ded40000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0


time_used: 36111.945165872574 seconds
#@contract_info_time
0xac1699e45a39ffabf3cb0c3977bad35765eecf9d.sol:0.5.0:PolicySet:36111.945165872574:36100:60:36000
