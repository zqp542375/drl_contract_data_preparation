++++ 0xacf2a1b2b4688a5543a5b4978265ca7145ffb4db.sol  :  0.6.9  :  Heart ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 3625
['constructor']:writes at the last depth:['4', '0', '2', '2']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 99.17% coverage.
dynamic svars:['2']
static svars:['3', '1', '0', '4']
Ending preprocessing.
preprocessing time(s): 109.09033989906311
contract coverage: 84.14%
transferFrom(address,address,uint256) is not reachable
bulkTransfer(address[],uint256[]) is not reachable
Function Reads: State variables read in conditions
	stake(uint256):['2']
	transfer(address,uint256):['2', '1']
	stakedOf(address):[]
	allowance(address,address):[]
	collect():[]
	whitelist(address,bool):['4']
	allInfoFor(address):[]
	balanceOf(address):[]
	totalStaked():[]
	distribute(uint256):['1', '2']
	symbol():[]
	transferFrom(address,address,uint256):[]
	unstake(uint256):['2']
	decimals():[]
	stakeDrop(uint256):['2', '1']
	isWhitelisted(address):[]
	transferAndCall(address,uint256,bytes):['2', '1']
	dividendsOf(address):[]
	name():[]
	approve(address,uint256):[]
	bulkTransfer(address[],uint256[]):[]
	totalSupply():[]
Function Writes: State variables written
	approve(address,uint256):['2']
	unstake(uint256):['3', '1', '2']
	whitelist(address,bool):['2']
	collect():['2']
	transferFrom(address,address,uint256):['2', '3']
	stakeDrop(uint256):['2', '3']
	transfer(address,uint256):['2', '3']
	distribute(uint256):['2', '3']
	stake(uint256):['1', '2']
	transferAndCall(address,uint256,bytes):['2', '3']
	bulkTransfer(address[],uint256[]):['2', '3']
============================
iteration:3
targets:['unstake(uint256)', 'distribute(uint256)', 'stakeDrop(uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)']
['approve(address,uint256)']:writes at the last depth:['2']
['whitelist(address,bool)']:writes at the last depth:['2']
['collect()']:writes at the last depth:['2']
['transfer(address,uint256)']:writes at the last depth:['2']
['stake(uint256)']:writes at the last depth:['2', '1']
['transferAndCall(address,uint256,bytes)']:writes at the last depth:['2']
['transferFrom(address,address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2']
['transferAndCall(address,uint256,bytes)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2']
contract coverage: 84.14%
============================
iteration:4
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'collect()']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'stake(uint256)']:writes at the last depth:['2', '1']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:5
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'collect()']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'stake(uint256)']:writes at the last depth:['2', '1']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:6
contract coverage: 84.14%
============================
iteration:7
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'stake(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:8
contract coverage: 84.14%
============================
iteration:9
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'collect()', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'collect()', 'collect()']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:10
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:11
contract coverage: 84.14%
============================
iteration:12
['bulkTransfer(address[],uint256[])', 'bulkTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:13
contract coverage: 84.14%
============================
iteration:14
['bulkTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:15
contract coverage: 84.14%
============================
iteration:16
contract coverage: 84.14%
============================
iteration:17
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'transferAndCall(address,uint256,bytes)', 'collect()']:writes at the last depth:['2']
contract coverage: 84.14%
============================
iteration:18
contract coverage: 84.14%
============================
iteration:19
contract coverage: 84.44%
============================
iteration:20
contract coverage: 84.44%
============================
iteration:21
contract coverage: 84.44%
============================
iteration:22
['bulkTransfer(address[],uint256[])', 'collect()', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'collect()', 'collect()']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:23
['bulkTransfer(address[],uint256[])', 'collect()', 'collect()', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'collect()', 'collect()', 'collect()']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:24
['bulkTransfer(address[],uint256[])', 'collect()', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'collect()', 'approve(address,uint256)', 'collect()']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:25
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'whitelist(address,bool)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'collect()']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'stake(uint256)']:writes at the last depth:['2', '1']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'transferAndCall(address,uint256,bytes)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:26
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:27
contract coverage: 84.44%
============================
iteration:28
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'stake(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:29
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'collect()', 'collect()']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:30
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'whitelist(address,bool)', 'collect()']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'whitelist(address,bool)', 'stake(uint256)']:writes at the last depth:['2', '1']
['bulkTransfer(address[],uint256[])', 'whitelist(address,bool)', 'whitelist(address,bool)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:31
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'collect()']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:32
contract coverage: 84.44%
============================
iteration:33
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'collect()', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'collect()', 'collect()']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:34
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['bulkTransfer(address[],uint256[])', 'approve(address,uint256)', 'approve(address,uint256)', 'collect()']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:35
['transferAndCall(address,uint256,bytes)', 'approve(address,uint256)']:writes at the last depth:['2']
['transferAndCall(address,uint256,bytes)', 'whitelist(address,bool)']:writes at the last depth:['2']
['transferAndCall(address,uint256,bytes)', 'collect()']:writes at the last depth:['2']
['transferAndCall(address,uint256,bytes)', 'transfer(address,uint256)']:writes at the last depth:['2']
['transferAndCall(address,uint256,bytes)', 'stake(uint256)']:writes at the last depth:['2', '1']
['transferAndCall(address,uint256,bytes)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2']
['transferAndCall(address,uint256,bytes)', 'bulkTransfer(address[],uint256[])']:writes at the last depth:['', '2']
contract coverage: 84.44%
============================
iteration:36
['transferAndCall(address,uint256,bytes)', 'bulkTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 84.44%
============================
iteration:37
contract coverage: 84.44%
============================
iteration:38
contract coverage: 84.44%
============================
iteration:39
contract coverage: 84.44%
============================
iteration:40
contract coverage: 84.44%
============================
iteration:41
contract coverage: 84.44%
============================
iteration:42
contract coverage: 84.44%
============================
iteration:43
contract coverage: 84.44%
============================
iteration:44
contract coverage: 84.44%
============================
iteration:45
contract coverage: 84.44%
============================
iteration:46
contract coverage: 84.44%
============================
iteration:47
contract coverage: 84.44%
============================
iteration:48
contract coverage: 84.44%
============================
iteration:49
contract coverage: 84.44%
============================
iteration:50
contract coverage: 84.44%
============================
iteration:51
contract coverage: 84.44%
#@statespace
3992 nodes, 3991 edges, 58141 total states
#@coverage
Achieved 5.52% coverage for code: 608060405234801561001057600080fd5b5033600060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555069d3c21bcecceda1000000600080018190555069d3c21bcecceda1000000600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef69d3c21bcecceda10000006040518082815260200191505060405180910390a361013d33600161014260201b60201c565b610252565b600060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019f57600080fd5b80600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5a25e09a5dba33161281055e015f1279b6b10204d8f90dd56a8ce2b82322d43d82604051808215151515815260200191505060405180910390a25050565b611bc1806102616000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c806357f6b812116100b8578063a694fc3a1161007c578063a694fc3a1461072b578063a9059cbb14610759578063af500ba3146107bf578063dd62ed3e14610817578063e52253811461088f578063f59c3708146108ad57610141565b806357f6b8121461059057806370a0823114610604578063817b1cd21461065c57806391c05b0b1461067a57806395d89b41146106a857610141565b806323b872dd1161010a57806323b872dd146103735780632e17de78146103f9578063313ce5671461042757806336e234661461044b5780633af32abf146104795780634000aea0146104d557610141565b806265318b1461014657806306fdde031461019e578063095ea7b314610221578063153a1f3e1461028757806318160ddd14610355575b600080fd5b6101886004803603602081101561015c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108fd565b6040518082815260200191505060405180910390f35b6101a66109a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e65780820151818401526020810190506101cb565b50505050905090810190601f1680156102135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026d6004803603604081101561023757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109dd565b604051808215151515815260200191505060405180910390f35b6103536004803603604081101561029d57600080fd5b81019080803590602001906401000000008111156102ba57600080fd5b8201836020820111156102cc57600080fd5b803590602001918460208302840111640100000000831117156102ee57600080fd5b90919293919293908035906020019064010000000081111561030f57600080fd5b82018360208201111561032157600080fd5b8035906020019184602083028401116401000000008311171561034357600080fd5b9091929391929390505050610ad5565b005b61035d610b52565b6040518082815260200191505060405180910390f35b6103df6004803603606081101561038957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b5e565b604051808215151515815260200191505060405180910390f35b6104256004803603602081101561040f57600080fd5b8101908080359060200190929190505050610c96565b005b61042f610ca2565b604051808260ff1660ff16815260200191505060405180910390f35b6104776004803603602081101561046157600080fd5b8101908080359060200190929190505050610ca7565b005b6104bb6004803603602081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610def565b604051808215151515815260200191505060405180910390f35b610576600480360360608110156104eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561053257600080fd5b82018360208201111561054457600080fd5b8035906020019184600183028401116401000000008311171561056657600080fd5b9091929391929390505050610e4a565b604051808215151515815260200191505060405180910390f35b6105d2600480360360208110156105a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7d565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b6106466004803603602081101561061a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc3565b6040518082815260200191505060405180910390f35b61066461101c565b6040518082815260200191505060405180910390f35b6106a66004803603602081101561069057600080fd5b8101908080359060200190929190505050611028565b005b6106b061112d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106f05780820151818401526020810190506106d5565b50505050905090810190601f16801561071d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107576004803603602081101561074157600080fd5b8101908080359060200190929190505050611166565b005b6107a56004803603604081101561076f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611172565b604051808215151515815260200191505060405180910390f35b610801600480360360208110156107d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061118a565b6040518082815260200191505060405180910390f35b6108796004803603604081101561082d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d8565b6040518082815260200191505060405180910390f35b610897611264565b6040518082815260200191505060405180910390f35b6108fb600480360360408110156108c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506113e3565b005b60006001600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600060020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460006003015402038161099c57fe5b049050919050565b6040518060400160405280600581526020017f486561727400000000000000000000000000000000000000000000000000000081525081565b600081600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b818190508484905014610ae757600080fd5b60008090505b84849050811015610b4b57610b3d33868684818110610b0857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16858585818110610b3157fe5b905060200201356114f3565b508080600101915050610aed565b5050505050565b60008060000154905090565b600081600060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bef57600080fd5b81600060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610c8a8484846114f3565b50600190509392505050565b610c9f816117ca565b50565b601281565b80610cb133610fc3565b1015610cbc57600080fd5b600081905081600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600080600101541115610de6576000600101546001820281610d3257fe5b046000600301600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a37f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43816040518082815260200191505060405180910390a1610deb565b600080fd5b5050565b60008060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b600080610e583387876114f3565b90506000863b905060008163ffffffff161115610f6f578673ffffffffffffffffffffffffffffffffffffffff16636be32e73338488886040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050506040513d6020811015610f5457600080fd5b8101908080519060200190929190505050610f6e57600080fd5b5b600192505050949350505050565b6000806000806000610f8d610b52565b610f9561101c565b610f9e88610fc3565b610fa78961118a565b610fb08a6108fd565b9450945094509450945091939590929450565b6000610fce8261118a565b600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154039050919050565b60008060010154905090565b600080600101541161103957600080fd5b8061104333610fc3565b101561104e57600080fd5b80600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060006001015460018202816110b257fe5b046000600301600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6040518060400160405280600581526020017f484541525400000000000000000000000000000000000000000000000000000081525081565b61116f816119e1565b50565b600061117f3384846114f3565b506001905092915050565b60008060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b60008060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080611270336108fd565b9050600081101561128057600080fd5b60018102600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254019250508190555080600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f4256a058fa2b123d727576d3d31e3a272db98ee5fe264e229610ce43dc849999826040518082815260200191505060405180910390a28091505090565b600060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461144057600080fd5b80600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5a25e09a5dba33161281055e015f1279b6b10204d8f90dd56a8ce2b82322d43d82604051808215151515815260200191505060405180910390a25050565b6000816114ff85610fc3565b101561150a57600080fd5b81600060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060006064600384028161156c57fe5b049050600081840390506000806001015411156117055780600060020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600060010154600183028161164c57fe5b046000600301600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a37f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43826040518082815260200191505060405180910390a180925050506117c3565b83600060020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a383925050505b9392505050565b806117d43361118a565b10156117df57600080fd5b60006064600a8302816117ee57fe5b049050600060010154600182028161180257fe5b046000600301600082825401925050819055508160006001016000828254039250508190555080600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555081600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825403925050819055506000600301548202600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8385036040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd836040518082815260200191505060405180910390a25050565b806119eb33610fc3565b10156119f657600080fd5b678ac7230489e8000081611a093361118a565b011015611a1557600080fd5b8060006001016000828254019250508190555080600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055506000600301548102600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a826040518082815260200191505060405180910390a25056fea26469706673582212200794b6bcac1d1125479715f1ed59f2d69c26a1300f15a4781f6c5ffb498c5e7564736f6c63430006090033
#@coverage
Achieved 84.44% coverage for code: 608060405234801561001057600080fd5b50600436106101415760003560e01c806357f6b812116100b8578063a694fc3a1161007c578063a694fc3a1461072b578063a9059cbb14610759578063af500ba3146107bf578063dd62ed3e14610817578063e52253811461088f578063f59c3708146108ad57610141565b806357f6b8121461059057806370a0823114610604578063817b1cd21461065c57806391c05b0b1461067a57806395d89b41146106a857610141565b806323b872dd1161010a57806323b872dd146103735780632e17de78146103f9578063313ce5671461042757806336e234661461044b5780633af32abf146104795780634000aea0146104d557610141565b806265318b1461014657806306fdde031461019e578063095ea7b314610221578063153a1f3e1461028757806318160ddd14610355575b600080fd5b6101886004803603602081101561015c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108fd565b6040518082815260200191505060405180910390f35b6101a66109a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e65780820151818401526020810190506101cb565b50505050905090810190601f1680156102135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61026d6004803603604081101561023757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109dd565b604051808215151515815260200191505060405180910390f35b6103536004803603604081101561029d57600080fd5b81019080803590602001906401000000008111156102ba57600080fd5b8201836020820111156102cc57600080fd5b803590602001918460208302840111640100000000831117156102ee57600080fd5b90919293919293908035906020019064010000000081111561030f57600080fd5b82018360208201111561032157600080fd5b8035906020019184602083028401116401000000008311171561034357600080fd5b9091929391929390505050610ad5565b005b61035d610b52565b6040518082815260200191505060405180910390f35b6103df6004803603606081101561038957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b5e565b604051808215151515815260200191505060405180910390f35b6104256004803603602081101561040f57600080fd5b8101908080359060200190929190505050610c96565b005b61042f610ca2565b604051808260ff1660ff16815260200191505060405180910390f35b6104776004803603602081101561046157600080fd5b8101908080359060200190929190505050610ca7565b005b6104bb6004803603602081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610def565b604051808215151515815260200191505060405180910390f35b610576600480360360608110156104eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561053257600080fd5b82018360208201111561054457600080fd5b8035906020019184600183028401116401000000008311171561056657600080fd5b9091929391929390505050610e4a565b604051808215151515815260200191505060405180910390f35b6105d2600480360360208110156105a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7d565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b6106466004803603602081101561061a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc3565b6040518082815260200191505060405180910390f35b61066461101c565b6040518082815260200191505060405180910390f35b6106a66004803603602081101561069057600080fd5b8101908080359060200190929190505050611028565b005b6106b061112d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106f05780820151818401526020810190506106d5565b50505050905090810190601f16801561071d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107576004803603602081101561074157600080fd5b8101908080359060200190929190505050611166565b005b6107a56004803603604081101561076f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611172565b604051808215151515815260200191505060405180910390f35b610801600480360360208110156107d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061118a565b6040518082815260200191505060405180910390f35b6108796004803603604081101561082d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d8565b6040518082815260200191505060405180910390f35b610897611264565b6040518082815260200191505060405180910390f35b6108fb600480360360408110156108c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506113e3565b005b60006001600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154600060020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460006003015402038161099c57fe5b049050919050565b6040518060400160405280600581526020017f486561727400000000000000000000000000000000000000000000000000000081525081565b600081600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b818190508484905014610ae757600080fd5b60008090505b84849050811015610b4b57610b3d33868684818110610b0857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16858585818110610b3157fe5b905060200201356114f3565b508080600101915050610aed565b5050505050565b60008060000154905090565b600081600060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bef57600080fd5b81600060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610c8a8484846114f3565b50600190509392505050565b610c9f816117ca565b50565b601281565b80610cb133610fc3565b1015610cbc57600080fd5b600081905081600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600080600101541115610de6576000600101546001820281610d3257fe5b046000600301600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a37f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43816040518082815260200191505060405180910390a1610deb565b600080fd5b5050565b60008060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b600080610e583387876114f3565b90506000863b905060008163ffffffff161115610f6f578673ffffffffffffffffffffffffffffffffffffffff16636be32e73338488886040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b505050506040513d6020811015610f5457600080fd5b8101908080519060200190929190505050610f6e57600080fd5b5b600192505050949350505050565b6000806000806000610f8d610b52565b610f9561101c565b610f9e88610fc3565b610fa78961118a565b610fb08a6108fd565b9450945094509450945091939590929450565b6000610fce8261118a565b600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154039050919050565b60008060010154905090565b600080600101541161103957600080fd5b8061104333610fc3565b101561104e57600080fd5b80600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060006001015460018202816110b257fe5b046000600301600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6040518060400160405280600581526020017f484541525400000000000000000000000000000000000000000000000000000081525081565b61116f816119e1565b50565b600061117f3384846114f3565b506001905092915050565b60008060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b60008060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080611270336108fd565b9050600081101561128057600080fd5b60018102600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254019250508190555080600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f4256a058fa2b123d727576d3d31e3a272db98ee5fe264e229610ce43dc849999826040518082815260200191505060405180910390a28091505090565b600060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461144057600080fd5b80600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5a25e09a5dba33161281055e015f1279b6b10204d8f90dd56a8ce2b82322d43d82604051808215151515815260200191505060405180910390a25050565b6000816114ff85610fc3565b101561150a57600080fd5b81600060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060006064600384028161156c57fe5b049050600081840390506000806001015411156117055780600060020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600060010154600183028161164c57fe5b046000600301600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a37f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43826040518082815260200191505060405180910390a180925050506117c3565b83600060020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a383925050505b9392505050565b806117d43361118a565b10156117df57600080fd5b60006064600a8302816117ee57fe5b049050600060010154600182028161180257fe5b046000600301600082825401925050819055508160006001016000828254039250508190555080600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555081600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825403925050819055506000600301548202600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8385036040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd836040518082815260200191505060405180910390a25050565b806119eb33610fc3565b10156119f657600080fd5b678ac7230489e8000081611a093361118a565b011015611a1557600080fd5b8060006001016000828254019250508190555080600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055506000600301548102600060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825401925050819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a33373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a826040518082815260200191505060405180910390a25056fea26469706673582212200794b6bcac1d1125479715f1ed59f2d69c26a1300f15a4781f6c5ffb498c5e7564736f6c63430006090033
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Heart
Function name: transferAndCall(address,uint256,bytes)
PC address: 3885
Estimated Gas Usage: 19592 - 98511
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xacf2a1b2b4688a5543a5b4978265ca7145ffb4db.sol:111

Callable(_to).tokenCallback(msg.sender, _transferred, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transferAndCall(address,uint256,bytes), txdata: 0x4000aea0800004000000200000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Heart
Function name: unstake(uint256)
PC address: 6145
Estimated Gas Usage: 2130 - 2415
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xacf2a1b2b4688a5543a5b4978265ca7145ffb4db.sol:142

function stakedOf(address _user) public view returns (uint256) {
		return info.users[_user].staked;
	}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: unstake(uint256), txdata: 0x2e17de780000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0


time_used: 36036.69789290428 seconds
#@contract_info_time
0xacf2a1b2b4688a5543a5b4978265ca7145ffb4db.sol:0.6.9:Heart:36036.69789290428:36100:60:36000
