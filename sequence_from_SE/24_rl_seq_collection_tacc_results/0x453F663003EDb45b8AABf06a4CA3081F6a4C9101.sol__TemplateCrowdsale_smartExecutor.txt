++++ 0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol  :  0.4.23  :  TemplateCrowdsale ++++
826832220421351442372019478560225138297127374303 is added into actors.
Starting preprocessing.
number of genesis states: 2
total instructions: 3936
['constructor']:writes at the last depth:['6', '8', '2', '1', '0', '4', '5', '7']
['constructor']:writes at the last depth:['6', '8', '2', '1', '0', '4', '5', '7']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 95.48% coverage.
dynamic svars:[]
static svars:['6', '5', '8', '3', '7', '4', '2', '0', '1']
Ending preprocessing.
preprocessing time(s): 101.14658546447754
contract coverage: 87.17%
fallback is not reachable
Function Reads: State variables read in conditions
	CONTINUE_MINTING():[]
	hasClosed():['5']
	initialized():[]
	TOKEN_NAME():[]
	TOKEN_SYMBOL():[]
	rate():[]
	endTime():[]
	cap():[]
	weiRaised():[]
	hasStarted():[]
	closingTime():[]
	finalize():['6', '5']
	capReached():[]
	wallet():[]
	TOKEN_DECIMAL_MULTIPLIER():[]
	TOKEN_DECIMALS():[]
	renounceOwnership():['6']
	TARGET_USER():[]
	startTime():[]
	isFinalized():[]
	owner():[]
	PAUSED():[]
	openingTime():[]
	setEndTime(uint256):['6', '5', '4']
	TOKEN_DECIMALS_UINT8():[]
	START_TIME():[]
	init():['6', '8']
	buyTokens(address):['4', '5', '3', '7']
	hasEnded():['5']
	transferOwnership(address):['6']
	token():[]
Function Writes: State variables written
	renounceOwnership():['6']
	setEndTime(uint256):['5']
	transferOwnership(address):['6']
	init():['8', '6']
	finalize():['6']
	fallback:['3']
============================
iteration:3
targets:['finalize()', 'init()', 'fallback', 'buyTokens(address)']
['renounceOwnership()']:writes at the last depth:['6']
['renounceOwnership()']:writes at the last depth:['6']
['setEndTime(uint256)']:writes at the last depth:['5']
['setEndTime(uint256)']:writes at the last depth:['5']
['transferOwnership(address)']:writes at the last depth:['6']
['transferOwnership(address)']:writes at the last depth:['6']
['finalize()']:writes at the last depth:['6']
['finalize()']:writes at the last depth:['6']
['fallback']:writes at the last depth:['3']
['fallback']:writes at the last depth:['3']
['fallback']:writes at the last depth:['3']
['fallback']:writes at the last depth:['3']
['buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:4
['buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:5
['buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:6
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:7
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:8
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:9
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:10
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:11
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:12
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.39%
============================
iteration:13
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.47%
============================
iteration:14
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 88.47%
============================
iteration:15
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:['3']
contract coverage: 88.47%
============================
iteration:16
contract coverage: 88.47%
============================
iteration:17
contract coverage: 88.47%
============================
iteration:18
contract coverage: 88.47%
============================
iteration:19
contract coverage: 88.47%
============================
iteration:20
contract coverage: 88.47%
============================
iteration:21
contract coverage: 88.47%
============================
iteration:22
contract coverage: 88.47%
============================
iteration:23
contract coverage: 88.47%
============================
iteration:24
contract coverage: 88.47%
============================
iteration:25
contract coverage: 88.47%
============================
iteration:26
contract coverage: 88.47%
============================
iteration:27
contract coverage: 88.47%
============================
iteration:28
contract coverage: 88.47%
============================
iteration:29
contract coverage: 88.47%
============================
iteration:30
contract coverage: 88.47%
============================
iteration:31
contract coverage: 88.47%
============================
iteration:32
contract coverage: 88.47%
============================
iteration:33
contract coverage: 88.47%
============================
iteration:34
contract coverage: 88.47%
============================
iteration:35
contract coverage: 88.47%
============================
iteration:36
contract coverage: 88.47%
============================
iteration:37
contract coverage: 88.47%
============================
iteration:38
contract coverage: 88.47%
============================
iteration:39
contract coverage: 88.47%
============================
iteration:40
contract coverage: 88.47%
============================
iteration:41
contract coverage: 88.47%
============================
iteration:42
contract coverage: 88.47%
============================
iteration:43
contract coverage: 88.47%
============================
iteration:44
contract coverage: 88.47%
============================
iteration:45
contract coverage: 88.47%
#@statespace
10171 nodes, 10170 edges, 113788 total states
#@coverage
Achieved 6.40% coverage for code: 60806040526000600660146101000a81548160ff0219169083151502179055506000600860006101000a81548160ff0219169083151502179055503480156200004757600080fd5b5060405160208062001fd2833981018060405281019080805190602001909291905050506a52b7d2dcc80cd2e400000042635ed9fb80116200008a574262000090565b635ed9fb805b635f6e5a506012600a0a612710027390d470667536cfdf5e71e035d7e44d270e1d0ddf85600083111515620000c457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200010157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200013e57600080fd5b8260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050428210151515620001d957600080fd5b818110151515620001e957600080fd5b8160048190555080600581905550505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000811115156200024a57600080fd5b806007819055505050611d6f80620002636000396000f30060806040526004361061018a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623fd35a146101955780631515bc2b146101c4578063158ef93e146101f357806318821400146102225780632a905318146102b25780632c4e722e146103425780633197cbb61461036d578063355274ea146103985780634042b66f146103c357806344691f7e146103ee5780634b6753bc1461041d5780634bb278f3146104485780634f9359451461045f578063521eb2731461048e57806356780085146104e55780635b7f415c14610510578063715018a61461053b578063726a431a1461055257806378e97925146105a95780638d4e4083146105d45780638da5cb5b14610603578063a9aad58c1461065a578063b7a8807c14610689578063ccb98ffc146106b4578063cf3b1967146106e1578063ddaa26ad14610712578063e1c7392a1461073d578063ec8ac4d814610754578063ecb70fb71461078a578063f2fde38b146107b9578063fc0c546a146107fc575b61019333610853565b005b3480156101a157600080fd5b506101aa610921565b604051808215151515815260200191505060405180910390f35b3480156101d057600080fd5b506101d9610926565b604051808215151515815260200191505060405180910390f35b3480156101ff57600080fd5b50610208610961565b604051808215151515815260200191505060405180910390f35b34801561022e57600080fd5b50610237610974565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027757808201518184015260208101905061025c565b50505050905090810190601f1680156102a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102be57600080fd5b506102c76109ad565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103075780820151818401526020810190506102ec565b50505050905090810190601f1680156103345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034e57600080fd5b506103576109e6565b6040518082815260200191505060405180910390f35b34801561037957600080fd5b506103826109ec565b6040518082815260200191505060405180910390f35b3480156103a457600080fd5b506103ad6109f6565b6040518082815260200191505060405180910390f35b3480156103cf57600080fd5b506103d86109fc565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b50610403610a02565b604051808215151515815260200191505060405180910390f35b34801561042957600080fd5b50610432610a0f565b6040518082815260200191505060405180910390f35b34801561045457600080fd5b5061045d610a15565b005b34801561046b57600080fd5b50610474610af1565b604051808215151515815260200191505060405180910390f35b34801561049a57600080fd5b506104a3610b00565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104f157600080fd5b506104fa610b26565b6040518082815260200191505060405180910390f35b34801561051c57600080fd5b50610525610b2e565b6040518082815260200191505060405180910390f35b34801561054757600080fd5b50610550610b33565b005b34801561055e57600080fd5b50610567610c38565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b557600080fd5b506105be610c50565b6040518082815260200191505060405180910390f35b3480156105e057600080fd5b506105e9610c5a565b604051808215151515815260200191505060405180910390f35b34801561060f57600080fd5b50610618610c6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561066657600080fd5b5061066f610c93565b604051808215151515815260200191505060405180910390f35b34801561069557600080fd5b5061069e610c98565b6040518082815260200191505060405180910390f35b3480156106c057600080fd5b506106df60048036038101908080359060200190929190505050610c9e565b005b3480156106ed57600080fd5b506106f6610d87565b604051808260ff1660ff16815260200191505060405180910390f35b34801561071e57600080fd5b50610727610d8c565b6040518082815260200191505060405180910390f35b34801561074957600080fd5b50610752610d94565b005b610788600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610853565b005b34801561079657600080fd5b5061079f61136b565b604051808215151515815260200191505060405180910390f35b3480156107c557600080fd5b506107fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061137a565b005b34801561080857600080fd5b506108116113e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506108638383611407565b61086c82611444565b90506108838260035461148790919063ffffffff16565b60038190555061089383826114a3565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a361090a83836114b1565b6109126114b5565b61091c8383611520565b505050565b600181565b600080662386f26fc1000061094860035460075461152490919063ffffffff16565b10905061095361153d565b8061095b5750805b91505090565b600860009054906101000a900460ff1681565b6040805190810160405280600681526020017f53616d61656c000000000000000000000000000000000000000000000000000081525081565b6040805190810160405280600381526020017f534d4c000000000000000000000000000000000000000000000000000000000081525081565b60025481565b6000600554905090565b60075481565b60035481565b6000600454421015905090565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a7157600080fd5b600660149054906101000a900460ff16151515610a8d57600080fd5b610a95610926565b1515610aa057600080fd5b610aa861155b565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600660146101000a81548160ff021916908315150217905550565b60006007546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6012600a0a81565b601281565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b8f57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7390d470667536cfdf5e71e035d7e44d270e1d0ddf81565b6000600454905090565b600660149054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081565b60045481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cfa57600080fd5b60055442101515610d0a57600080fd5b8042101515610d1857600080fd5b60045481111515610d2857600080fd5b7ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7600454826004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a18060058190555050565b601281565b635ed9fb8081565b610d9c611c94565b610da4611cb7565b610dac611cda565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0a57600080fd5b600860009054906101000a900460ff16151515610e2657600080fd5b6001600860006101000a81548160ff021916908315150217905550600015610ee6576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b505050505b6060604051908101604052807390d470667536cfdf5e71e035d7e44d270e1d0ddf73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017390d470667536cfdf5e71e035d7e44d270e1d0ddf73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017390d470667536cfdf5e71e035d7e44d270e1d0ddf73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525093506060604051908101604052806a021165458500521280000081526020016a108b2a2c2802909400000081526020016a0c685fa11e01ec6f0000008152509250606060405190810160405280600067ffffffffffffffff1667ffffffffffffffff168152602001600067ffffffffffffffff1667ffffffffffffffff168152602001600067ffffffffffffffff1667ffffffffffffffff168152509150600090505b600381101561131c576000828260038110151561107e57fe5b602002015167ffffffffffffffff1614156111bc576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1985836003811015156110de57fe5b602002015185846003811015156110f157fe5b60200201516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561117b57600080fd5b505af115801561118f573d6000803e3d6000fd5b505050506040513d60208110156111a557600080fd5b81019080805190602001909291905050505061130f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bb2cd6b858360038110151561120757fe5b6020020151858460038110151561121a57fe5b6020020151858560038110151561122d57fe5b60200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018267ffffffffffffffff1667ffffffffffffffff1681526020019350505050602060405180830381600087803b1580156112d257600080fd5b505af11580156112e6573d6000803e3d6000fd5b505050506040513d60208110156112fc57600080fd5b8101908080519060200190929190505050505b8080600101915050611065565b6113397390d470667536cfdf5e71e035d7e44d270e1d0ddf61137a565b7f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c860405160405180910390a150505050565b6000611375610926565b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113d657600080fd5b6113df816117c6565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc10000341015151561141d57600080fd5b6969e10de76676d0800000341115151561143657600080fd5b61144082826118c2565b5050565b600080611450836118f5565b905061147f670de0b6b3a76400006114718386611aad90919063ffffffff16565b611ae590919063ffffffff16565b915050919050565b6000818301905082811015151561149a57fe5b80905092915050565b6114ad8282611afb565b5050565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561151d573d6000803e3d6000fd5b50565b5050565b600082821115151561153257fe5b818303905092915050565b6000611547611c09565b806115565750611555610af1565b5b905090565b611563611c15565b600015611608576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156115ef57600080fd5b505af1158015611603573d6000803e3d6000fd5b505050505b600115156116dc576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d64bcb46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b505050506040513d60208110156116bf57600080fd5b810190808051906020019092919050505015156116db57600080fd5b5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b7390d470667536cfdf5e71e035d7e44d270e1d0ddf6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156117ac57600080fd5b505af11580156117c0573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561180257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6118cc8282611c17565b6007546118e48260035461148790919063ffffffff16565b111515156118f157600080fd5b5050565b600080611900611cfd565b611908611cfd565b611910611d20565b611918611d20565b611920611cfd565b6000806000600254985060206040519081016040528069021e19e0c9bab2400000815250975060206040519081016040528069021e593d0ebd5cc600008152509650602060405190810160405280635ed9fb8067ffffffffffffffff1667ffffffffffffffff168152509550602060405190810160405280635efd076067ffffffffffffffff1667ffffffffffffffff16815250945060206040519081016040528060c88152509350600092505b6001831015611a9c5760035488846001811015156119e857fe5b602002015111158015611a0e57508683600181101515611a0457fe5b6020020151600354105b9150428684600181101515611a1f57fe5b602002015167ffffffffffffffff1611158015611a5757508483600181101515611a4557fe5b602002015167ffffffffffffffff1642105b9050818015611a635750805b15611a8f576103e88484600181101515611a7957fe5b60200201518a02811515611a8957fe5b04890198505b82806001019350506119ce565b889950505050505050505050919050565b600080831415611ac05760009050611adf565b8183029050818382811515611ad157fe5b04141515611adb57fe5b8090505b92915050565b60008183811515611af257fe5b04905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611bbf57600080fd5b505af1158015611bd3573d6000803e3d6000fd5b505050506040513d6020811015611be957600080fd5b81019080805190602001909291905050501515611c0557600080fd5b5050565b60006005544211905090565b565b6004544210158015611c2b57506005544211155b1515611c3657600080fd5b611c408282611c44565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c8057600080fd5b60008114151515611c9057600080fd5b5050565b606060405190810160405280600390602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b602060405190810160405280600190602082028038833980820191505090505090565b6020604051908101604052806001906020820280388339808201915050905050905600a165627a7a72305820c3ce3f0b09ad7205646614c867e75cdd4f1ac6fcd0628b9979a7c7baf616d06d0029
#@coverage
Achieved 88.47% coverage for code: 
==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: constructor
PC address: 131
Estimated Gas Usage: 11876 - 55216
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:897

START_TIME > now ? START_TIME : now

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: constructor
PC address: 468
Estimated Gas Usage: 28815 - 133145
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:274

require(_openingTime >= block.timestamp)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: constructor
PC address: 484
Estimated Gas Usage: 28856 - 133186
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:275

require(_closingTime >= _openingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: hasClosed()
PC address: 2392
Estimated Gas Usage: 2768 - 2863
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:934

super.hasClosed() || remainValue

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: hasClosed(), txdata: 0x1515bc2b, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 2715
Estimated Gas Usage: 4780 - 5535
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:706

require(hasClosed())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 2784
Estimated Gas Usage: 13955 - 70188
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:711

isFinalized = true

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 2798
Estimated Gas Usage: 13955 - 70188
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:711

isFinalized = true

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setEndTime(uint256)
PC address: 3333
Estimated Gas Usage: 2379 - 2804
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:943

require(now < closingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setEndTime(uint256), txdata: 0xccb98ffc, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setEndTime(uint256)
PC address: 3347
Estimated Gas Usage: 2407 - 2832
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:945

require(now < _endTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setEndTime(uint256), txdata: 0xccb98ffc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: fallback
PC address: 5307
Estimated Gas Usage: 18778 - 123162
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:208

wallet

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: aaaaaaaaaaaaaaaaaaaaaaaadeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 5383
Estimated Gas Usage: 18778 - 123162
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:208

wallet.transfer(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: fallback
PC address: 5383
Estimated Gas Usage: 18778 - 123162
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:208

wallet.transfer(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: aaaaaaaaaaaaaaaaaaaaaaaadeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: hasClosed()
PC address: 5452
Estimated Gas Usage: 2734 - 2829
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:814

super.hasClosed() || capReached()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: hasClosed(), txdata: 0x1515bc2b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 6063
Estimated Gas Usage: 13955 - 70188
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:832

Ownable(token).transferOwnership(TARGET_USER)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 6710
Estimated Gas Usage: 6395 - 20551
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:866

(timeStartsBounds[i] <= now) && (now < timeEndsBounds[i])

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000800000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000080, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 7106
Estimated Gas Usage: 18778 - 123162
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:762

MintableToken(token).mint(_beneficiary, _tokenAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 020202020202020202020202deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 7203
Estimated Gas Usage: 1015 - 1110
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:267

block.timestamp >= openingTime && block.timestamp <= closingTime

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 7217
Estimated Gas Usage: 1035 - 1130
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:267

require(block.timestamp >= openingTime && block.timestamp <= closingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x2386f26fc10000


time_used: 36046.544630527496 seconds
#@contract_info_time
0x453F663003EDb45b8AABf06a4CA3081F6a4C9101.sol:0.4.23:TemplateCrowdsale:36046.544630527496:36100:60:36000
