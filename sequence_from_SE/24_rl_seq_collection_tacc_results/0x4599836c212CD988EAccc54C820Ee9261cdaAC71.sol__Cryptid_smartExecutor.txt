++++ 0x4599836c212CD988EAccc54C820Ee9261cdaAC71.sol  :  0.5.0  :  Cryptid ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 4044
['constructor']:writes at the last depth:['5', '0', '1', '2', '3']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 99.98% coverage.
dynamic svars:['1', '2', '3', '4']
static svars:['5', '0']
Ending preprocessing.
preprocessing time(s): 102.37233400344849
contract coverage: 96.22%
_Tokenname() is not reachable
_Tokensymbol() is not reachable
name() is not reachable
symbol() is not reachable
Function Reads: State variables read in conditions
	name():[]
	approve(address,uint256):[]
	totalSupply():[]
	_Tokenname():[]
	_Tokendecimals():[]
	multiTransfer(address[],uint256[]):['3']
	transferFrom(address,address,uint256):['3', '4']
	decimals():[]
	increaseAllowance(address,uint256):[]
	burn(uint256):['3', '5']
	_Tokensymbol():[]
	_CryptidTokenBalances(address):[]
	balanceOf(address):[]
	burnFrom(address,uint256):['4']
	symbol():[]
	decreaseAllowance(address,uint256):['4']
	transfer(address,uint256):['3']
	_allowed(address,address):[]
	allowance(address,address):[]
Function Writes: State variables written
	approve(address,uint256):['4']
	burn(uint256):['5', '3']
	increaseAllowance(address,uint256):['4']
	decreaseAllowance(address,uint256):['4']
	transferFrom(address,address,uint256):['3', '5', '4']
	burnFrom(address,uint256):['4', '5', '3']
	transfer(address,uint256):['3', '5']
	multiTransfer(address[],uint256[]):['3', '5']
============================
iteration:3
targets:['_Tokenname()', '_Tokensymbol()', 'name()', 'symbol()']
['approve(address,uint256)']:writes at the last depth:['4']
['burn(uint256)']:writes at the last depth:['3', '5']
['increaseAllowance(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)']:writes at the last depth:['3', '5']
['transferFrom(address,address,uint256)']:writes at the last depth:['3', '5', '4']
['multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.22%
============================
iteration:4
['multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['3', '5', '4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.22%
============================
iteration:5
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['3', '5', '4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.22%
============================
iteration:6
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.22%
============================
iteration:7
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.22%
============================
iteration:8
contract coverage: 96.22%
============================
iteration:9
contract coverage: 96.22%
============================
iteration:10
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.22%
============================
iteration:11
contract coverage: 96.22%
============================
iteration:12
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.36%
============================
iteration:13
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'burnFrom(address,uint256)']:writes at the last depth:['3', '5', '4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.36%
============================
iteration:14
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
contract coverage: 96.36%
============================
iteration:15
contract coverage: 96.36%
============================
iteration:16
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
contract coverage: 96.36%
============================
iteration:17
contract coverage: 96.36%
============================
iteration:18
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '3', '5']
contract coverage: 96.36%
============================
iteration:19
contract coverage: 96.36%
============================
iteration:20
contract coverage: 96.36%
============================
iteration:21
contract coverage: 96.36%
============================
iteration:22
contract coverage: 96.36%
============================
iteration:23
contract coverage: 96.36%
============================
iteration:24
['multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
contract coverage: 96.36%
============================
iteration:25
contract coverage: 96.36%
============================
iteration:26
['multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['3', '5']
contract coverage: 96.36%
============================
iteration:27
contract coverage: 96.36%
============================
iteration:28
contract coverage: 96.36%
============================
iteration:29
contract coverage: 96.36%
============================
iteration:30
contract coverage: 96.36%
============================
iteration:31
contract coverage: 96.36%
============================
iteration:32
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
contract coverage: 96.36%
============================
iteration:33
contract coverage: 96.36%
============================
iteration:34
contract coverage: 96.36%
============================
iteration:35
contract coverage: 96.36%
============================
iteration:36
contract coverage: 96.36%
#@statespace
4185 nodes, 4184 edges, 64699 total states
#@coverage
Achieved 7.33% coverage for code: 60806040526a066f0222d28f57292400006005556040805190810160405280600781526020017f43727970746964000000000000000000000000000000000000000000000000008152506040805190810160405280600381526020017f43494400000000000000000000000000000000000000000000000000000000008152506012806000806101000a81548160ff021916908360ff1602179055508260019080519060200190620000b392919062000232565b508160029080519060200190620000cc92919062000232565b50505050620000ed33600554620000f3640100000000026401000000009004565b620002e1565b600081141515156200010457600080fd5b6200016681600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002136401000000000262001d2d179091906401000000009004565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101515156200022857fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027557805160ff1916838001178555620002a6565b82800160010185558215620002a6579182015b82811115620002a557825182559160200191906001019062000288565b5b509050620002b59190620002b9565b5090565b620002de91905b80821115620002da576000816000905550600101620002c0565b5090565b90565b61201980620002f16000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c578063095ea7b31461019c57806318160ddd1461020f5780631929d7051461023a57806319745f3d146102ca5780631e89d545146102fb57806323b872dd14610454578063313ce567146104e7578063395093511461051857806342966c681461058b5780634ae73553146105c65780636ed1ad4c1461065657806370a08231146106bb57806379cc67901461072057806395d89b411461077b578063a457c2d71461080b578063a9059cbb1461087e578063ba0fb861146108f1578063dd62ed3e14610976575b600080fd5b34801561011857600080fd5b506101216109fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610161578082015181840152602081019050610146565b50505050905090810190601f16801561018e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a857600080fd5b506101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9d565b604051808215151515815260200191505060405180910390f35b34801561021b57600080fd5b50610224610bca565b6040518082815260200191505060405180910390f35b34801561024657600080fd5b5061024f610bd4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028f578082015181840152602081019050610274565b50505050905090810190601f1680156102bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d657600080fd5b506102df610c72565b604051808260ff1660ff16815260200191505060405180910390f35b34801561030757600080fd5b506104526004803603604081101561031e57600080fd5b810190808035906020019064010000000081111561033b57600080fd5b82018360208201111561034d57600080fd5b8035906020019184602083028401116401000000008311171561036f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103cf57600080fd5b8201836020820111156103e157600080fd5b8035906020019184602083028401116401000000008311171561040357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610c84565b005b34801561046057600080fd5b506104cd6004803603606081101561047757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cde565b604051808215151515815260200191505060405180910390f35b3480156104f357600080fd5b506104fc611176565b604051808260ff1660ff16815260200191505060405180910390f35b34801561052457600080fd5b506105716004803603604081101561053b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061118c565b604051808215151515815260200191505060405180910390f35b34801561059757600080fd5b506105c4600480360360208110156105ae57600080fd5b81019080803590602001909291905050506113c3565b005b3480156105d257600080fd5b506105db6113d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561061b578082015181840152602081019050610600565b50505050905090810190601f1680156106485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561066257600080fd5b506106a56004803603602081101561067957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061146e565b6040518082815260200191505060405180910390f35b3480156106c757600080fd5b5061070a600480360360208110156106de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611486565b6040518082815260200191505060405180910390f35b34801561072c57600080fd5b506107796004803603604081101561074357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114cf565b005b34801561078757600080fd5b50610790611677565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107d05780820151818401526020810190506107b5565b50505050905090810190601f1680156107fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561081757600080fd5b506108646004803603604081101561082e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611719565b604051808215151515815260200191505060405180910390f35b34801561088a57600080fd5b506108d7600480360360408110156108a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611950565b604051808215151515815260200191505060405180910390f35b3480156108fd57600080fd5b506109606004803603604081101561091457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4d565b6040518082815260200191505060405180910390f35b34801561098257600080fd5b506109e56004803603604081101561099957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c72565b6040518082815260200191505060405180910390f35b606060018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ada57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600554905090565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c6a5780601f10610c3f57610100808354040283529160200191610c6a565b820191906000526020600020905b815481529060010190602001808311610c4d57829003601f168201915b505050505081565b6000809054906101000a900460ff1681565b60008090505b8251811015610cd957610ccb8382815181101515610ca457fe5b906020019060200201518383815181101515610cbc57fe5b90602001906020020151611950565b508080600101915050610c8a565b505050565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d2e57600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610db957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610df557600080fd5b610e4782600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610ea0606484611d1290919063ffffffff16565b90506000610eb78285611cf990919063ffffffff16565b9050610f0b81600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f6382600554611cf990919063ffffffff16565b600581905550610ff884600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109e735ad9bef3b91cd68c45d0dc9b0e713b0693abe807676124fee993bc0000611d4b565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001925050509392505050565b60008060009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111c957600080fd5b61125882600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6113cd3382611e75565b50565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b505050505081565b60036020528060005260406000206000915090505481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561155a57600080fd5b6115e981600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116738282611e75565b5050565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561170f5780601f106116e45761010080835404028352916020019161170f565b820191906000526020600020905b8154815290600101906020018083116116f257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561175657600080fd5b6117e582600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156119a057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119dc57600080fd5b60006119f2606484611d1290919063ffffffff16565b90506000611a098285611cf990919063ffffffff16565b9050611a5d84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611af281600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b4a82600554611cf990919063ffffffff16565b600581905550611b76735ad9bef3b91cd68c45d0dc9b0e713b0693abe807676124fee993bc0000611d4b565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019250505092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515611d0757fe5b818303905092915050565b6000808284811515611d2057fe5b0490508091505092915050565b6000808284019050838110151515611d4157fe5b8091505092915050565b60008114151515611d5b57600080fd5b611d7081600554611d2d90919063ffffffff16565b600581905550611dc881600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008114151515611e8557600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611ed357600080fd5b611ee881600554611cf990919063ffffffff16565b600581905550611f4081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fea165627a7a72305820f1a69f6b608bcb8462d63a621a74742949c950657a66ff5ee8c421e40bd79d8b0029
#@coverage
Achieved 96.36% coverage for code: 608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c578063095ea7b31461019c57806318160ddd1461020f5780631929d7051461023a57806319745f3d146102ca5780631e89d545146102fb57806323b872dd14610454578063313ce567146104e7578063395093511461051857806342966c681461058b5780634ae73553146105c65780636ed1ad4c1461065657806370a08231146106bb57806379cc67901461072057806395d89b411461077b578063a457c2d71461080b578063a9059cbb1461087e578063ba0fb861146108f1578063dd62ed3e14610976575b600080fd5b34801561011857600080fd5b506101216109fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610161578082015181840152602081019050610146565b50505050905090810190601f16801561018e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a857600080fd5b506101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9d565b604051808215151515815260200191505060405180910390f35b34801561021b57600080fd5b50610224610bca565b6040518082815260200191505060405180910390f35b34801561024657600080fd5b5061024f610bd4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028f578082015181840152602081019050610274565b50505050905090810190601f1680156102bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d657600080fd5b506102df610c72565b604051808260ff1660ff16815260200191505060405180910390f35b34801561030757600080fd5b506104526004803603604081101561031e57600080fd5b810190808035906020019064010000000081111561033b57600080fd5b82018360208201111561034d57600080fd5b8035906020019184602083028401116401000000008311171561036f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103cf57600080fd5b8201836020820111156103e157600080fd5b8035906020019184602083028401116401000000008311171561040357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610c84565b005b34801561046057600080fd5b506104cd6004803603606081101561047757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cde565b604051808215151515815260200191505060405180910390f35b3480156104f357600080fd5b506104fc611176565b604051808260ff1660ff16815260200191505060405180910390f35b34801561052457600080fd5b506105716004803603604081101561053b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061118c565b604051808215151515815260200191505060405180910390f35b34801561059757600080fd5b506105c4600480360360208110156105ae57600080fd5b81019080803590602001909291905050506113c3565b005b3480156105d257600080fd5b506105db6113d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561061b578082015181840152602081019050610600565b50505050905090810190601f1680156106485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561066257600080fd5b506106a56004803603602081101561067957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061146e565b6040518082815260200191505060405180910390f35b3480156106c757600080fd5b5061070a600480360360208110156106de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611486565b6040518082815260200191505060405180910390f35b34801561072c57600080fd5b506107796004803603604081101561074357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114cf565b005b34801561078757600080fd5b50610790611677565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107d05780820151818401526020810190506107b5565b50505050905090810190601f1680156107fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561081757600080fd5b506108646004803603604081101561082e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611719565b604051808215151515815260200191505060405180910390f35b34801561088a57600080fd5b506108d7600480360360408110156108a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611950565b604051808215151515815260200191505060405180910390f35b3480156108fd57600080fd5b506109606004803603604081101561091457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4d565b6040518082815260200191505060405180910390f35b34801561098257600080fd5b506109e56004803603604081101561099957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c72565b6040518082815260200191505060405180910390f35b606060018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ada57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600554905090565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c6a5780601f10610c3f57610100808354040283529160200191610c6a565b820191906000526020600020905b815481529060010190602001808311610c4d57829003601f168201915b505050505081565b6000809054906101000a900460ff1681565b60008090505b8251811015610cd957610ccb8382815181101515610ca457fe5b906020019060200201518383815181101515610cbc57fe5b90602001906020020151611950565b508080600101915050610c8a565b505050565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610d2e57600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610db957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610df557600080fd5b610e4782600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610ea0606484611d1290919063ffffffff16565b90506000610eb78285611cf990919063ffffffff16565b9050610f0b81600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f6382600554611cf990919063ffffffff16565b600581905550610ff884600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109e735ad9bef3b91cd68c45d0dc9b0e713b0693abe807676124fee993bc0000611d4b565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001925050509392505050565b60008060009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111c957600080fd5b61125882600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6113cd3382611e75565b50565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b505050505081565b60036020528060005260406000206000915090505481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561155a57600080fd5b6115e981600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116738282611e75565b5050565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561170f5780601f106116e45761010080835404028352916020019161170f565b820191906000526020600020905b8154815290600101906020018083116116f257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561175657600080fd5b6117e582600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156119a057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119dc57600080fd5b60006119f2606484611d1290919063ffffffff16565b90506000611a098285611cf990919063ffffffff16565b9050611a5d84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611af281600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b4a82600554611cf990919063ffffffff16565b600581905550611b76735ad9bef3b91cd68c45d0dc9b0e713b0693abe807676124fee993bc0000611d4b565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019250505092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515611d0757fe5b818303905092915050565b6000808284811515611d2057fe5b0490508091505092915050565b6000808284019050838110151515611d4157fe5b8091505092915050565b60008114151515611d5b57600080fd5b611d7081600554611d2d90919063ffffffff16565b600581905550611dc881600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2d90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008114151515611e8557600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611ed357600080fd5b611ee881600554611cf990919063ffffffff16565b600581905550611f4081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf990919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fea165627a7a72305820f1a69f6b608bcb8462d63a621a74742949c950657a66ff5ee8c421e40bd79d8b0029
==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Cryptid
Function name: multiTransfer(address[],uint256[])
PC address: 3259
Estimated Gas Usage: 37503 - 146740
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4599836c212CD988EAccc54C820Ee9261cdaAC71.sol:132

for (uint256 i = 0; i < receivers.length; i++) {
      transfer(receivers[i], amounts[i]);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d54500000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000, decoded_data: (['0x0000000000000000000000000000000000000001', '0x0000000000000000000000000000000000000000'], [0]), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Cryptid
Function name: decreaseAllowance(address,uint256)
PC address: 7430
Estimated Gas Usage: 1665 - 2140
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4599836c212CD988EAccc54C820Ee9261cdaAC71.sol:175

_allowed[msg.sender][spender].sub(subtractedValue)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: decreaseAllowance(address,uint256), txdata: 0xa457c2d700000000000000000000000000000001800000080020000100021000400002001010400100200810012008010000000000000000000000000000000000000000, decoded_data: ('0x0000000180000008002000010002100040000200', 7265716869108034618903694342895858954731559279066181006231898174248294809600), value: 0x0


time_used: 28579.51042699814 seconds
#@contract_info_time
0x4599836c212CD988EAccc54C820Ee9261cdaAC71.sol:0.5.0:Cryptid:28579.51042699814:36100:60:36000
