++++ 0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol  :  0.5.0  :  VoteCounterStorage ++++
655251735853922694967911662580490717076041977877 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 6110
['constructor']:writes at the last depth:['0', '2', '3', '4']
preprocessing: Achieved 52.06% coverage.
dynamic svars:[]
static svars:['0', '1', '4', '2', '3']
Ending preprocessing.
preprocessing time(s): 30.753344535827637
contract coverage: 37.12%
Function Reads: State variables read in conditions
	getAlreadyVoteFlg(address,address,address):['1']
	getAgreeCount(address):[]
	getStorageAddress():['1']
	kill():['4']
	setAlreadyVoteFlg(address,address,address):['1']
	setAgreeCount(address,uint256):['1']
	renounceOwnership():['0']
	owner():[]
	isOwner():[]
	setStorage(address):['0']
	changeOwner(address):['0']
	_owner():[]
	getOppositeCount(address):['1']
	configAddress():[]
	transferOwnership(address):['0']
	setOppositeCount(address,uint256):['1']
	createStorage():['0', '1']
	deleteAddress(bytes32):[]
	getAddress(bytes32):[]
	deleteBool(bytes32):['1']
	setInt(bytes32,int256):[]
	deleteBytes(bytes32):[]
	setString(bytes32,string):[]
	getBool(bytes32):[]
	deleteInt(bytes32):[]
	getString(bytes32):[]
	setBool(bytes32,bool):[]
	getUint(bytes32):[]
	getBytes(bytes32):[]
	setAddress(bytes32,address):[]
	setBytes(bytes32,bytes32):[]
	getInt(bytes32):[]
	setUint(bytes32,uint256):[]
	deleteUint(bytes32):[]
	deleteString(bytes32):[]
	validateAddress(address,address):[]
	validateAddresses(address,address,address):[]
	validateGroups(address,address,address):[]
	validateIllegalAddress(address):[]
	validateGroup(address,address):[]
Function Writes: State variables written
	renounceOwnership():['0']
	setStorage(address):['1']
	constructor:['0']
	transferOwnership(address):['0']
	createStorage():['1']
============================
iteration:3
targets:['deleteBool(bytes32)', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'getStorageAddress()', 'setAlreadyVoteFlg(address,address,address)', 'createStorage()', 'changeOwner(address)']
['renounceOwnership()']:writes at the last depth:['0']
['setStorage(address)']:writes at the last depth:['1']
['transferOwnership(address)']:writes at the last depth:['0']
['createStorage()']:writes at the last depth:['1']
contract coverage: 50.67%
============================
iteration:4
['createStorage()', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:5
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:6
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:7
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:8
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:9
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:10
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:11
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:12
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 50.67%
============================
iteration:13
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'transferOwnership(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:14
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['1']
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'setStorage(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:15
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setOppositeCount(address,uint256)', 'renounceOwnership()', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:16
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:17
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:18
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:19
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:20
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:21
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:22
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:23
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:24
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:25
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['1']
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:26
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:27
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:28
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:29
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:30
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:31
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:32
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:33
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:34
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:35
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'transferOwnership(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:36
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['1']
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'setStorage(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:37
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'setAgreeCount(address,uint256)', 'renounceOwnership()', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:38
['createStorage()', 'getOppositeCount(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:39
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:40
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:41
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:42
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getOppositeCount(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:43
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'getAlreadyVoteFlg(address,address,address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:44
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'deleteBool(bytes32)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:45
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'changeOwner(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:46
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'setAgreeCount(address,uint256)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'setAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'transferOwnership(address)', 'setOppositeCount(address,uint256)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:47
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'deleteBool(bytes32)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['1']
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'getOppositeCount(address)']:writes at the last depth:[]
['createStorage()', 'getOppositeCount(address)', 'setStorage(address)', 'getAlreadyVoteFlg(address,address,address)']:writes at the last depth:[]
contract coverage: 51.46%
============================
iteration:48
contract coverage: 51.46%
============================
iteration:49
contract coverage: 51.46%
============================
iteration:50
contract coverage: 51.46%
============================
iteration:51
contract coverage: 51.46%
============================
iteration:52
contract coverage: 51.46%
============================
iteration:53
contract coverage: 51.46%
============================
iteration:54
contract coverage: 51.46%
============================
iteration:55
contract coverage: 51.46%
============================
iteration:56
contract coverage: 51.46%
============================
iteration:57
contract coverage: 51.46%
#@statespace
16300 nodes, 16299 edges, 208601 total states
#@coverage
Achieved 2.80% coverage for code: 60806040523480156200001157600080fd5b5060405160208062004055833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050806200005e6200020b640100000000026401000000009004565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200016562000213565b604051809103906000f08015801562000182573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000224565b600033905090565b604051610ad3806200358283390190565b61334e80620002346000396000f3fe6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630d54e795146100f657806312760bd31461019f578063393a4d341461020457806341c0e1b51461025b57806365cac4131461027257806365f5365814610303578063715018a6146103725780638da5cb5b146103895780638f32d59b146103e05780639137c1a71461040f578063a6f9dae114610460578063b2bdfa7b146104b1578063bc6570e814610508578063d6c318711461056d578063f2fde38b146105c4578063f9d02dc114610615578063fb971d0114610684575b600080fd5b34801561010257600080fd5b506101856004803603606081101561011957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061069b565b604051808215151515815260200191505060405180910390f35b3480156101ab57600080fd5b506101ee600480360360208110156101c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610764565b6040518082815260200191505060405180910390f35b34801561021057600080fd5b50610219610824565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026757600080fd5b50610270610914565b005b34801561027e57600080fd5b506103016004803603606081101561029557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a14565b005b34801561030f57600080fd5b5061035c6004803603604081101561032657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c53565b6040518082815260200191505060405180910390f35b34801561037e57600080fd5b50610387610e88565b005b34801561039557600080fd5b5061039e610fc3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ec57600080fd5b506103f5610fec565b604051808215151515815260200191505060405180910390f35b34801561041b57600080fd5b5061045e6004803603602081101561043257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104a565b005b34801561046c57600080fd5b506104af6004803603602081101561048357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110a565b005b3480156104bd57600080fd5b506104c661125e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051457600080fd5b506105576004803603602081101561052b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611284565b6040518082815260200191505060405180910390f35b34801561057957600080fd5b50610582611344565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d057600080fd5b50610613600480360360208110156105e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061136e565b005b34801561062157600080fd5b5061066e6004803603604081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113f6565b6040518082815260200191505060405180910390f35b34801561069057600080fd5b5061069961162b565b005b6000806106a98585856117da565b90506106b36118f5565b73ffffffffffffffffffffffffffffffffffffffff16637ae1cfca826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d602081101561074957600080fd5b81019080805190602001909291905050509150509392505050565b600061076e6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5610792846119e5565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d602081101561080c57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156108ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f6e6c79206f776e6572206d6574686f6400000000000000000000000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610a1c611a78565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610a40611aa2565b73ffffffffffffffffffffffffffffffffffffffff1663599f36d16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610aa157600080fd5b505afa158015610ab5573d6000803e3d6000fd5b505050506040513d6020811015610acb57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015610b8b57600080fd5b505afa158015610b9f573d6000803e3d6000fd5b505050506000610bb08484846117da565b9050610bba6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663abfdcced8260016040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018215151515815260200192505050600060405180830381600087803b158015610c3557600080fd5b505af1158015610c49573d6000803e3d6000fd5b5050505050505050565b6000610c5d611a78565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610c81611aa2565b73ffffffffffffffffffffffffffffffffffffffff1663599f36d16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610ce257600080fd5b505afa158015610cf6573d6000803e3d6000fd5b505050506040513d6020811015610d0c57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015610dcc57600080fd5b505afa158015610de0573d6000803e3d6000fd5b50505050610dec6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a610e10856119e5565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b5050505092915050565b610e90610fec565b1515610f04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661102e611acc565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611052610fec565b15156110c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611112610fec565b1515611186576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061128e6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56112b284611ad4565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561130257600080fd5b505afa158015611316573d6000803e3d6000fd5b505050506040513d602081101561132c57600080fd5b81019080805190602001909291905050509050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611376610fec565b15156113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6113f381611b67565b50565b6000611400611a78565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933611424611aa2565b73ffffffffffffffffffffffffffffffffffffffff1663599f36d16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d60208110156114af57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561156f57600080fd5b505afa158015611583573d6000803e3d6000fd5b5050505061158f6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a6115b385611ad4565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b15801561160d57600080fd5b505af1158015611621573d6000803e3d6000fd5b5050505092915050565b611633610fec565b15156116a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561176d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f73746f726167652069732073657474656400000000000000000000000000000081525060200191505060405180910390fd5b6000611777611cf0565b604051809103906000f080158015611793573d6000803e3d6000fd5b50905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600083838360405160200180807f5f616c7265616479566f74650000000000000000000000000000000000000000815250600c018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140193505050506040516020818303038152906040528051906020012090509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156119bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f5f6167726565566f7465436f756e740000000000000000000000000000000000815250600f01915050604051602081830303815290604052805190602001209050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b600081604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f5f6f70706f73697465566f7465436f756e740000000000000000000000000000815250601201915050604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161162280611d018339019056fe6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a723058204bf3b91a944e62f78bd7723b35eaec75b9be367448cc50d9e3ebedfd017f754f0029a165627a7a72305820f9c6654c5f65e30d03c0a8967f3fed45ebc142864608a71f3c9905db54fcea020029608060405234801561001057600080fd5b50610ab3806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806349616d79146100725780636dd893b9146100e3578063a219296314610174578063b292b54914610205578063d16ff47014610256575b600080fd5b34801561007e57600080fd5b506100e16004803603604081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c7565b005b3480156100ef57600080fd5b506101726004803603606081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103d9565b005b34801561018057600080fd5b506102036004803603606081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610526565b005b34801561021157600080fd5b506102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561026257600080fd5b506102c56004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561041257610521565b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c206164647265737300000000000000000081525090151561051f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104e45780820151818401526020810190506104c9565b50505050905090810190601f1680156105115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b8173ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b810190808051906020019092919050505015610604576107b8565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561077b578082015181840152602081019050610760565b50505050905090810190601f1680156107a85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610891578082015181840152602081019050610876565b50505050905090810190601f1680156108be5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561096957600080fd5b505afa15801561097d573d6000803e3d6000fd5b505050506040513d602081101561099357600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c2061646472657373000000000000000000815250901515610a82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a47578082015181840152602081019050610a2c565b50505050905090810190601f168015610a745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505056fea165627a7a72305820ee13b37a9ec927b53fc1b3efcc70d2cef1621c2f8f29424d74ad822851a694100029
#@coverage
Achieved 1.09% coverage for code: 608060405234801561001057600080fd5b50610ab3806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806349616d79146100725780636dd893b9146100e3578063a219296314610174578063b292b54914610205578063d16ff47014610256575b600080fd5b34801561007e57600080fd5b506100e16004803603604081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c7565b005b3480156100ef57600080fd5b506101726004803603606081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103d9565b005b34801561018057600080fd5b506102036004803603606081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610526565b005b34801561021157600080fd5b506102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561026257600080fd5b506102c56004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561041257610521565b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c206164647265737300000000000000000081525090151561051f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104e45780820151818401526020810190506104c9565b50505050905090810190601f1680156105115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b8173ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b810190808051906020019092919050505015610604576107b8565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561077b578082015181840152602081019050610760565b50505050905090810190601f1680156107a85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610891578082015181840152602081019050610876565b50505050905090810190601f1680156108be5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561096957600080fd5b505afa15801561097d573d6000803e3d6000fd5b505050506040513d602081101561099357600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c2061646472657373000000000000000000815250901515610a82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a47578082015181840152602081019050610a2c565b50505050905090810190601f168015610a745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505056fea165627a7a72305820ee13b37a9ec927b53fc1b3efcc70d2cef1621c2f8f29424d74ad822851a69410002900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 51.46% coverage for code: 6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630d54e795146100f657806312760bd31461019f578063393a4d341461020457806341c0e1b51461025b57806365cac4131461027257806365f5365814610303578063715018a6146103725780638da5cb5b146103895780638f32d59b146103e05780639137c1a71461040f578063a6f9dae114610460578063b2bdfa7b146104b1578063bc6570e814610508578063d6c318711461056d578063f2fde38b146105c4578063f9d02dc114610615578063fb971d0114610684575b600080fd5b34801561010257600080fd5b506101856004803603606081101561011957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061069b565b604051808215151515815260200191505060405180910390f35b3480156101ab57600080fd5b506101ee600480360360208110156101c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610764565b6040518082815260200191505060405180910390f35b34801561021057600080fd5b50610219610824565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026757600080fd5b50610270610914565b005b34801561027e57600080fd5b506103016004803603606081101561029557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a14565b005b34801561030f57600080fd5b5061035c6004803603604081101561032657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c53565b6040518082815260200191505060405180910390f35b34801561037e57600080fd5b50610387610e88565b005b34801561039557600080fd5b5061039e610fc3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ec57600080fd5b506103f5610fec565b604051808215151515815260200191505060405180910390f35b34801561041b57600080fd5b5061045e6004803603602081101561043257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104a565b005b34801561046c57600080fd5b506104af6004803603602081101561048357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110a565b005b3480156104bd57600080fd5b506104c661125e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051457600080fd5b506105576004803603602081101561052b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611284565b6040518082815260200191505060405180910390f35b34801561057957600080fd5b50610582611344565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d057600080fd5b50610613600480360360208110156105e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061136e565b005b34801561062157600080fd5b5061066e6004803603604081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113f6565b6040518082815260200191505060405180910390f35b34801561069057600080fd5b5061069961162b565b005b6000806106a98585856117da565b90506106b36118f5565b73ffffffffffffffffffffffffffffffffffffffff16637ae1cfca826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d602081101561074957600080fd5b81019080805190602001909291905050509150509392505050565b600061076e6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5610792846119e5565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d602081101561080c57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156108ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f6e6c79206f776e6572206d6574686f6400000000000000000000000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b610a1c611a78565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610a40611aa2565b73ffffffffffffffffffffffffffffffffffffffff1663599f36d16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610aa157600080fd5b505afa158015610ab5573d6000803e3d6000fd5b505050506040513d6020811015610acb57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015610b8b57600080fd5b505afa158015610b9f573d6000803e3d6000fd5b505050506000610bb08484846117da565b9050610bba6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663abfdcced8260016040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018215151515815260200192505050600060405180830381600087803b158015610c3557600080fd5b505af1158015610c49573d6000803e3d6000fd5b5050505050505050565b6000610c5d611a78565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610c81611aa2565b73ffffffffffffffffffffffffffffffffffffffff1663599f36d16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610ce257600080fd5b505afa158015610cf6573d6000803e3d6000fd5b505050506040513d6020811015610d0c57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015610dcc57600080fd5b505afa158015610de0573d6000803e3d6000fd5b50505050610dec6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a610e10856119e5565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b5050505092915050565b610e90610fec565b1515610f04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661102e611acc565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611052610fec565b15156110c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611112610fec565b1515611186576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061128e6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56112b284611ad4565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561130257600080fd5b505afa158015611316573d6000803e3d6000fd5b505050506040513d602081101561132c57600080fd5b81019080805190602001909291905050509050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611376610fec565b15156113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6113f381611b67565b50565b6000611400611a78565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933611424611aa2565b73ffffffffffffffffffffffffffffffffffffffff1663599f36d16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d60208110156114af57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561156f57600080fd5b505afa158015611583573d6000803e3d6000fd5b5050505061158f6118f5565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a6115b385611ad4565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b15801561160d57600080fd5b505af1158015611621573d6000803e3d6000fd5b5050505092915050565b611633610fec565b15156116a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561176d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f73746f726167652069732073657474656400000000000000000000000000000081525060200191505060405180910390fd5b6000611777611cf0565b604051809103906000f080158015611793573d6000803e3d6000fd5b50905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600083838360405160200180807f5f616c7265616479566f74650000000000000000000000000000000000000000815250600c018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140193505050506040516020818303038152906040528051906020012090509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156119bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f5f6167726565566f7465436f756e740000000000000000000000000000000000815250600f01915050604051602081830303815290604052805190602001209050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600033905090565b600081604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401807f5f6f70706f73697465566f7465436f756e740000000000000000000000000000815250601201915050604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405161162280611d018339019056fe6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a723058204bf3b91a944e62f78bd7723b35eaec75b9be367448cc50d9e3ebedfd017f754f0029a165627a7a72305820f9c6654c5f65e30d03c0a8967f3fed45ebc142864608a71f3c9905db54fcea020029
#@coverage
Achieved 1.25% coverage for code: 6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a723058204bf3b91a944e62f78bd7723b35eaec75b9be367448cc50d9e3ebedfd017f754f00290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 23.68% coverage for code: 608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a723058204bf3b91a944e62f78bd7723b35eaec75b9be367448cc50d9e3ebedfd017f754f0029
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: VoteCounterStorage
Function name: setAlreadyVoteFlg(address,address,address)
PC address: 2958
Estimated Gas Usage: 9023 - 114696
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:434

addressValidator().validateAddress(msg.sender, config().voteCounter())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setAlreadyVoteFlg(address,address,address), txdata: 0x65cac413000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000800000000000000000', '0x0000000000000000000000000000000000000000'), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: VoteCounterStorage
Function name: setAlreadyVoteFlg(address,address,address)
PC address: 3128
Estimated Gas Usage: 9023 - 114696
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:437

eternalStorage().setBool(alreadyVoteKey, true)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setOppositeCount(address,uint256), txdata: 0xf9d02dc100000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0008000000000000000000000000000000000000', 0), value: 0x0
Caller: [ATTACKER], function: setAlreadyVoteFlg(address,address,address), txdata: 0x65cac413000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', '0x0000000000000000000040000000000000000000'), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: VoteCounterStorage
Function name: setAgreeCount(address,uint256)
PC address: 3535
Estimated Gas Usage: 8938 - 114702
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:469

addressValidator().validateAddress(msg.sender, config().voteCounter())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setAgreeCount(address,uint256), txdata: 0x65f5365800000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000400', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: VoteCounterStorage
Function name: setAgreeCount(address,uint256)
PC address: 3693
Estimated Gas Usage: 8938 - 114702
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:471

eternalStorage().setUint(getAgreeVoteCountKey(_sender), count)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setOppositeCount(address,uint256), txdata: 0xf9d02dc100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000001', 0), value: 0x0
Caller: [ATTACKER], function: setAgreeCount(address,uint256), txdata: 0x65f5365800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000, decoded_data: ('0x0000000000000000000000000000000000000000', 65536), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: VoteCounterStorage
Function name: setOppositeCount(address,uint256)
PC address: 5490
Estimated Gas Usage: 9158 - 114922
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:491

addressValidator().validateAddress(msg.sender, config().voteCounter())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setOppositeCount(address,uint256), txdata: 0xf9d02dc100000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0800000000000000000000000000000000000000', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: VoteCounterStorage
Function name: setOppositeCount(address,uint256)
PC address: 5648
Estimated Gas Usage: 9158 - 114922
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:493

eternalStorage().setUint(getOppositeVoteCountKey(_sender), count)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setOppositeCount(address,uint256), txdata: 0xf9d02dc100000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000100000000000000000000000000', 0), value: 0x0
Caller: [ATTACKER], function: setOppositeCount(address,uint256), txdata: 0xf9d02dc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', 36028797018963968), value: 0x0


time_used: 36086.26943683624 seconds
#@contract_info_time
0x96b4973cdd121c07c3a9db963f7cbbb4babc9dd9.sol:0.5.0:VoteCounterStorage:36086.26943683624:36100:60:36000
