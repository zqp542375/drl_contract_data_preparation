++++ 0x5376872a5882e828680979683388dc143c251ff2.sol  :  0.5.0  :  LockupStorage ++++
655251735853922694967911662580490717076041977877 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 8366
['constructor']:writes at the last depth:['0', '1', '3', '4']
preprocessing: Achieved 65.05% coverage.
dynamic svars:['101']
static svars:['1', '2', '0', '4', '3']
Ending preprocessing.
preprocessing time(s): 47.343260526657104
contract coverage: 42.77%
deleteBytes(bytes32):0.0 is not considered
Function Reads: State variables read in conditions
	setLastInterestPrice(address,address,uint256):['2']
	setValue(address,address,uint256):['2']
	setAllValue(uint256):['2']
	getStorageAddress():['2']
	kill():['4']
	getValue(address,address):['2']
	getWithdrawalStatus(address,address):['2']
	renounceOwnership():['1']
	getAllValue():['2']
	setPropertyValue(address,uint256):['2']
	owner():[]
	isOwner():[]
	getLastInterestPrice(address,address):['2']
	setStorage(address):['1']
	changeOwner(address):['1']
	_owner():[]
	setWithdrawalStatus(address,address,uint256):['2']
	setInterestPrice(address,uint256):['2']
	configAddress():[]
	getInterestPrice(address):['2']
	transferOwnership(address):['1']
	getPendingInterestWithdrawal(address,address):['2']
	setPendingInterestWithdrawal(address,address,uint256):['2']
	createStorage():['1', '2']
	getPropertyValue(address):['2']
	deleteAddress(bytes32):[]
	getAddress(bytes32):[]
	deleteBool(bytes32):[]
	setInt(bytes32,int256):[]
	deleteBytes(bytes32):[]
	setString(bytes32,string):[]
	getBool(bytes32):[]
	deleteInt(bytes32):[]
	getString(bytes32):[]
	setBool(bytes32,bool):[]
	getUint(bytes32):[]
	getBytes(bytes32):[]
	setAddress(bytes32,address):[]
	setBytes(bytes32,bytes32):[]
	getInt(bytes32):[]
	setUint(bytes32,uint256):[]
	deleteUint(bytes32):[]
	deleteString(bytes32):[]
	validateAddress(address,address):[]
	validateAddresses(address,address,address):[]
	validateGroups(address,address,address):[]
	validateIllegalAddress(address):[]
	validateGroup(address,address):[]
Function Writes: State variables written
	renounceOwnership():['1']
	setStorage(address):['2']
	constructor:['0']
	transferOwnership(address):['1']
	createStorage():['2']
deleteBytes(bytes32):0.0 is not considered
============================
iteration:3
targets:['getInterestPrice(address)', 'getLastInterestPrice(address,address)', 'getPendingInterestWithdrawal(address,address)', 'getAllValue()', 'getPropertyValue(address)', 'getValue(address,address)', 'getWithdrawalStatus(address,address)', 'setInterestPrice(address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getStorageAddress()', 'setAllValue(uint256)', 'setPropertyValue(address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setValue(address,address,uint256)', 'createStorage()', 'changeOwner(address)']
['renounceOwnership()']:writes at the last depth:['1']
['setStorage(address)']:writes at the last depth:['2']
['transferOwnership(address)']:writes at the last depth:['1']
['createStorage()']:writes at the last depth:['2']
contract coverage: 62.79%
============================
iteration:4
['createStorage()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:5
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:6
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:7
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:8
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:9
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:10
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:11
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:12
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:13
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:14
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:15
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:16
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:17
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:18
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:19
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:20
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 62.79%
============================
iteration:21
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:22
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'createStorage()']:writes at the last depth:['2']
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:23
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:24
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:25
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:26
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setWithdrawalStatus(address,address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:27
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'renounceOwnership()']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setStorage(address)']:writes at the last depth:['2']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'changeOwner(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getAllValue()']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getValue(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getWithdrawalStatus(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getLastInterestPrice(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getInterestPrice(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getPropertyValue(address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'getPendingInterestWithdrawal(address,address)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setAllValue(uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setLastInterestPrice(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'deleteBytes(bytes32)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setPropertyValue(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setInterestPrice(address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setWithdrawalStatus(address,address,uint256)']:writes at the last depth:[]
['createStorage()', 'setWithdrawalStatus(address,address,uint256)', 'setInterestPrice(address,uint256)', 'setPendingInterestWithdrawal(address,address,uint256)']:writes at the last depth:[]
contract coverage: 64.13%
============================
iteration:28
contract coverage: 64.13%
============================
iteration:29
contract coverage: 64.13%
============================
iteration:30
contract coverage: 64.13%
============================
iteration:31
contract coverage: 64.13%
============================
iteration:32
contract coverage: 64.13%
============================
iteration:33
contract coverage: 64.13%
============================
iteration:34
contract coverage: 64.13%
============================
iteration:35
contract coverage: 64.13%
============================
iteration:36
contract coverage: 64.13%
============================
iteration:37
contract coverage: 64.13%
============================
iteration:38
contract coverage: 64.13%
============================
iteration:39
contract coverage: 64.13%
============================
iteration:40
contract coverage: 64.13%
============================
iteration:41
contract coverage: 64.13%
============================
iteration:42
contract coverage: 64.13%
============================
iteration:43
contract coverage: 64.13%
============================
iteration:44
contract coverage: 64.13%
============================
iteration:45
contract coverage: 64.13%
============================
iteration:46
contract coverage: 64.13%
============================
iteration:47
contract coverage: 64.13%
============================
iteration:48
contract coverage: 64.13%
============================
iteration:49
contract coverage: 64.13%
============================
iteration:50
contract coverage: 64.13%
============================
iteration:51
contract coverage: 64.13%
============================
iteration:52
contract coverage: 64.13%
============================
iteration:53
contract coverage: 64.13%
============================
iteration:54
contract coverage: 64.13%
============================
iteration:55
contract coverage: 64.13%
============================
iteration:56
contract coverage: 64.13%
============================
iteration:57
contract coverage: 64.13%
============================
iteration:58
contract coverage: 64.13%
============================
iteration:59
contract coverage: 64.13%
============================
iteration:60
contract coverage: 64.13%
============================
iteration:61
contract coverage: 64.13%
#@statespace
17708 nodes, 17707 edges, 222075 total states
#@coverage
Achieved 2.16% coverage for code: 
#@coverage
Achieved 1.09% coverage for code: 608060405234801561001057600080fd5b50610ab3806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806349616d79146100725780636dd893b9146100e3578063a219296314610174578063b292b54914610205578063d16ff47014610256575b600080fd5b34801561007e57600080fd5b506100e16004803603604081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c7565b005b3480156100ef57600080fd5b506101726004803603606081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103d9565b005b34801561018057600080fd5b506102036004803603606081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610526565b005b34801561021157600080fd5b506102546004803603602081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bd565b005b34801561026257600080fd5b506102c56004803603604081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561041257610521565b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601781526020017f7468697320697320696c6c6567616c206164647265737300000000000000000081525090151561051f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104e45780820151818401526020810190506104c9565b50505050905090810190601f1680156105115780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b8173ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b810190808051906020019092919050505015610604576107b8565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561077b578082015181840152602081019050610760565b50505050905090810190601f1680156107a85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601781526020017f7468697320697320696c6c6567616c20616464726573730000000000000000008152509015156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610891578082015181840152602081019050610876565b50505050905090810190601f1680156108be5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16639e0cc3c4836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561096957600080fd5b505afa15801561097d573d6000803e3d6000fd5b505050506040513d602081101561099357600080fd5b81019080805190602001909291905050506040805190810160405280601781526020017f7468697320697320696c6c6567616c2061646472657373000000000000000000815250901515610a82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a47578082015181840152602081019050610a2c565b50505050905090810190601f168015610a745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505056fea165627a7a72305820219528003b68d69daef1bdab1089a3746fd98c3229d269f5517bd85ef506e017002900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 64.13% coverage for code: 608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303ae35481461014e5780631840e810146101c95780631e4d6e0714610258578063393a4d34146102a757806341c0e1b5146102fe57806355fac3be146103155780636aa4ef5a1461039a578063715018a61461041f5780637654f7ab146104365780638891cab3146104615780638da5cb5b146104d05780638f32d59b1461052757806390a46775146105565780639137c1a7146105db578063a6f9dae11461062c578063b2bdfa7b1461067d578063b84c4191146106d4578063c27744691461074f578063d6c31871146107be578063ee02cbb614610815578063f2fde38b1461087a578063f41fb506146108cb578063f8b3928c14610950578063fb971d01146109cb578063fd1ac3d8146109e2575b600080fd5b34801561015a57600080fd5b506101c76004803603606081101561017157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a47565b005b3480156101d557600080fd5b50610242600480360360608110156101ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7a565b6040518082815260200191505060405180910390f35b34801561026457600080fd5b506102916004803603602081101561027b57600080fd5b8101908080359060200190929190505050610eb7565b6040518082815260200191505060405180910390f35b3480156102b357600080fd5b506102bc6110f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030a57600080fd5b506103136111e0565b005b34801561032157600080fd5b506103846004803603604081101561033857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112e0565b6040518082815260200191505060405180910390f35b3480156103a657600080fd5b50610409600480360360408110156103bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a7565b6040518082815260200191505060405180910390f35b34801561042b57600080fd5b5061043461146e565b005b34801561044257600080fd5b5061044b6115ab565b6040518082815260200191505060405180910390f35b34801561046d57600080fd5b506104ba6004803603604081101561048457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061166d565b6040518082815260200191505060405180910390f35b3480156104dc57600080fd5b506104e56118a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053357600080fd5b5061053c6118d2565b604051808215151515815260200191505060405180910390f35b34801561056257600080fd5b506105c56004803603604081101561057957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611931565b6040518082815260200191505060405180910390f35b3480156105e757600080fd5b5061062a600480360360208110156105fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f3565b005b34801561063857600080fd5b5061067b6004803603602081101561064f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab3565b005b34801561068957600080fd5b50610692611c07565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106e057600080fd5b5061074d600480360360608110156106f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c2d565b005b34801561075b57600080fd5b506107a86004803603604081101561077257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e66565b6040518082815260200191505060405180910390f35b3480156107ca57600080fd5b506107d361209b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561082157600080fd5b506108646004803603602081101561083857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120c4565b6040518082815260200191505060405180910390f35b34801561088657600080fd5b506108c96004803603602081101561089d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612184565b005b3480156108d757600080fd5b5061093a600480360360408110156108ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061220c565b6040518082815260200191505060405180910390f35b34801561095c57600080fd5b506109c96004803603606081101561097357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506122ce565b005b3480156109d757600080fd5b506109e0612501565b005b3480156109ee57600080fd5b50610a3160048036036020811015610a0557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126b0565b6040518082815260200191505060405180910390f35b610a4f612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610a7361279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610ad457600080fd5b505afa158015610ae8573d6000803e3d6000fd5b505050506040513d6020811015610afe57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b50505050610bde6127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a610c0385856128b8565b836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015610c5d57600080fd5b505af1158015610c71573d6000803e3d6000fd5b50505050505050565b6000610c84612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610ca861279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610d0957600080fd5b505afa158015610d1d573d6000803e3d6000fd5b505050506040513d6020811015610d3357600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015610df357600080fd5b505afa158015610e07573d6000803e3d6000fd5b505050506000610e17858561298f565b9050610e216127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a82856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015610e9757600080fd5b505af1158015610eab573d6000803e3d6000fd5b50505050509392505050565b6000610ec1612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933610ee561279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d6020811015610f7057600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561103057600080fd5b505afa158015611044573d6000803e3d6000fd5b505050506000611052612a66565b905061105c6127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a82856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b5050505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156111b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f6e6c79206f776e6572206d6574686f6400000000000000000000000000000081525060200191505060405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000806112ed848461298f565b90506112f76127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561136357600080fd5b505afa158015611377573d6000803e3d6000fd5b505050506040513d602081101561138d57600080fd5b810190808051906020019092919050505091505092915050565b6000806113b48484612ab4565b90506113be6127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561142a57600080fd5b505afa15801561143e573d6000803e3d6000fd5b505050506040513d602081101561145457600080fd5b810190808051906020019092919050505091505092915050565b6114766118d2565b15156114ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806115b6612a66565b90506115c06127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561162c57600080fd5b505afa158015611640573d6000803e3d6000fd5b505050506040513d602081101561165657600080fd5b810190808051906020019092919050505091505090565b6000611677612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d793361169b61279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156116fc57600080fd5b505afa158015611710573d6000803e3d6000fd5b505050506040513d602081101561172657600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b1580156117e657600080fd5b505afa1580156117fa573d6000803e3d6000fd5b50505050600061180984612b8b565b90506118136127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a82856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b15801561188957600080fd5b505af115801561189d573d6000803e3d6000fd5b505050505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611915612c1e565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600061193b6127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f561196085856128b8565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b1580156119b057600080fd5b505afa1580156119c4573d6000803e3d6000fd5b505050506040513d60208110156119da57600080fd5b8101908080519060200190929190505050905092915050565b6119fb6118d2565b1515611a6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611abb6118d2565b1515611b2f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611bec57600080fd5b505af1158015611c00573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611c35612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933611c5961279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015611cba57600080fd5b505afa158015611cce573d6000803e3d6000fd5b505050506040513d6020811015611ce457600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015611da457600080fd5b505afa158015611db8573d6000803e3d6000fd5b505050506000611dc88484612ab4565b9050611dd26127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a82846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015611e4857600080fd5b505af1158015611e5c573d6000803e3d6000fd5b5050505050505050565b6000611e70612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d7933611e9461279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015611ef557600080fd5b505afa158015611f09573d6000803e3d6000fd5b505050506040513d6020811015611f1f57600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b158015611fdf57600080fd5b505afa158015611ff3573d6000803e3d6000fd5b50505050611fff6127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a61202385612c26565b846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b15801561207d57600080fd5b505af1158015612091573d6000803e3d6000fd5b5050505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006120ce6127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f56120f284612c26565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561214257600080fd5b505afa158015612156573d6000803e3d6000fd5b505050506040513d602081101561216c57600080fd5b81019080805190602001909291905050509050919050565b61218c6118d2565b1515612200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61220981612cb9565b50565b60006122166127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f561223b8585612e44565b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561228b57600080fd5b505afa15801561229f573d6000803e3d6000fd5b505050506040513d60208110156122b557600080fd5b8101908080519060200190929190505050905092915050565b6122d6612775565b73ffffffffffffffffffffffffffffffffffffffff166349616d79336122fa61279f565b73ffffffffffffffffffffffffffffffffffffffff166306490f476040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561235b57600080fd5b505afa15801561236f573d6000803e3d6000fd5b505050506040513d602081101561238557600080fd5b81019080805190602001909291905050506040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561244557600080fd5b505afa158015612459573d6000803e3d6000fd5b505050506124656127c8565b73ffffffffffffffffffffffffffffffffffffffff1663e2a4853a61248a8585612e44565b836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156124e457600080fd5b505af11580156124f8573d6000803e3d6000fd5b50505050505050565b6125096118d2565b151561257d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612643576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f73746f726167652069732073657474656400000000000000000000000000000081525060200191505060405180910390fd5b600061264d612f1b565b604051809103906000f080158015612669573d6000803e3d6000fd5b50905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806126bc83612b8b565b90506126c66127c8565b73ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561273257600080fd5b505afa158015612746573d6000803e3d6000fd5b505050506040513d602081101561275c57600080fd5b8101908080519060200190929190505050915050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f73746f72616765206973206e6f7420736574746564000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000828260405160200180807f5f6c6173744c617374496e7465726573745072696365000000000000000000008152506016018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405160208183030381529060405280519060200120905092915050565b6000828260405160200180807f5f76616c756500000000000000000000000000000000000000000000000000008152506006018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405160208183030381529060405280519060200120905092915050565b600060405160200180807f5f616c6c56616c75650000000000000000000000000000000000000000000000815250600901905060405160208183030381529060405280519060200120905090565b6000828260405160200180807f5f7769746864726177616c5374617475730000000000000000000000000000008152506011018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405160208183030381529060405280519060200120905092915050565b60008160405160200180807f5f70726f706572747956616c7565000000000000000000000000000000000000815250600e018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001209050919050565b600033905090565b60008160405160200180807f5f696e746572657374546f74616c730000000000000000000000000000000000815250600f018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401915050604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612d84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828260405160200180807f5f70656e64696e67496e7465726573745769746864726177616c000000000000815250601a018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405160208183030381529060405280519060200120905092915050565b60405161162280612f2c8339019056fe6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a72305820f3e3f67d963c5bde003b227bf328feeb36047df3bdbcb8a86628163c0d0a59fd0029a165627a7a7230582048cfe937b1a2301a6fecb1c76a65023c095a656038507dc428876a0d4aba7d920029
#@coverage
Achieved 1.25% coverage for code: 6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506115c2806100606000396000f3fe608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a72305820f3e3f67d963c5bde003b227bf328feeb36047df3bdbcb8a86628163c0d0a59fd00290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 15.25% coverage for code: 608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e14a3761461010c57806321f8a721146101475780632c62ff2d146101c25780633e49bed0146101fd578063616b59f6146102425780636e8995501461027d5780637ae1cfca1461030d5780638c16009514610360578063986e791a1461039b578063a6f9dae11461044f578063abfdcced146104a0578063bd02d0f5146104e7578063c031a18014610536578063ca446dd914610585578063d5d2c560146105e0578063dc97d96214610625578063e2a4853a14610674578063e2b202bf146106b9578063f6bb3cc4146106f4575b600080fd5b34801561011857600080fd5b506101456004803603602081101561012f57600080fd5b810190808035906020019092919050505061072f565b005b34801561015357600080fd5b506101806004803603602081101561016a57600080fd5b810190808035906020019092919050505061082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ce57600080fd5b506101fb600480360360208110156101e557600080fd5b8101908080359060200190929190505050610869565b005b34801561020957600080fd5b506102406004803603604081101561022057600080fd5b810190808035906020019092919080359060200190929190505050610953565b005b34801561024e57600080fd5b5061027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610a33565b005b34801561028957600080fd5b5061030b600480360360408110156102a057600080fd5b8101908080359060200190929190803590602001906401000000008111156102c757600080fd5b8201836020820111156102d957600080fd5b803590602001918460018302840111640100000000831117156102fb57600080fd5b9091929391929390505050610b11565b005b34801561031957600080fd5b506103466004803603602081101561033057600080fd5b8101908080359060200190929190505050610bfd565b604051808215151515815260200191505060405180910390f35b34801561036c57600080fd5b506103996004803603602081101561038357600080fd5b8101908080359060200190929190505050610c27565b005b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b8101908080359060200190929190505050610d05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b5061049e6004803603602081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dba565b005b3480156104ac57600080fd5b506104e5600480360360408110156104c357600080fd5b8101908080359060200190929190803515159060200190929190505050610ec1565b005b3480156104f357600080fd5b506105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b34801561054257600080fd5b5061056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b34801561059157600080fd5b506105de600480360360408110156105a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fee565b005b3480156105ec57600080fd5b506106236004803603604081101561060357600080fd5b810190808035906020019092919080359060200190929190505050611108565b005b34801561063157600080fd5b5061065e6004803603602081101561064857600080fd5b81019080803590602001909291905050506111e8565b6040518082815260200191505060405180910390f35b34801561068057600080fd5b506106b76004803603604081101561069757600080fd5b810190808035906020019092919080359060200190929190505050611205565b005b3480156106c557600080fd5b506106f2600480360360208110156106dc57600080fd5b81019080803590602001909291905050506112e5565b005b34801561070057600080fd5b5061072d6004803603602081101561071757600080fd5b81019080803590602001909291905050506113c3565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561092d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6005600082815260200190815260200160002060006101000a81549060ff021916905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060066000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600460008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8181600260008681526020019081526020016000209190610bf79291906114a9565b50505050565b60006005600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600660008281526020019081526020016000206000905550565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dae5780601f10610d8357610100808354040283529160200191610dae565b820191906000526020600020905b815481529060010190602001808311610d9157829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060016000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060046000848152602001908152602001600020819055505050565b600060066000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b8060016000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b600160008281526020019081526020016000206000905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611487576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f742063757272656e74206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060006114a69190611529565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114ea57803560ff1916838001178555611518565b82800160010185558215611518579182015b828111156115175782358255916020019190600101906114fc565b5b5090506115259190611571565b5090565b50805460018160011615610100020316600290046000825580601f1061154f575061156e565b601f01602090049060005260206000209081019061156d9190611571565b5b50565b61159391905b8082111561158f576000816000905550600101611577565b5090565b9056fea165627a7a72305820f3e3f67d963c5bde003b227bf328feeb36047df3bdbcb8a86628163c0d0a59fd0029
==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setLastInterestPrice(address,address,uint256)
PC address: 3009
Estimated Gas Usage: 8853 - 114431
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:560

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setLastInterestPrice(address,address,uint256), txdata: 0x03ae3548000000000000000000000000020100000000400001000000010001000800002000000000000000000000000040408000010801204004400208402004080880000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0201000000004000010000000100010008000020', '0x4040800001080120400440020840200408088000', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setLastInterestPrice(address,address,uint256)
PC address: 3168
Estimated Gas Usage: 8853 - 114431
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:562

eternalStorage().setUint(
			getLastInterestPriceKey(_property, _user),
			_value
		)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000010000000000022000000000000000011008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0100000000000220000000000000000110080000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [CREATOR], function: setLastInterestPrice(address,address,uint256), txdata: 0x03ae3548000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: deleteBytes(bytes32)
PC address: 3574
Estimated Gas Usage: 8943 - 114802
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:445

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setValue(address,address,uint256), txdata: 0x1840e810000000000000000000000000000000208000400104020002002004000008000800000000000000000000000002010000001000022008000200400204081004800000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000002080004001040200020020040000080008', '0x0201000000100002200800020040020408100480', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: deleteBytes(bytes32)
PC address: 3738
Estimated Gas Usage: 8943 - 114802
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:448

eternalStorage().setUint(key, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [ATTACKER], function: setValue(address,address,uint256), txdata: 0x1840e810000000000000000000000000010000000000100000000018000000000000000000000000000000000000000000008000000000000000040000000000000000080000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0100000000001000000000180000000000000000', '0x0000800000000000000004000000000000000008', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setAllValue(uint256)
PC address: 4147
Estimated Gas Usage: 8793 - 114462
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:425

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setAllValue(uint256), txdata: 0x1e4d6e070000000000000000000000000240020400020001001000000008000804400402, decoded_data: (12845404820065354806736295808980375507084248066,), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setAllValue(uint256)
PC address: 4309
Estimated Gas Usage: 8793 - 114462
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:428

eternalStorage().setUint(key, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000010200040004010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0102000400040100000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [SOMEGUY], function: setAllValue(uint256), txdata: 0x1e4d6e070000000000000000000000000102000400040100000000000000000000000064, decoded_data: (5753593622371157924113812130026252928183959652,), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setPropertyValue(address,uint256)
PC address: 6121
Estimated Gas Usage: 9039 - 114803
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:473

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setPropertyValue(address,uint256), txdata: 0x8891cab300000000000000000000000001010000004010800000800000040008000420040000000000000000000000000000100002800000808000000240020000200004, decoded_data: ('0x0101000000401080000080000004000800042004', 1393799897978193177459426856531290040041476), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setPropertyValue(address,uint256)
PC address: 6284
Estimated Gas Usage: 9039 - 114803
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:476

eternalStorage().setUint(key, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000014402000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0144020000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [ATTACKER], function: setPropertyValue(address,uint256), txdata: 0x8891cab300000000000000000000000001440204000401000000000000000000000000000000000000000000000000000000000500000040000000000000000000000008, decoded_data: ('0x0144020400040100000000000000000000000000', 1701411839675294718229790643145653878792), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setWithdrawalStatus(address,address,uint256)
PC address: 7591
Estimated Gas Usage: 9215 - 114793
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:502

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setWithdrawalStatus(address,address,uint256), txdata: 0xb84c4191040404040404040404040404048004044004100110021004080104801020004004040404040404040404040401004020020001408008101004001020080000040404040404040404040404040404040404040404040404040404040404040404, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setWithdrawalStatus(address,address,uint256)
PC address: 7755
Estimated Gas Usage: 9215 - 114793
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:505

eternalStorage().setUint(key, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [SOMEGUY], function: setWithdrawalStatus(address,address,uint256), txdata: 0xb84c4191000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setInterestPrice(address,uint256)
PC address: 8162
Estimated Gas Usage: 9202 - 114966
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:533

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setInterestPrice(address,uint256), txdata: 0xc277446900000000000000000000000000010100000000080400080401000000020808200000000000000000000000002000204000400800040420002000200402004000, decoded_data: ('0x0001010000000008040008040100000002080820', 182690514037916633302880942752480846309469732864), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setInterestPrice(address,uint256)
PC address: 8320
Estimated Gas Usage: 9202 - 114966
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:535

eternalStorage().setUint(getInterestPriceKey(_property), _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [SOMEGUY], function: setInterestPrice(address,uint256), txdata: 0xc277446900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000, decoded_data: ('0x0000000000000000000000000000000000000000', 16384), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setPendingInterestWithdrawal(address,address,uint256)
PC address: 9288
Estimated Gas Usage: 9343 - 114921
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:594

addressValidator().validateAddress(msg.sender, config().lockup())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [ATTACKER], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000011002108000080104200101040080000220010000000000000000000000000000008004004004100010102002020108008010000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0110021080000801042001010400800002200100', '0x0000800400400410001010200202010800801000', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LockupStorage
Function name: setPendingInterestWithdrawal(address,address,uint256)
PC address: 9447
Estimated Gas Usage: 9343 - 114921
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x5376872a5882e828680979683388dc143c251ff2.sol:596

eternalStorage().setUint(
			getPendingInterestWithdrawalKey(_property, _user),
			_value
		)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: createStorage(), txdata: 0xfb971d01, value: 0x0
Caller: [SOMEGUY], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0100000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [SOMEGUY], function: setPendingInterestWithdrawal(address,address,uint256), txdata: 0xf8b3928c000000000000000000000000010000000108000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0100000001080000000000000000000000000000', '0x0002200000000000000000000000000000000008', 0), value: 0x0


time_used: 36130.14694905281 seconds
#@contract_info_time
0x5376872a5882e828680979683388dc143c251ff2.sol:0.5.0:LockupStorage:36130.14694905281:36100:60:36000
