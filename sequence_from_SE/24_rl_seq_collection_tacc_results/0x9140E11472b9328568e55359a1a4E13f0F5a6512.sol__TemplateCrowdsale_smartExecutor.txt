++++ 0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol  :  0.4.23  :  TemplateCrowdsale ++++
787987056448093437496642666060423398081561086677 is added into actors.
51421440056055728346017419001665401074216449311 is added into actors.
655251735853922694967911662580490717076041977877 is added into actors.
Starting preprocessing.
number of genesis states: 2
total instructions: 3792
['constructor']:writes at the last depth:['6', '9', '2', '1', '0', '4', '5', '7', '8']
['constructor']:writes at the last depth:['6', '9', '2', '1', '0', '4', '5', '7', '8']
preprocessing: Achieved 99.97% coverage.
dynamic svars:[]
static svars:['4', '5', '6', '3', '9', '7', '2', '0', '8', '1']
Ending preprocessing.
preprocessing time(s): 49.617812156677246
contract coverage: 91.98%
fallback is not reachable
Function Reads: State variables read in conditions
	CONTINUE_MINTING():[]
	hasClosed():['5']
	initialized():[]
	TOKEN_NAME():[]
	setTimes(uint256,uint256):['6', '4', '5']
	TOKEN_SYMBOL():[]
	rate():[]
	endTime():[]
	cap():[]
	setStartTime(uint256):['6', '4', '5']
	goal():[]
	weiRaised():[]
	hasStarted():[]
	closingTime():[]
	finalize():['6', '5']
	capReached():[]
	wallet():[]
	TOKEN_DECIMAL_MULTIPLIER():[]
	TOKEN_DECIMALS():[]
	renounceOwnership():['6']
	TARGET_USER():[]
	startTime():[]
	goalReached():[]
	isFinalized():[]
	owner():[]
	PAUSED():[]
	claimRefund():['6']
	openingTime():[]
	setEndTime(uint256):['6', '5', '4']
	TOKEN_DECIMALS_UINT8():[]
	START_TIME():[]
	init():['6', '9']
	buyTokens(address):['4', '5', '3', '7', '2']
	hasEnded():['5']
	transferOwnership(address):['6']
	vault():[]
	token():[]
	close():[]
	enableRefunds():[]
	state():[]
	deposited(address):[]
	deposit(address):[]
	refund(address):[]
Function Writes: State variables written
	setTimes(uint256,uint256):['4', '5']
	renounceOwnership():['6']
	setStartTime(uint256):['4']
	fallback:['3']
	init():['9', '6']
	setEndTime(uint256):['5']
	transferOwnership(address):['6']
	finalize():['6']
	buyTokens(address):['3']
============================
iteration:3
targets:['claimRefund()', 'finalize()', 'buyTokens(address)', 'fallback']
['renounceOwnership()']:writes at the last depth:['6']
['renounceOwnership()']:writes at the last depth:['6']
['setStartTime(uint256)']:writes at the last depth:['4']
['setStartTime(uint256)']:writes at the last depth:['4']
['setTimes(uint256,uint256)']:writes at the last depth:['5']
['setTimes(uint256,uint256)']:writes at the last depth:['5']
['setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['setEndTime(uint256)']:writes at the last depth:['5']
['setEndTime(uint256)']:writes at the last depth:['5']
['transferOwnership(address)']:writes at the last depth:['6']
['transferOwnership(address)']:writes at the last depth:['6']
['init()']:writes at the last depth:['9', '6']
['init()']:writes at the last depth:['9', '6']
['finalize()']:writes at the last depth:['6']
['finalize()']:writes at the last depth:['6']
['fallback']:writes at the last depth:['3']
['fallback']:writes at the last depth:['3']
['fallback']:writes at the last depth:['3']
['fallback']:writes at the last depth:['3']
['buyTokens(address)']:writes at the last depth:['3']
['buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.51%
============================
iteration:4
['buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.51%
============================
iteration:5
['buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.51%
============================
iteration:6
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'buyTokens(address)', 'finalize()']:writes at the last depth:['6']
contract coverage: 93.51%
============================
iteration:7
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
contract coverage: 93.93%
============================
iteration:8
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'init()']:writes at the last depth:['9', '6']
contract coverage: 93.93%
============================
iteration:9
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'finalize()', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:10
['buyTokens(address)', 'buyTokens(address)', 'init()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'init()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'init()', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:11
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'transferOwnership(address)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:12
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setEndTime(uint256)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:13
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
contract coverage: 93.93%
============================
iteration:14
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'fallback']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:15
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'setTimes(uint256,uint256)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:16
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'setStartTime(uint256)', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:17
['buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'buyTokens(address)', 'renounceOwnership()', 'buyTokens(address)']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:18
['buyTokens(address)', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
['buyTokens(address)', 'fallback', 'fallback']:writes at the last depth:['3']
contract coverage: 93.93%
============================
iteration:19
['buyTokens(address)', 'fallback', 'fallback', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'fallback', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'fallback', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'fallback', 'init()']:writes at the last depth:['9', '6']
contract coverage: 93.93%
============================
iteration:20
['buyTokens(address)', 'fallback', 'fallback', 'renounceOwnership()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'fallback', 'setStartTime(uint256)']:writes at the last depth:['4']
['buyTokens(address)', 'fallback', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'fallback', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'fallback', 'fallback', 'setTimes(uint256,uint256)']:writes at the last depth:['5', '4']
['buyTokens(address)', 'fallback', 'fallback', 'setEndTime(uint256)']:writes at the last depth:['5']
['buyTokens(address)', 'fallback', 'fallback', 'transferOwnership(address)']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'fallback', 'init()']:writes at the last depth:['9', '6']
['buyTokens(address)', 'fallback', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'fallback', 'finalize()']:writes at the last depth:['6']
['buyTokens(address)', 'fallback', 'fallback', 'finalize()']:writes at the last depth:['6']
contract coverage: 93.93%
============================
iteration:21
contract coverage: 93.93%
============================
iteration:22
contract coverage: 93.93%
============================
iteration:23
contract coverage: 93.93%
============================
iteration:24
contract coverage: 93.93%
============================
iteration:25
contract coverage: 93.93%
============================
iteration:26
contract coverage: 93.93%
============================
iteration:27
contract coverage: 93.93%
============================
iteration:28
contract coverage: 93.93%
============================
iteration:29
contract coverage: 93.93%
============================
iteration:30
contract coverage: 93.93%
============================
iteration:31
contract coverage: 93.93%
============================
iteration:32
contract coverage: 93.93%
============================
iteration:33
contract coverage: 93.93%
============================
iteration:34
contract coverage: 93.93%
============================
iteration:35
contract coverage: 93.93%
============================
iteration:36
contract coverage: 93.93%
============================
iteration:37
contract coverage: 93.93%
============================
iteration:38
contract coverage: 93.93%
============================
iteration:39
contract coverage: 93.93%
============================
iteration:40
contract coverage: 93.93%
============================
iteration:41
contract coverage: 93.93%
============================
iteration:42
contract coverage: 93.93%
============================
iteration:43
contract coverage: 93.93%
============================
iteration:44
contract coverage: 93.93%
============================
iteration:45
contract coverage: 93.93%
============================
iteration:46
contract coverage: 93.93%
============================
iteration:47
contract coverage: 93.93%
============================
iteration:48
contract coverage: 93.93%
============================
iteration:49
contract coverage: 93.93%
============================
iteration:50
contract coverage: 93.93%
============================
iteration:51
contract coverage: 93.93%
============================
iteration:52
contract coverage: 93.93%
============================
iteration:53
contract coverage: 93.93%
============================
iteration:54
contract coverage: 93.93%
============================
iteration:55
contract coverage: 93.93%
============================
iteration:56
contract coverage: 93.93%
============================
iteration:57
contract coverage: 93.93%
============================
iteration:58
contract coverage: 93.93%
============================
iteration:59
contract coverage: 93.93%
============================
iteration:60
contract coverage: 93.93%
============================
iteration:61
contract coverage: 93.93%
============================
iteration:62
contract coverage: 93.93%
============================
iteration:63
contract coverage: 93.93%
============================
iteration:64
contract coverage: 93.93%
============================
iteration:65
contract coverage: 93.93%
============================
iteration:66
contract coverage: 93.93%
#@statespace
9337 nodes, 9336 edges, 92888 total states
#@coverage
Achieved 6.64% coverage for code: 60806040526000600660146101000a81548160ff0219169083151502179055506000600960146101000a81548160ff0219169083151502179055503480156200004757600080fd5b5060405160208062002c1083398101806040528101908080519060200190929190505050680821ab0d44149800006a14adf4b7320334b900000042635f2c6140116200009457426200009a565b635f2c61405b6361cf61406012600a0a61019002738a068fc97085d3c9d65736d310ace6a0c3b7cad586600083111515620000ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200010b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200014857600080fd5b8260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050428210151515620001e357600080fd5b818110151515620001f357600080fd5b8160048190555080600581905550505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000811115156200025457600080fd5b80600781905550506000811115156200026c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620002996200033c565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015620002ec573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060088190555050506200034d565b604051610beb806200202583390190565b611cc8806200035d6000396000f3006080604052600436106101cc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623fd35a146101d75780631515bc2b14610206578063158ef93e14610235578063188214001461026457806322434836146102f45780632a9053181461032b5780632c4e722e146103bb5780633197cbb6146103e6578063355274ea146104115780633e0a322d1461043c57806340193883146104695780634042b66f1461049457806344691f7e146104bf5780634b6753bc146104ee5780634bb278f3146105195780634f93594514610530578063521eb2731461055f57806356780085146105b65780635b7f415c146105e1578063715018a61461060c578063726a431a1461062357806378e979251461067a5780637d3d6522146106a55780638d4e4083146106d45780638da5cb5b14610703578063a9aad58c1461075a578063b5545a3c14610789578063b7a8807c146107a0578063ccb98ffc146107cb578063cf3b1967146107f8578063ddaa26ad14610829578063e1c7392a14610854578063ec8ac4d81461086b578063ecb70fb7146108a1578063f2fde38b146108d0578063fbfa77cf14610913578063fc0c546a1461096a575b6101d5336109c1565b005b3480156101e357600080fd5b506101ec610a8f565b604051808215151515815260200191505060405180910390f35b34801561021257600080fd5b5061021b610a94565b604051808215151515815260200191505060405180910390f35b34801561024157600080fd5b5061024a610ab2565b604051808215151515815260200191505060405180910390f35b34801561027057600080fd5b50610279610ac5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b957808201518184015260208101905061029e565b50505050905090810190601f1680156102e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030057600080fd5b506103296004803603810190808035906020019092919080359060200190929190505050610afe565b005b34801561033757600080fd5b50610340610c4e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610380578082015181840152602081019050610365565b50505050905090810190601f1680156103ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103c757600080fd5b506103d0610c87565b6040518082815260200191505060405180910390f35b3480156103f257600080fd5b506103fb610c8d565b6040518082815260200191505060405180910390f35b34801561041d57600080fd5b50610426610c97565b6040518082815260200191505060405180910390f35b34801561044857600080fd5b5061046760048036038101908080359060200190929190505050610c9d565b005b34801561047557600080fd5b5061047e610d88565b6040518082815260200191505060405180910390f35b3480156104a057600080fd5b506104a9610d8e565b6040518082815260200191505060405180910390f35b3480156104cb57600080fd5b506104d4610d94565b604051808215151515815260200191505060405180910390f35b3480156104fa57600080fd5b50610503610da1565b6040518082815260200191505060405180910390f35b34801561052557600080fd5b5061052e610da7565b005b34801561053c57600080fd5b50610545610e83565b604051808215151515815260200191505060405180910390f35b34801561056b57600080fd5b50610574610e92565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c257600080fd5b506105cb610eb8565b6040518082815260200191505060405180910390f35b3480156105ed57600080fd5b506105f6610ec0565b6040518082815260200191505060405180910390f35b34801561061857600080fd5b50610621610ec5565b005b34801561062f57600080fd5b50610638610fca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561068657600080fd5b5061068f610fe2565b6040518082815260200191505060405180910390f35b3480156106b157600080fd5b506106ba610fec565b604051808215151515815260200191505060405180910390f35b3480156106e057600080fd5b506106e9610ffb565b604051808215151515815260200191505060405180910390f35b34801561070f57600080fd5b5061071861100e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076657600080fd5b5061076f611034565b604051808215151515815260200191505060405180910390f35b34801561079557600080fd5b5061079e611039565b005b3480156107ac57600080fd5b506107b561113f565b6040518082815260200191505060405180910390f35b3480156107d757600080fd5b506107f660048036038101908080359060200190929190505050611145565b005b34801561080457600080fd5b5061080d61122e565b604051808260ff1660ff16815260200191505060405180910390f35b34801561083557600080fd5b5061083e611233565b6040518082815260200191505060405180910390f35b34801561086057600080fd5b5061086961123b565b005b61089f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c1565b005b3480156108ad57600080fd5b506108b66113be565b604051808215151515815260200191505060405180910390f35b3480156108dc57600080fd5b50610911600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113cd565b005b34801561091f57600080fd5b50610928611435565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097657600080fd5b5061097f61145b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506109d18383611480565b6109da826114b3565b90506109f1826003546114eb90919063ffffffff16565b600381905550610a018382611507565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a3610a788383611515565b610a80611519565b610a8a83836115f1565b505050565b600181565b6000610a9e6115f5565b80610aad5750610aac610e83565b5b905090565b600960149054906101000a900460ff1681565b6040805190810160405280600681526020017f456175726963000000000000000000000000000000000000000000000000000081525081565b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5f57600080fd5b8484111515610b6d57600080fd5b60045492506005549150600090508285141515610bba574285111515610b9257600080fd5b8242101515610ba057600080fd5b8285111515610bae57600080fd5b84600481905550600190505b8184141515610beb578142101515610bd157600080fd5b8342101515610bdf57600080fd5b83600581905550600190505b8015610c47577ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7600454856004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a15b5050505050565b6040805190810160405280600681526020017f456175726963000000000000000000000000000000000000000000000000000081525081565b60025481565b6000600554905090565b60075481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cf957600080fd5b60045442101515610d0957600080fd5b60045481111515610d1957600080fd5b60055481101515610d2957600080fd5b7ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7816005546004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a18060048190555050565b60085481565b60035481565b6000600454421015905090565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0357600080fd5b600660149054906101000a900460ff16151515610e1f57600080fd5b610e27610a94565b1515610e3257600080fd5b610e3a611601565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600660146101000a81548160ff021916908315150217905550565b60006007546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6012600a0a81565b601281565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f2157600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b738b1560d09700e2dc950b1320ac472db2817524ca81565b6000600454905090565b60006008546003541015905090565b600660149054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181565b600660149054906101000a900460ff16151561105457600080fd5b61105c610fec565b15151561106857600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561112557600080fd5b505af1158015611139573d6000803e3d6000fd5b50505050565b60045481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111a157600080fd5b600554421015156111b157600080fd5b80421015156111bf57600080fd5b600454811115156111cf57600080fd5b7ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7600454826004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a18060058190555050565b601281565b635f2c614081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561129757600080fd5b600960149054906101000a900460ff161515156112b357600080fd5b6001600960146101000a81548160ff021916908315150217905550600115611373576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561135a57600080fd5b505af115801561136e573d6000803e3d6000fd5b505050505b611390738b1560d09700e2dc950b1320ac472db2817524ca6113cd565b7f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c860405160405180910390a1565b60006113c8610a94565b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561142957600080fd5b6114328161175a565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61148a8282611856565b6007546114a2826003546114eb90919063ffffffff16565b111515156114af57600080fd5b5050565b60006114e4670de0b6b3a76400006114d66002548561188390919063ffffffff16565b6118bb90919063ffffffff16565b9050919050565b600081830190508281101515156114fe57fe5b80905092915050565b61151182826118d1565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156115d657600080fd5b505af11580156115ea573d6000803e3d6000fd5b5050505050565b5050565b60006005544211905090565b611609610fec565b156116b157600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561169457600080fd5b505af11580156116a8573d6000803e3d6000fd5b50505050611750565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561173757600080fd5b505af115801561174b573d6000803e3d6000fd5b505050505b6117586119df565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561179657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600454421015801561186a57506005544211155b151561187557600080fd5b61187f8282611c4a565b5050565b60008083141561189657600090506118b5565b81830290508183828115156118a757fe5b041415156118b157fe5b8090505b92915050565b600081838115156118c857fe5b04905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561199557600080fd5b505af11580156119a9573d6000803e3d6000fd5b505050506040513d60208110156119bf57600080fd5b810190808051906020019092919050505015156119db57600080fd5b5050565b6119e7611c9a565b600115611a8c576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015611a7357600080fd5b505af1158015611a87573d6000803e3d6000fd5b505050505b60011515611b60576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d64bcb46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b1957600080fd5b505af1158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b81019080805190602001909291905050501515611b5f57600080fd5b5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b738b1560d09700e2dc950b1320ac472db2817524ca6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611c3057600080fd5b505af1158015611c44573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c8657600080fd5b60008114151515611c9657600080fd5b5050565b5600a165627a7a72305820b2237291b49d1840a60ee6a775162080170b506d67c9795d893aba2754a788100029608060405234801561001057600080fd5b50604051602080610beb83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100af57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff0219169083600281111561010f57fe5b021790555050610ac7806101246000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806343d726d6146100a9578063521eb273146100c0578063715018a6146101175780638c52dc411461012e5780638da5cb5b14610145578063c19d93fb1461019c578063cb13cddb146101d5578063f2fde38b1461022c578063f340fa011461026f578063fa89401a146102a5575b600080fd5b3480156100b557600080fd5b506100be6102e8565b005b3480156100cc57600080fd5b506100d5610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012357600080fd5b5061012c61046e565b005b34801561013a57600080fd5b50610143610570565b005b34801561015157600080fd5b5061015a610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101b1610676565b604051808260028111156101c157fe5b60ff16815260200191505060405180910390f35b3480156101e157600080fd5b50610216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610689565b6040518082815260200191505060405180910390f35b34801561023857600080fd5b5061026d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a1565b005b6102a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610708565b005b3480156102b157600080fd5b506102e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061082f565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034357600080fd5b6000600281111561035057fe5b600260149054906101000a900460ff16600281111561036b57fe5b14151561037757600080fd5b60028060146101000a81548160ff0219169083600281111561039557fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610445573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105cb57600080fd5b600060028111156105d857fe5b600260149054906101000a900460ff1660028111156105f357fe5b1415156105ff57600080fd5b6001600260146101000a81548160ff0219169083600281111561061e57fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fc57600080fd5b61070581610985565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076357600080fd5b6000600281111561077057fe5b600260149054906101000a900460ff16600281111561078b57fe5b14151561079757600080fd5b6107e934600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7f90919063ffffffff16565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001600281111561083e57fe5b600260149054906101000a900460ff16600281111561085957fe5b14151561086557600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610932573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040518082815260200191505060405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109c157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183019050828110151515610a9257fe5b809050929150505600a165627a7a72305820bc6f6ca03272c3a6cfc7048a8f5b6f74276200dd189c90892d96beae352c97e10029
#@coverage
Achieved 8.44% coverage for code: 608060405234801561001057600080fd5b50604051602080610beb83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100af57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff0219169083600281111561010f57fe5b021790555050610ac7806101246000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806343d726d6146100a9578063521eb273146100c0578063715018a6146101175780638c52dc411461012e5780638da5cb5b14610145578063c19d93fb1461019c578063cb13cddb146101d5578063f2fde38b1461022c578063f340fa011461026f578063fa89401a146102a5575b600080fd5b3480156100b557600080fd5b506100be6102e8565b005b3480156100cc57600080fd5b506100d5610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012357600080fd5b5061012c61046e565b005b34801561013a57600080fd5b50610143610570565b005b34801561015157600080fd5b5061015a610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101b1610676565b604051808260028111156101c157fe5b60ff16815260200191505060405180910390f35b3480156101e157600080fd5b50610216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610689565b6040518082815260200191505060405180910390f35b34801561023857600080fd5b5061026d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a1565b005b6102a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610708565b005b3480156102b157600080fd5b506102e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061082f565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034357600080fd5b6000600281111561035057fe5b600260149054906101000a900460ff16600281111561036b57fe5b14151561037757600080fd5b60028060146101000a81548160ff0219169083600281111561039557fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610445573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105cb57600080fd5b600060028111156105d857fe5b600260149054906101000a900460ff1660028111156105f357fe5b1415156105ff57600080fd5b6001600260146101000a81548160ff0219169083600281111561061e57fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fc57600080fd5b61070581610985565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076357600080fd5b6000600281111561077057fe5b600260149054906101000a900460ff16600281111561078b57fe5b14151561079757600080fd5b6107e934600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7f90919063ffffffff16565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001600281111561083e57fe5b600260149054906101000a900460ff16600281111561085957fe5b14151561086557600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610932573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040518082815260200191505060405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109c157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183019050828110151515610a9257fe5b809050929150505600a165627a7a72305820bc6f6ca03272c3a6cfc7048a8f5b6f74276200dd189c90892d96beae352c97e100290000000000000000000000008a068fc97085d3c9d65736d310ace6a0c3b7cad500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
#@coverage
Achieved 93.93% coverage for code: 6080604052600436106101cc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623fd35a146101d75780631515bc2b14610206578063158ef93e14610235578063188214001461026457806322434836146102f45780632a9053181461032b5780632c4e722e146103bb5780633197cbb6146103e6578063355274ea146104115780633e0a322d1461043c57806340193883146104695780634042b66f1461049457806344691f7e146104bf5780634b6753bc146104ee5780634bb278f3146105195780634f93594514610530578063521eb2731461055f57806356780085146105b65780635b7f415c146105e1578063715018a61461060c578063726a431a1461062357806378e979251461067a5780637d3d6522146106a55780638d4e4083146106d45780638da5cb5b14610703578063a9aad58c1461075a578063b5545a3c14610789578063b7a8807c146107a0578063ccb98ffc146107cb578063cf3b1967146107f8578063ddaa26ad14610829578063e1c7392a14610854578063ec8ac4d81461086b578063ecb70fb7146108a1578063f2fde38b146108d0578063fbfa77cf14610913578063fc0c546a1461096a575b6101d5336109c1565b005b3480156101e357600080fd5b506101ec610a8f565b604051808215151515815260200191505060405180910390f35b34801561021257600080fd5b5061021b610a94565b604051808215151515815260200191505060405180910390f35b34801561024157600080fd5b5061024a610ab2565b604051808215151515815260200191505060405180910390f35b34801561027057600080fd5b50610279610ac5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b957808201518184015260208101905061029e565b50505050905090810190601f1680156102e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030057600080fd5b506103296004803603810190808035906020019092919080359060200190929190505050610afe565b005b34801561033757600080fd5b50610340610c4e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610380578082015181840152602081019050610365565b50505050905090810190601f1680156103ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103c757600080fd5b506103d0610c87565b6040518082815260200191505060405180910390f35b3480156103f257600080fd5b506103fb610c8d565b6040518082815260200191505060405180910390f35b34801561041d57600080fd5b50610426610c97565b6040518082815260200191505060405180910390f35b34801561044857600080fd5b5061046760048036038101908080359060200190929190505050610c9d565b005b34801561047557600080fd5b5061047e610d88565b6040518082815260200191505060405180910390f35b3480156104a057600080fd5b506104a9610d8e565b6040518082815260200191505060405180910390f35b3480156104cb57600080fd5b506104d4610d94565b604051808215151515815260200191505060405180910390f35b3480156104fa57600080fd5b50610503610da1565b6040518082815260200191505060405180910390f35b34801561052557600080fd5b5061052e610da7565b005b34801561053c57600080fd5b50610545610e83565b604051808215151515815260200191505060405180910390f35b34801561056b57600080fd5b50610574610e92565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c257600080fd5b506105cb610eb8565b6040518082815260200191505060405180910390f35b3480156105ed57600080fd5b506105f6610ec0565b6040518082815260200191505060405180910390f35b34801561061857600080fd5b50610621610ec5565b005b34801561062f57600080fd5b50610638610fca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561068657600080fd5b5061068f610fe2565b6040518082815260200191505060405180910390f35b3480156106b157600080fd5b506106ba610fec565b604051808215151515815260200191505060405180910390f35b3480156106e057600080fd5b506106e9610ffb565b604051808215151515815260200191505060405180910390f35b34801561070f57600080fd5b5061071861100e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076657600080fd5b5061076f611034565b604051808215151515815260200191505060405180910390f35b34801561079557600080fd5b5061079e611039565b005b3480156107ac57600080fd5b506107b561113f565b6040518082815260200191505060405180910390f35b3480156107d757600080fd5b506107f660048036038101908080359060200190929190505050611145565b005b34801561080457600080fd5b5061080d61122e565b604051808260ff1660ff16815260200191505060405180910390f35b34801561083557600080fd5b5061083e611233565b6040518082815260200191505060405180910390f35b34801561086057600080fd5b5061086961123b565b005b61089f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c1565b005b3480156108ad57600080fd5b506108b66113be565b604051808215151515815260200191505060405180910390f35b3480156108dc57600080fd5b50610911600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113cd565b005b34801561091f57600080fd5b50610928611435565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097657600080fd5b5061097f61145b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506109d18383611480565b6109da826114b3565b90506109f1826003546114eb90919063ffffffff16565b600381905550610a018382611507565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a3610a788383611515565b610a80611519565b610a8a83836115f1565b505050565b600181565b6000610a9e6115f5565b80610aad5750610aac610e83565b5b905090565b600960149054906101000a900460ff1681565b6040805190810160405280600681526020017f456175726963000000000000000000000000000000000000000000000000000081525081565b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5f57600080fd5b8484111515610b6d57600080fd5b60045492506005549150600090508285141515610bba574285111515610b9257600080fd5b8242101515610ba057600080fd5b8285111515610bae57600080fd5b84600481905550600190505b8184141515610beb578142101515610bd157600080fd5b8342101515610bdf57600080fd5b83600581905550600190505b8015610c47577ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7600454856004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a15b5050505050565b6040805190810160405280600681526020017f456175726963000000000000000000000000000000000000000000000000000081525081565b60025481565b6000600554905090565b60075481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cf957600080fd5b60045442101515610d0957600080fd5b60045481111515610d1957600080fd5b60055481101515610d2957600080fd5b7ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7816005546004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a18060048190555050565b60085481565b60035481565b6000600454421015905090565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0357600080fd5b600660149054906101000a900460ff16151515610e1f57600080fd5b610e27610a94565b1515610e3257600080fd5b610e3a611601565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600660146101000a81548160ff021916908315150217905550565b60006007546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6012600a0a81565b601281565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f2157600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b738b1560d09700e2dc950b1320ac472db2817524ca81565b6000600454905090565b60006008546003541015905090565b600660149054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181565b600660149054906101000a900460ff16151561105457600080fd5b61105c610fec565b15151561106857600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561112557600080fd5b505af1158015611139573d6000803e3d6000fd5b50505050565b60045481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111a157600080fd5b600554421015156111b157600080fd5b80421015156111bf57600080fd5b600454811115156111cf57600080fd5b7ff6b7151023ee87a6a0cc1f6cea30e02351728911b7b848aa8abde4d1f09172b7600454826004546005546040518085815260200184815260200183815260200182815260200194505050505060405180910390a18060058190555050565b601281565b635f2c614081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561129757600080fd5b600960149054906101000a900460ff161515156112b357600080fd5b6001600960146101000a81548160ff021916908315150217905550600115611373576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561135a57600080fd5b505af115801561136e573d6000803e3d6000fd5b505050505b611390738b1560d09700e2dc950b1320ac472db2817524ca6113cd565b7f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c860405160405180910390a1565b60006113c8610a94565b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561142957600080fd5b6114328161175a565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61148a8282611856565b6007546114a2826003546114eb90919063ffffffff16565b111515156114af57600080fd5b5050565b60006114e4670de0b6b3a76400006114d66002548561188390919063ffffffff16565b6118bb90919063ffffffff16565b9050919050565b600081830190508281101515156114fe57fe5b80905092915050565b61151182826118d1565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156115d657600080fd5b505af11580156115ea573d6000803e3d6000fd5b5050505050565b5050565b60006005544211905090565b611609610fec565b156116b157600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561169457600080fd5b505af11580156116a8573d6000803e3d6000fd5b50505050611750565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561173757600080fd5b505af115801561174b573d6000803e3d6000fd5b505050505b6117586119df565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561179657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600454421015801561186a57506005544211155b151561187557600080fd5b61187f8282611c4a565b5050565b60008083141561189657600090506118b5565b81830290508183828115156118a757fe5b041415156118b157fe5b8090505b92915050565b600081838115156118c857fe5b04905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561199557600080fd5b505af11580156119a9573d6000803e3d6000fd5b505050506040513d60208110156119bf57600080fd5b810190808051906020019092919050505015156119db57600080fd5b5050565b6119e7611c9a565b600115611a8c576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015611a7357600080fd5b505af1158015611a87573d6000803e3d6000fd5b505050505b60011515611b60576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637d64bcb46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b1957600080fd5b505af1158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b81019080805190602001909291905050501515611b5f57600080fd5b5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b738b1560d09700e2dc950b1320ac472db2817524ca6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611c3057600080fd5b505af1158015611c44573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c8657600080fd5b60008114151515611c9657600080fd5b5050565b5600a165627a7a72305820b2237291b49d1840a60ee6a775162080170b506d67c9795d893aba2754a788100029
==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: constructor
PC address: 141
Estimated Gas Usage: 11879 - 55219
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:960

START_TIME > now ? START_TIME : now

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: constructor
PC address: 478
Estimated Gas Usage: 28818 - 133148
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:274

require(_openingTime >= block.timestamp)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: constructor
PC address: 494
Estimated Gas Usage: 28859 - 133189
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:275

require(_closingTime >= _openingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: hasClosed()
PC address: 2723
Estimated Gas Usage: 998 - 1093
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:915

super.hasClosed() || capReached()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: hasClosed(), txdata: 0x1515bc2b, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setTimes(uint256,uint256)
PC address: 2957
Estimated Gas Usage: 2878 - 3303
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:1016

require(_startTime > now)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 01010101010101010101010101, decoded_data: , value: 0x0
Caller: [CREATOR], function: setTimes(uint256,uint256), txdata: 0x22434836000000000000000000000000000001010101010101010101100240010110201105, decoded_data: (87453902739335777025631348950530706645009, 2261564242916331941866620800950935700259179388000792266395655937654553313280), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setTimes(uint256,uint256)
PC address: 2971
Estimated Gas Usage: 2906 - 3331
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:1018

require(now < oldStartTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setTimes(uint256,uint256), txdata: 0x22434836000000000000000000000000000000000000000000000002000000008402844118, decoded_data: (36893488149633860673, 10855508365998393320959779844564491361244061062403802878699148500741855903744), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setTimes(uint256,uint256)
PC address: 3020
Estimated Gas Usage: 2907 - 3332
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:1027

require(now < oldEndTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setTimes(uint256,uint256), txdata: 0x22434836000000000000000000000000000000000000000000000000000000005f2c614040, decoded_data: (1596744000, 28948022309329048855892746252171976963317496166410141009864396001978282409984), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setTimes(uint256,uint256)
PC address: 3034
Estimated Gas Usage: 2935 - 3360
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:1029

require(now < _endTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setTimes(uint256,uint256), txdata: 0x22434836000000000000000000000000000000000000000000000000000000005f2c614004, decoded_data: (1596744000, 1809251394333065553493296640760748560207343510400633813116524750123642650624), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setStartTime(uint256)
PC address: 3332
Estimated Gas Usage: 2071 - 2496
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:988

require(now < openingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setStartTime(uint256), txdata: 0x3e0a322d, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 3629
Estimated Gas Usage: 3074 - 3829
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:312

require(hasClosed())

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 3698
Estimated Gas Usage: 18680 - 144135
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:317

isFinalized = true

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 3712
Estimated Gas Usage: 18680 - 144135
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:317

isFinalized = true

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setEndTime(uint256)
PC address: 4524
Estimated Gas Usage: 2489 - 2914
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:1000

require(now < closingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setEndTime(uint256), txdata: 0xccb98ffc, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: setEndTime(uint256)
PC address: 4538
Estimated Gas Usage: 2517 - 2942
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:1002

require(now < _endTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: setEndTime(uint256), txdata: 0xccb98ffc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: init()
PC address: 4957
Estimated Gas Usage: 20820 - 98390
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:973

MainToken(token).pause()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: init(), txdata: 0xe1c7392a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: init()
PC address: 5075
Estimated Gas Usage: 20820 - 98390
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:233

owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: init(), txdata: 0xe1c7392a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: fallback
PC address: 5407
Estimated Gas Usage: 17410 - 107830
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:895

vault

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8e8e8e8e8e8e8e8e8e8e8e8edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x1

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 5593
Estimated Gas Usage: 17410 - 107830
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:895

vault.deposit.value(msg.value)(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: fallback
PC address: 5593
Estimated Gas Usage: 17410 - 107830
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:895

vault.deposit.value(msg.value)(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8e8e8e8e8e8e8e8e8e8e8e8edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: init()
PC address: 6067
Estimated Gas Usage: 20820 - 98390
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:251

owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: init(), txdata: 0xe1c7392a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: init()
PC address: 6173
Estimated Gas Usage: 20820 - 98390
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:252

owner = _newOwner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: init(), txdata: 0xe1c7392a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: init()
PC address: 6226
Estimated Gas Usage: 20820 - 98390
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:252

owner = _newOwner

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: init(), txdata: 0xe1c7392a, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 6242
Estimated Gas Usage: 932 - 1027
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:267

block.timestamp >= openingTime && block.timestamp <= closingTime

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 6256
Estimated Gas Usage: 952 - 1047
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:267

require(block.timestamp >= openingTime && block.timestamp <= closingTime)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: fallback
PC address: 6552
Estimated Gas Usage: 17410 - 107830
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:813

MintableToken(token).mint(_beneficiary, _tokenAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 6643
Estimated Gas Usage: 18680 - 144135
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:926

token

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 6774
Estimated Gas Usage: 18680 - 144135
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:926

MainToken(token).unpause()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 6774
Estimated Gas Usage: 18680 - 144135
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:926

MainToken(token).unpause()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 6774
Estimated Gas Usage: 18680 - 144135
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:926

MainToken(token).unpause()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 7013
Estimated Gas Usage: 18680 - 144135
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:933

token

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 7219
Estimated Gas Usage: 18680 - 144135
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:933

Ownable(token).transferOwnership(TARGET_USER)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TemplateCrowdsale
Function name: finalize()
PC address: 7219
Estimated Gas Usage: 18680 - 144135
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:933

Ownable(token).transferOwnership(TARGET_USER)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: finalize(), txdata: 0x4bb278f3, value: 0x0


time_used: 36042.83436250687 seconds
#@contract_info_time
0x9140E11472b9328568e55359a1a4E13f0F5a6512.sol:0.4.23:TemplateCrowdsale:36042.83436250687:36100:60:36000
