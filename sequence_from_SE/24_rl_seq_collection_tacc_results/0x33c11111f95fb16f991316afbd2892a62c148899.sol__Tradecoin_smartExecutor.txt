++++ 0x33c11111f95fb16f991316afbd2892a62c148899.sol  :  0.4.25  :  Tradecoin ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 2639
['constructor']:writes at the last depth:['2', '6', '4', '3']
preprocessing: Achieved 99.96% coverage.
dynamic svars:['4', '5', '0']
static svars:['3', '6', '2']
Ending preprocessing.
preprocessing time(s): 19.514832735061646
contract coverage: 99.66%
Function Reads: State variables read in conditions
	name():[]
	approve(address,uint256):[]
	totalSupply():[]
	transferFrom(address,address,uint256):[]
	INITIAL_SUPPLY():[]
	decimals():[]
	claimTokens():[]
	decreaseApproval(address,uint256):[]
	balanceOf(address):[]
	owner():[]
	symbol():[]
	changeOwner(address):[]
	transfer(address,uint256):[]
	transfersEnabled():[]
	increaseApproval(address,uint256):[]
	allowance(address,address):[]
	enableTransfers(bool):[]
Function Writes: State variables written
	approve(address,uint256):['5']
	enableTransfers(bool):['3']
	decreaseApproval(address,uint256):['5']
	changeOwner(address):['6']
	increaseApproval(address,uint256):['5']
	transfer(address,uint256):['4']
	transferFrom(address,address,uint256):['4', '5']
	claimTokens():['4', '0']
============================
iteration:3
targets:[]
['approve(address,uint256)']:writes at the last depth:['5']
['enableTransfers(bool)']:writes at the last depth:['3']
['changeOwner(address)']:writes at the last depth:['6']
['decreaseApproval(address,uint256)']:writes at the last depth:['5']
['decreaseApproval(address,uint256)']:writes at the last depth:['5']
['increaseApproval(address,uint256)']:writes at the last depth:['5']
['transfer(address,uint256)']:writes at the last depth:['4']
['claimTokens()']:writes at the last depth:['0', '4']
['transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.66%
============================
iteration:4
['transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.66%
============================
iteration:5
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.66%
============================
iteration:6
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.66%
============================
iteration:7
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'claimTokens()', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.66%
============================
iteration:8
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.70%
============================
iteration:9
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
contract coverage: 99.70%
============================
iteration:10
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
contract coverage: 99.70%
============================
iteration:11
contract coverage: 99.70%
============================
iteration:12
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'changeOwner(address)', 'transfer(address,uint256)']:writes at the last depth:['4']
contract coverage: 99.92%
============================
iteration:13
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'increaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfers(bool)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.92%
============================
iteration:14
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.92%
============================
iteration:15
['transferFrom(address,address,uint256)', 'claimTokens()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'transfer(address,uint256)']:writes at the last depth:['4']
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()']:writes at the last depth:['', '4']
['transferFrom(address,address,uint256)', 'claimTokens()', 'transferFrom(address,address,uint256)']:writes at the last depth:['5', '4']
contract coverage: 99.92%
============================
iteration:16
contract coverage: 99.92%
============================
iteration:17
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()', 'enableTransfers(bool)']:writes at the last depth:['3']
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'claimTokens()', 'transfer(address,uint256)']:writes at the last depth:['4']
contract coverage: 99.92%
============================
iteration:18
contract coverage: 99.92%
============================
iteration:19
contract coverage: 99.92%
============================
iteration:20
['transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)', 'changeOwner(address)']:writes at the last depth:['6']
['transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
contract coverage: 99.92%
============================
iteration:21
['transferFrom(address,address,uint256)', 'claimTokens()', 'enableTransfers(bool)', 'approve(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'enableTransfers(bool)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'enableTransfers(bool)', 'decreaseApproval(address,uint256)']:writes at the last depth:['5']
['transferFrom(address,address,uint256)', 'claimTokens()', 'enableTransfers(bool)', 'transfer(address,uint256)']:writes at the last depth:['4']
contract coverage: 99.92%
============================
iteration:22
contract coverage: 99.92%
============================
iteration:23
contract coverage: 99.92%
============================
iteration:24
contract coverage: 99.92%
============================
iteration:25
contract coverage: 99.92%
============================
iteration:26
contract coverage: 99.92%
============================
iteration:27
contract coverage: 99.92%
============================
iteration:28
contract coverage: 99.92%
============================
iteration:29
contract coverage: 99.92%
============================
iteration:30
contract coverage: 99.92%
============================
iteration:31
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5']
['transfer(address,uint256)', 'enableTransfers(bool)']:writes at the last depth:['3']
contract coverage: 99.92%
============================
iteration:32
contract coverage: 99.92%
============================
iteration:33
['transfer(address,uint256)', 'approve(address,uint256)', 'claimTokens()']:writes at the last depth:['', '4']
contract coverage: 99.92%
============================
iteration:34
contract coverage: 99.92%
============================
iteration:35
contract coverage: 99.92%
============================
iteration:36
contract coverage: 99.92%
============================
iteration:37
contract coverage: 99.92%
============================
iteration:38
contract coverage: 99.92%
============================
iteration:39
contract coverage: 99.92%
============================
iteration:40
contract coverage: 99.92%
#@statespace
2782 nodes, 2781 edges, 45446 total states
#@coverage
Achieved 5.10% coverage for code: 608060405234801561001057600080fd5b5060405160208061192683398101806040528101908080519060200190929190505050601260ff16600a0a6301c9c3800260028190555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601260ff16600a0a6301c9c3800260046000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360006101000a81548160ff02191690831515021790555050611800806101266000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100f6578063095ea7b31461018657806318160ddd146101eb57806323b872dd146102165780632ff2e9dc1461029b578063313ce567146102c657806348c54b9d146102f7578063661884631461030e57806370a08231146103735780638da5cb5b146103ca57806395d89b4114610421578063a6f9dae1146104b1578063a9059cbb1461050c578063bef97c8714610571578063d73dd623146105a0578063dd62ed3e14610605578063f41e60c51461067c575b600080fd5b34801561010257600080fd5b5061010b6106ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014b578082015181840152602081019050610130565b50505050905090810190601f1680156101785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019257600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e4565b604051808215151515815260200191505060405180910390f35b3480156101f757600080fd5b506102006107d6565b6040518082815260200191505060405180910390f35b34801561022257600080fd5b50610281600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107dc565b604051808215151515815260200191505060405180910390f35b3480156102a757600080fd5b506102b0610bcf565b6040518082815260200191505060405180910390f35b3480156102d257600080fd5b506102db610be0565b604051808260ff1660ff16815260200191505060405180910390f35b34801561030357600080fd5b5061030c610be5565b005b34801561031a57600080fd5b50610359600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d85565b604051808215151515815260200191505060405180910390f35b34801561037f57600080fd5b506103b4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611016565b6040518082815260200191505060405180910390f35b3480156103d657600080fd5b506103df61105f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042d57600080fd5b50610436611085565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047657808201518184015260208101905061045b565b50505050905090810190601f1680156104a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104bd57600080fd5b506104f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110be565b604051808215151515815260200191505060405180910390f35b34801561051857600080fd5b50610557600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061121e565b604051808215151515815260200191505060405180910390f35b34801561057d57600080fd5b50610586611476565b604051808215151515815260200191505060405180910390f35b3480156105ac57600080fd5b506105eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611489565b604051808215151515815260200191505060405180910390f35b34801561061157600080fd5b50610666600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611685565b6040518082815260200191505060405180910390f35b34801561068857600080fd5b506106a9600480360381019080803515159060200190929190505050611724565b005b6040805190810160405280600981526020017f5472616465436f696e000000000000000000000000000000000000000000000081525081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60025481565b600060036004602082020160003690501415156107f557fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561083157600080fd5b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115151561087f57600080fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115151561090a57600080fd5b600360009054906101000a900460ff16151561092557600080fd5b61097783600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179d90919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a0c83600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b690919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ade83600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179d90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601260ff16600a0a6301c9c3800281565b601281565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c4357600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610cc2573d6000803e3d6000fd5b50610ccc30611016565b9050610cfa600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261121e565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610e96576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f2a565b610ea9838261179d90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f545243000000000000000000000000000000000000000000000000000000000081525081565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561115857600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60405160405180910390a381600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000600260046020820201600036905014151561123757fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561127357600080fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111515156112c157600080fd5b600360009054906101000a900460ff1615156112dc57600080fd5b61132e83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113c383600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b690919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b600360009054906101000a900460ff1681565b600061151a82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260046020820201600036905014151561169e57fe5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178057600080fd5b80600360006101000a81548160ff02191690831515021790555050565b60008282111515156117ab57fe5b818303905092915050565b60008082840190508381101515156117ca57fe5b80915050929150505600a165627a7a72305820e7f2977ab222952ea42508cd6a8f284856e2f3645778accc37f386979ccd9fa00029
#@coverage
Achieved 99.92% coverage for code: 6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100f6578063095ea7b31461018657806318160ddd146101eb57806323b872dd146102165780632ff2e9dc1461029b578063313ce567146102c657806348c54b9d146102f7578063661884631461030e57806370a08231146103735780638da5cb5b146103ca57806395d89b4114610421578063a6f9dae1146104b1578063a9059cbb1461050c578063bef97c8714610571578063d73dd623146105a0578063dd62ed3e14610605578063f41e60c51461067c575b600080fd5b34801561010257600080fd5b5061010b6106ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014b578082015181840152602081019050610130565b50505050905090810190601f1680156101785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019257600080fd5b506101d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e4565b604051808215151515815260200191505060405180910390f35b3480156101f757600080fd5b506102006107d6565b6040518082815260200191505060405180910390f35b34801561022257600080fd5b50610281600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107dc565b604051808215151515815260200191505060405180910390f35b3480156102a757600080fd5b506102b0610bcf565b6040518082815260200191505060405180910390f35b3480156102d257600080fd5b506102db610be0565b604051808260ff1660ff16815260200191505060405180910390f35b34801561030357600080fd5b5061030c610be5565b005b34801561031a57600080fd5b50610359600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d85565b604051808215151515815260200191505060405180910390f35b34801561037f57600080fd5b506103b4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611016565b6040518082815260200191505060405180910390f35b3480156103d657600080fd5b506103df61105f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042d57600080fd5b50610436611085565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047657808201518184015260208101905061045b565b50505050905090810190601f1680156104a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104bd57600080fd5b506104f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110be565b604051808215151515815260200191505060405180910390f35b34801561051857600080fd5b50610557600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061121e565b604051808215151515815260200191505060405180910390f35b34801561057d57600080fd5b50610586611476565b604051808215151515815260200191505060405180910390f35b3480156105ac57600080fd5b506105eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611489565b604051808215151515815260200191505060405180910390f35b34801561061157600080fd5b50610666600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611685565b6040518082815260200191505060405180910390f35b34801561068857600080fd5b506106a9600480360381019080803515159060200190929190505050611724565b005b6040805190810160405280600981526020017f5472616465436f696e000000000000000000000000000000000000000000000081525081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60025481565b600060036004602082020160003690501415156107f557fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561083157600080fd5b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115151561087f57600080fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054831115151561090a57600080fd5b600360009054906101000a900460ff16151561092557600080fd5b61097783600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179d90919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a0c83600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b690919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ade83600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179d90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601260ff16600a0a6301c9c3800281565b601281565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c4357600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610cc2573d6000803e3d6000fd5b50610ccc30611016565b9050610cfa600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261121e565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610e96576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f2a565b610ea9838261179d90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f545243000000000000000000000000000000000000000000000000000000000081525081565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561115857600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60405160405180910390a381600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000600260046020820201600036905014151561123757fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561127357600080fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111515156112c157600080fd5b600360009054906101000a900460ff1615156112dc57600080fd5b61132e83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461179d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113c383600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b690919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b600360009054906101000a900460ff1681565b600061151a82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117b690919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260046020820201600036905014151561169e57fe5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178057600080fd5b80600360006101000a81548160ff02191690831515021790555050565b60008282111515156117ab57fe5b818303905092915050565b60008082840190508381101515156117ca57fe5b80915050929150505600a165627a7a72305820e7f2977ab222952ea42508cd6a8f284856e2f3645778accc37f386979ccd9fa00029
==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Tradecoin
Function name: transferFrom(address,address,uint256)
PC address: 2036
Estimated Gas Usage: 367 - 462
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x33c11111f95fb16f991316afbd2892a62c148899.sol:113

function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3) returns (bool) {
        require(_to != address(0));
        require(_value <= balances[_from]);
        require(_value <= allowed[_from][msg.sender]);
        require(transfersEnabled);

        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(_value);
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
        Transfer(_from, _to, _value);
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transferFrom(address,address,uint256), txdata: 0x23b872dd, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Tradecoin
Function name: claimTokens()
PC address: 3244
Estimated Gas Usage: 23386 - 101531
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x33c11111f95fb16f991316afbd2892a62c148899.sol:195

owner.transfer(this.balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 232323232323232323232323deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: transferFrom(address,address,uint256), txdata: 0x23b872dd0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0x0000000000000000000000000000000000010000', 0), value: 0x0
Caller: [SOMEGUY], function: transferFrom(address,address,uint256), txdata: 0x23b872ddb8b8b8b8b8b8b8b8b8b8b8b80000000000000000000000000000000000000000b8b8b8b8b8b8b8b8b8b8b8b804000002040000000004004002100008008080800000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: claimTokens(), txdata: 0x48c54b9d40404040404040404040404000000000000000000000000000000000000000024040404040404040404040400000000000000000000000000000000000000000, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Tradecoin
Function name: transfer(address,uint256)
PC address: 4662
Estimated Gas Usage: 532 - 627
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x33c11111f95fb16f991316afbd2892a62c148899.sol:89

function transfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool) {
        require(_to != address(0));
        require(_value <= balances[msg.sender]);
        require(transfersEnabled);

        
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(_value);
        Transfer(msg.sender, _to, _value);
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Tradecoin
Function name: claimTokens()
PC address: 4662
Estimated Gas Usage: 5335 - 40796
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x33c11111f95fb16f991316afbd2892a62c148899.sol:197

transfer(owner, balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 9d9d9d9d9d9d9d9d9d9d9d9daffeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: , value: 0x0
Caller: [CREATOR], function: claimTokens(), txdata: 0x48c54b9d, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Tradecoin
Function name: allowance(address,address)
PC address: 5789
Estimated Gas Usage: 604 - 699
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x33c11111f95fb16f991316afbd2892a62c148899.sol:134

function allowance(address _owner, address _spender) public onlyPayloadSize(2) constant returns (uint256 remaining) {
        return allowed[_owner][_spender];
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: allowance(address,address), txdata: 0xdd62ed3e, value: 0x0


time_used: 23144.700520038605 seconds
#@contract_info_time
0x33c11111f95fb16f991316afbd2892a62c148899.sol:0.4.25:Tradecoin:23144.700520038605:36100:60:36000
