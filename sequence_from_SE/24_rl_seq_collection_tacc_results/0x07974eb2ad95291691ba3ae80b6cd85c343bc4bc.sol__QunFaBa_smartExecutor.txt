++++ 0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol  :  0.4.19  :  QunFaBa ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 5465
['constructor']:writes at the last depth:['0', '5', '6', '7', '8', '9']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 72.94% coverage.
dynamic svars:['2', '3', '1', '4']
static svars:['7', '5', '6', '8', '0', '9']
Ending preprocessing.
preprocessing time(s): 102.50915741920471
contract coverage: 81.28%
issueRefunds(address[]) is not reachable
getRemainingTrialDrops(address) is not reachable
Function Reads: State variables read in conditions
	maxDropsPerTx():[]
	setBonus(uint256):['0', '7']
	banToken(address):['0', '3']
	tokenHasFreeTrial(address):[]
	grantBonusDrops(address,uint256):['0']
	rate():[]
	setRate(uint256):['0', '5']
	getMaxDropsPerTx():[]
	tokenIsBanned(address):[]
	getTotalDropsOf(address):['2']
	issueRefunds(address[]):['0']
	trialDrops(address):[]
	getRate():[]
	getDropsOf(address):['2']
	multiValueAirdrop(address,address[],uint256[]):[]
	ethBalanceOf(address):[]
	bonus():[]
	owner():[]
	bonusDropsOf(address):[]
	singleValueAirdrop(address,address[],uint256):['3', '4']
	getBonusDropsOf(address):[]
	dropUnitPrice():[]
	getRemainingTrialDrops(address):['4']
	getEthBalanceOf(address):[]
	withdrawERC20Tokens(address,address,uint256):['0']
	website():[]
	maxTrialDrops():[]
	withdrawEth(uint256):['2']
	revokeBonusCreditOf(address,uint256):['0', '1']
	getTokenAllowance(address,address):[]
	setMaxDrops(uint256):['0']
	transferOwnership(address):['0']
	unbanToken(address):['0', '3']
	admin():['0']
Function Writes: State variables written
	fallback:['2']
	setBonus(uint256):['7']
	setRate(uint256):['5', '6']
	banToken(address):['3']
	grantBonusDrops(address,uint256):['1']
	setMaxDrops(uint256):['8']
============================
iteration:3
targets:['withdrawEth(uint256)', 'issueRefunds(address[])', 'unbanToken(address)', 'getRemainingTrialDrops(address)']
['setBonus(uint256)']:writes at the last depth:['7']
['fallback']:writes at the last depth:['2']
['fallback']:writes at the last depth:['2']
['banToken(address)']:writes at the last depth:['3']
['setRate(uint256)']:writes at the last depth:['5', '6']
['grantBonusDrops(address,uint256)']:writes at the last depth:['1']
['setMaxDrops(uint256)']:writes at the last depth:['8']
['transferOwnership(address)']:writes at the last depth:['0']
['getTokenAllowance(address,address)']:writes at the last depth:[]
['fallback']:writes at the last depth:['2']
['fallback']:writes at the last depth:['2']
['revokeBonusCreditOf(address,uint256)']:writes at the last depth:['1']
['withdrawERC20Tokens(address,address,uint256)']:writes at the last depth:[]
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
contract coverage: 81.28%
============================
iteration:4
contract coverage: 81.28%
============================
iteration:5
contract coverage: 81.28%
============================
iteration:6
contract coverage: 81.28%
============================
iteration:7
contract coverage: 81.28%
============================
iteration:8
contract coverage: 81.28%
============================
iteration:9
contract coverage: 81.28%
============================
iteration:10
contract coverage: 81.28%
============================
iteration:11
contract coverage: 81.28%
============================
iteration:12
contract coverage: 81.28%
============================
iteration:13
contract coverage: 81.28%
============================
iteration:14
contract coverage: 81.28%
============================
iteration:15
contract coverage: 81.28%
============================
iteration:16
contract coverage: 81.28%
============================
iteration:17
contract coverage: 81.28%
============================
iteration:18
contract coverage: 81.28%
============================
iteration:19
contract coverage: 81.28%
============================
iteration:20
contract coverage: 81.28%
============================
iteration:21
contract coverage: 81.28%
============================
iteration:22
contract coverage: 81.28%
============================
iteration:23
contract coverage: 81.28%
============================
iteration:24
contract coverage: 81.28%
============================
iteration:25
contract coverage: 81.28%
============================
iteration:26
contract coverage: 81.28%
============================
iteration:27
contract coverage: 81.28%
============================
iteration:28
contract coverage: 81.28%
============================
iteration:29
contract coverage: 81.28%
============================
iteration:30
contract coverage: 81.28%
============================
iteration:31
contract coverage: 81.28%
============================
iteration:32
contract coverage: 81.28%
============================
iteration:33
contract coverage: 81.28%
============================
iteration:34
contract coverage: 81.28%
============================
iteration:35
contract coverage: 81.28%
============================
iteration:36
contract coverage: 81.28%
============================
iteration:37
contract coverage: 81.28%
============================
iteration:38
contract coverage: 81.28%
============================
iteration:39
contract coverage: 81.28%
============================
iteration:40
contract coverage: 81.28%
============================
iteration:41
contract coverage: 81.28%
============================
iteration:42
contract coverage: 81.28%
============================
iteration:43
contract coverage: 81.28%
============================
iteration:44
contract coverage: 81.28%
============================
iteration:45
contract coverage: 81.28%
============================
iteration:46
contract coverage: 81.28%
============================
iteration:47
contract coverage: 81.28%
============================
iteration:48
contract coverage: 81.28%
============================
iteration:49
contract coverage: 81.28%
============================
iteration:50
contract coverage: 81.28%
============================
iteration:51
contract coverage: 81.28%
============================
iteration:52
contract coverage: 81.28%
============================
iteration:53
contract coverage: 81.28%
============================
iteration:54
contract coverage: 81.28%
============================
iteration:55
contract coverage: 81.28%
============================
iteration:56
contract coverage: 81.28%
============================
iteration:57
contract coverage: 81.28%
============================
iteration:58
contract coverage: 81.28%
============================
iteration:59
contract coverage: 81.28%
============================
iteration:60
contract coverage: 81.28%
============================
iteration:61
contract coverage: 81.28%
============================
iteration:62
contract coverage: 81.28%
============================
iteration:63
contract coverage: 81.28%
============================
iteration:64
contract coverage: 81.28%
============================
iteration:65
contract coverage: 81.28%
============================
iteration:66
contract coverage: 81.28%
============================
iteration:67
contract coverage: 81.28%
============================
iteration:68
contract coverage: 81.28%
============================
iteration:69
contract coverage: 81.28%
============================
iteration:70
contract coverage: 81.28%
============================
iteration:71
contract coverage: 81.28%
============================
iteration:72
contract coverage: 81.28%
============================
iteration:73
contract coverage: 81.28%
============================
iteration:74
contract coverage: 81.28%
============================
iteration:75
contract coverage: 81.28%
============================
iteration:76
contract coverage: 81.28%
============================
iteration:77
contract coverage: 81.28%
============================
iteration:78
contract coverage: 81.28%
============================
iteration:79
contract coverage: 81.28%
============================
iteration:80
contract coverage: 81.28%
============================
iteration:81
contract coverage: 81.28%
============================
iteration:82
contract coverage: 81.28%
============================
iteration:83
contract coverage: 81.28%
============================
iteration:84
contract coverage: 81.28%
============================
iteration:85
contract coverage: 81.28%
============================
iteration:86
contract coverage: 81.28%
============================
iteration:87
contract coverage: 81.28%
============================
iteration:88
contract coverage: 81.28%
============================
iteration:89
contract coverage: 81.28%
============================
iteration:90
contract coverage: 81.28%
============================
iteration:91
contract coverage: 81.28%
============================
iteration:92
contract coverage: 81.28%
============================
iteration:93
contract coverage: 81.28%
============================
iteration:94
contract coverage: 81.28%
============================
iteration:95
contract coverage: 81.28%
============================
iteration:96
contract coverage: 81.28%
============================
iteration:97
contract coverage: 81.28%
#@statespace
8041 nodes, 8040 edges, 107627 total states
#@coverage
Achieved 1.25% coverage for code: 6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612710600581905550655af3107a4000600681905550601460078190555060646008819055506064600981905550612e028061008c6000396000f3006060604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303a19a4f146102ad5780630b98f975146102d657806318fe1a8d1461031157806323a0fb02146103625780632a501a43146103b35780632c4e722e1461040d57806334fcf437146104365780633f92edaf146104715780634db67caf1461049a5780634f95e960146104eb578063528976de14610538578063656b6b6b146105aa578063679aefce146105f757806371f124c514610620578063724ef94c1461066d5780637252bbf21461073e57806375b4d78c1461078b5780638da5cb5b146107b45780638eb5f58e146108095780639d06583814610856578063a3792985146108f0578063a39a2b761461093d578063adc7612614610966578063b28fc973146109b3578063bcdd1e1314610a00578063beb0a41614610a79578063c13e285d14610b07578063c311d04914610b30578063c44412e314610b6b578063ea7ee01014610bc5578063eb1cfa8214610c31578063f2fde38b14610c6c578063f332a24514610ca5578063f851a44014610cf6575b6101fe34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fc4174c525ef524021f6e3727a9bbe7fa797780670e51c9cd76ceb8e5dfe6c97b3461028f60055434610d2990919063ffffffff16565b604051808381526020018281526020019250505060405180910390a2005b34156102b857600080fd5b6102c0610d61565b6040518082815260200191505060405180910390f35b34156102e157600080fd5b6102f76004808035906020019091905050610d67565b604051808215151515815260200191505060405180910390f35b341561031c57600080fd5b610348600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e22565b604051808215151515815260200191505060405180910390f35b341561036d57600080fd5b610399600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f7c565b604051808215151515815260200191505060405180910390f35b34156103be57600080fd5b6103f3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fc9565b604051808215151515815260200191505060405180910390f35b341561041857600080fd5b61042061115b565b6040518082815260200191505060405180910390f35b341561044157600080fd5b6104576004808035906020019091905050611161565b604051808215151515815260200191505060405180910390f35b341561047c57600080fd5b610484611254565b6040518082815260200191505060405180910390f35b34156104a557600080fd5b6104d1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061125e565b604051808215151515815260200191505060405180910390f35b34156104f657600080fd5b610522600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061127e565b6040518082815260200191505060405180910390f35b341561054357600080fd5b6105906004808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506112aa565b604051808215151515815260200191505060405180910390f35b34156105b557600080fd5b6105e1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061155f565b6040518082815260200191505060405180910390f35b341561060257600080fd5b61060a611577565b6040518082815260200191505060405180910390f35b341561062b57600080fd5b610657600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611581565b6040518082815260200191505060405180910390f35b341561067857600080fd5b610724600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506115f8565b604051808215151515815260200191505060405180910390f35b341561074957600080fd5b610775600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061194e565b6040518082815260200191505060405180910390f35b341561079657600080fd5b61079e611966565b6040518082815260200191505060405180910390f35b34156107bf57600080fd5b6107c761196c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561081457600080fd5b610840600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611991565b6040518082815260200191505060405180910390f35b341561086157600080fd5b6108d6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190919050506119a9565b604051808215151515815260200191505060405180910390f35b34156108fb57600080fd5b610927600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cb8565b6040518082815260200191505060405180910390f35b341561094857600080fd5b610950611d01565b6040518082815260200191505060405180910390f35b341561097157600080fd5b61099d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611d07565b6040518082815260200191505060405180910390f35b34156109be57600080fd5b6109ea600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611d7c565b6040518082815260200191505060405180910390f35b3415610a0b57600080fd5b610a5f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611dc5565b604051808215151515815260200191505060405180910390f35b3415610a8457600080fd5b610a8c612018565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610acc578082015181840152602081019050610ab1565b50505050905090810190601f168015610af95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610b1257600080fd5b610b1a612051565b6040518082815260200191505060405180910390f35b3415610b3b57600080fd5b610b516004808035906020019091905050612057565b604051808215151515815260200191505060405180910390f35b3415610b7657600080fd5b610bab600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506121e0565b604051808215151515815260200191505060405180910390f35b3415610bd057600080fd5b610c1b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506123b1565b6040518082815260200191505060405180910390f35b3415610c3c57600080fd5b610c5260048080359060200190919050506124b2565b604051808215151515815260200191505060405180910390f35b3415610c7757600080fd5b610ca3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612570565b005b3415610cb057600080fd5b610cdc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061271e565b604051808215151515815260200191505060405180910390f35b3415610d0157600080fd5b610d09612877565b005b6000808284019050838110151515610d1f57fe5b8091505092915050565b600080831415610d3c5760009050610d5b565b8183029050818382811515610d4d57fe5b04141515610d5757fe5b8090505b92915050565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dc457600080fd5b8160075414151515610dd557600080fd5b7fc233b8877183b2d7aeb5d3baf2b545240e5c94d7a1f5ed6938ff87a1cf95a2d160075483604051808381526020018281526020019250505060405180910390a181600781905550919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7f57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610ed857600080fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5f9fbe3bc9355d7eb80002cf096327839eecbdf5ffc15955fbe7609433b18c5560405160405180910390a260019050919050565b6000600954600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054109050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561102657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110635750600082115b151561106e57600080fd5b6110c082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f17641426a9871fbd505cf22302be09d58b40768a741ae1b9a270bdb46ff72cf6836040518082815260200191505060405180910390a26001905092915050565b60055481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111bf57600080fd5b60055483141580156111d15750600083115b15156111dc57600080fd5b7f4ac9052a820bf4f8c02d7588587cae835573b5b99ea7ad4ca002f17f319f718660055484604051808381526020018281526020019250505060405180910390a182600581905550670de0b6b3a764000090506112446005548261290c90919063ffffffff16565b6006819055506001915050919050565b6000600854905090565b60036020528060005260406000206000915054906101000a900460ff1681565b60006112a361128c83611cb8565b61129584611581565b610d0b90919063ffffffff16565b9050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561130a57600080fd5b60085484511115151561131c57600080fd5b600091505b835182101561155857600073ffffffffffffffffffffffffffffffffffffffff16848381518110151561135057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141580156113d45750600060026000868581518110151561138d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b1561154b576002600085848151811015156113eb57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060026000868581518110151561144657fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838281518110151561149c57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156114e557600080fd5b83828151811015156114f357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76826040518082815260200191505060405180910390a25b8180600101925050611321565b5050919050565b60046020528060005260406000206000915090505481565b6000600554905090565b60006115f1670de0b6b3a76400006115e3600554600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d2990919063ffffffff16565b61290c90919063ffffffff16565b9050919050565b6000806000859150600854855111158015611614575083518551145b8015611639575084516116263361127e565b101580611638575061163786610f7c565b5b5b801561168f5750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b151561169a57600080fd5b600090505b845181101561183e57600073ffffffffffffffffffffffffffffffffffffffff1685828151811015156116ce57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415801561171357506000848281518110151561170757fe5b90602001906020020151115b15611831578173ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561174357fe5b90602001906020020151878581518110151561175b57fe5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561181c57600080fd5b6102c65a03f1151561182d57600080fd5b5050505b808060010191505061169f565b61184786610f7c565b156118e75761189f8551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f2565b6118f18551612922565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b60026020528060005260406000206000915090505481565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b60008060008591506008548551111580156119dd575084516119ca3361127e565b1015806119dc57506119db86610f7c565b5b5b8015611a335750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1515611a3e57600080fd5b600090505b8451811015611ba857600073ffffffffffffffffffffffffffffffffffffffff168582815181101515611a7257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141515611b9b578173ffffffffffffffffffffffffffffffffffffffff166323b872dd338784815181101515611ac457fe5b90602001906020020151876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515611b8657600080fd5b6102c65a03f11515611b9757600080fd5b5050505b8080600101915050611a43565b611bb186610f7c565b15611c5157611c098551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c5c565b611c5b8551612922565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60065481565b6000611d1282610f7c565b15611d7257611d6b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600954612dbd90919063ffffffff16565b9050611d77565b600090505b919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e2357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614158015611e8d5750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b8015611e995750600083115b1515611ea457600080fd5b8490508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611f5257600080fd5b6102c65a03f11515611f6357600080fd5b50505060405180519050507ee763f7778b8ceef7270c89b7d1df1008b0e482da39c43831417733af96fb0d858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a160019150509392505050565b6040805190810160405280600f81526020017f7777772e51756e466142612e636f6d000000000000000000000000000000000081525081565b60095481565b60008082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156120a95750600083115b15156120b457600080fd5b82905061210983600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561218c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8455ae6be5d92f1df1c3c1484388e247a36c7e60d72055ae216dbc258f257d4b826040518082815260200191505060405180910390a250919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561223d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156122b9575081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b15156122c457600080fd5b61231682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167fc1bc87fca69dd3948590175e7c7e66a498d583b1bf99540547fc38e7f1005859836040518082815260200191505060405180910390a26001905092915050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561248e57600080fd5b6102c65a03f1151561249f57600080fd5b5050506040518051905091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561250f57600080fd5b6064821015151561251f57600080fd5b7f9b7e3ed6ece2694ef31c25bc941a429a17a30546dd406649a5b7178d76c2159960085483604051808381526020018281526020019250505060405180910390a18160088190555060019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156125cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561265557506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b151561266057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561277b57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156127d357600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe9c9a473410d8fd0bb91117f70a4b750bce859ab398b18cc49160f5ff41d66e460405160405180910390a260019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128d257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000818381151561291957fe5b04905092915050565b600061292d33611581565b82111515612b14576129ae612960606461295260075486610d2990919063ffffffff16565b61290c90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612a57612a0960065484610d2990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc612aea60065485610d2990919063ffffffff16565b9081150290604051600060405180830381858888f193505050501515612b0f57600080fd5b612db9565b612b2f612b2033611581565b83612dbd90919063ffffffff16565b90506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115612d2357612bfa612bac6064612b9e600754612b9033611581565b610d2990919063ffffffff16565b61290c90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515612cdd57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b612d7581600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b6000828211151515612dcb57fe5b8183039050929150505600a165627a7a7230582090ac71525128ca5f0bb1ef256b75eadeca8163b95067fd497711bc30ae3625e80029
#@coverage
Achieved 81.28% coverage for code: 6060604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303a19a4f146102ad5780630b98f975146102d657806318fe1a8d1461031157806323a0fb02146103625780632a501a43146103b35780632c4e722e1461040d57806334fcf437146104365780633f92edaf146104715780634db67caf1461049a5780634f95e960146104eb578063528976de14610538578063656b6b6b146105aa578063679aefce146105f757806371f124c514610620578063724ef94c1461066d5780637252bbf21461073e57806375b4d78c1461078b5780638da5cb5b146107b45780638eb5f58e146108095780639d06583814610856578063a3792985146108f0578063a39a2b761461093d578063adc7612614610966578063b28fc973146109b3578063bcdd1e1314610a00578063beb0a41614610a79578063c13e285d14610b07578063c311d04914610b30578063c44412e314610b6b578063ea7ee01014610bc5578063eb1cfa8214610c31578063f2fde38b14610c6c578063f332a24514610ca5578063f851a44014610cf6575b6101fe34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fc4174c525ef524021f6e3727a9bbe7fa797780670e51c9cd76ceb8e5dfe6c97b3461028f60055434610d2990919063ffffffff16565b604051808381526020018281526020019250505060405180910390a2005b34156102b857600080fd5b6102c0610d61565b6040518082815260200191505060405180910390f35b34156102e157600080fd5b6102f76004808035906020019091905050610d67565b604051808215151515815260200191505060405180910390f35b341561031c57600080fd5b610348600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e22565b604051808215151515815260200191505060405180910390f35b341561036d57600080fd5b610399600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f7c565b604051808215151515815260200191505060405180910390f35b34156103be57600080fd5b6103f3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fc9565b604051808215151515815260200191505060405180910390f35b341561041857600080fd5b61042061115b565b6040518082815260200191505060405180910390f35b341561044157600080fd5b6104576004808035906020019091905050611161565b604051808215151515815260200191505060405180910390f35b341561047c57600080fd5b610484611254565b6040518082815260200191505060405180910390f35b34156104a557600080fd5b6104d1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061125e565b604051808215151515815260200191505060405180910390f35b34156104f657600080fd5b610522600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061127e565b6040518082815260200191505060405180910390f35b341561054357600080fd5b6105906004808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506112aa565b604051808215151515815260200191505060405180910390f35b34156105b557600080fd5b6105e1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061155f565b6040518082815260200191505060405180910390f35b341561060257600080fd5b61060a611577565b6040518082815260200191505060405180910390f35b341561062b57600080fd5b610657600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611581565b6040518082815260200191505060405180910390f35b341561067857600080fd5b610724600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506115f8565b604051808215151515815260200191505060405180910390f35b341561074957600080fd5b610775600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061194e565b6040518082815260200191505060405180910390f35b341561079657600080fd5b61079e611966565b6040518082815260200191505060405180910390f35b34156107bf57600080fd5b6107c761196c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561081457600080fd5b610840600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611991565b6040518082815260200191505060405180910390f35b341561086157600080fd5b6108d6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190919050506119a9565b604051808215151515815260200191505060405180910390f35b34156108fb57600080fd5b610927600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cb8565b6040518082815260200191505060405180910390f35b341561094857600080fd5b610950611d01565b6040518082815260200191505060405180910390f35b341561097157600080fd5b61099d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611d07565b6040518082815260200191505060405180910390f35b34156109be57600080fd5b6109ea600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611d7c565b6040518082815260200191505060405180910390f35b3415610a0b57600080fd5b610a5f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611dc5565b604051808215151515815260200191505060405180910390f35b3415610a8457600080fd5b610a8c612018565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610acc578082015181840152602081019050610ab1565b50505050905090810190601f168015610af95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610b1257600080fd5b610b1a612051565b6040518082815260200191505060405180910390f35b3415610b3b57600080fd5b610b516004808035906020019091905050612057565b604051808215151515815260200191505060405180910390f35b3415610b7657600080fd5b610bab600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506121e0565b604051808215151515815260200191505060405180910390f35b3415610bd057600080fd5b610c1b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506123b1565b6040518082815260200191505060405180910390f35b3415610c3c57600080fd5b610c5260048080359060200190919050506124b2565b604051808215151515815260200191505060405180910390f35b3415610c7757600080fd5b610ca3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612570565b005b3415610cb057600080fd5b610cdc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061271e565b604051808215151515815260200191505060405180910390f35b3415610d0157600080fd5b610d09612877565b005b6000808284019050838110151515610d1f57fe5b8091505092915050565b600080831415610d3c5760009050610d5b565b8183029050818382811515610d4d57fe5b04141515610d5757fe5b8090505b92915050565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dc457600080fd5b8160075414151515610dd557600080fd5b7fc233b8877183b2d7aeb5d3baf2b545240e5c94d7a1f5ed6938ff87a1cf95a2d160075483604051808381526020018281526020019250505060405180910390a181600781905550919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7f57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610ed857600080fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5f9fbe3bc9355d7eb80002cf096327839eecbdf5ffc15955fbe7609433b18c5560405160405180910390a260019050919050565b6000600954600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054109050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561102657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110635750600082115b151561106e57600080fd5b6110c082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f17641426a9871fbd505cf22302be09d58b40768a741ae1b9a270bdb46ff72cf6836040518082815260200191505060405180910390a26001905092915050565b60055481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111bf57600080fd5b60055483141580156111d15750600083115b15156111dc57600080fd5b7f4ac9052a820bf4f8c02d7588587cae835573b5b99ea7ad4ca002f17f319f718660055484604051808381526020018281526020019250505060405180910390a182600581905550670de0b6b3a764000090506112446005548261290c90919063ffffffff16565b6006819055506001915050919050565b6000600854905090565b60036020528060005260406000206000915054906101000a900460ff1681565b60006112a361128c83611cb8565b61129584611581565b610d0b90919063ffffffff16565b9050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561130a57600080fd5b60085484511115151561131c57600080fd5b600091505b835182101561155857600073ffffffffffffffffffffffffffffffffffffffff16848381518110151561135057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141580156113d45750600060026000868581518110151561138d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b1561154b576002600085848151811015156113eb57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060026000868581518110151561144657fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838281518110151561149c57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156114e557600080fd5b83828151811015156114f357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76826040518082815260200191505060405180910390a25b8180600101925050611321565b5050919050565b60046020528060005260406000206000915090505481565b6000600554905090565b60006115f1670de0b6b3a76400006115e3600554600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d2990919063ffffffff16565b61290c90919063ffffffff16565b9050919050565b6000806000859150600854855111158015611614575083518551145b8015611639575084516116263361127e565b101580611638575061163786610f7c565b5b5b801561168f5750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b151561169a57600080fd5b600090505b845181101561183e57600073ffffffffffffffffffffffffffffffffffffffff1685828151811015156116ce57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415801561171357506000848281518110151561170757fe5b90602001906020020151115b15611831578173ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561174357fe5b90602001906020020151878581518110151561175b57fe5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561181c57600080fd5b6102c65a03f1151561182d57600080fd5b5050505b808060010191505061169f565b61184786610f7c565b156118e75761189f8551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f2565b6118f18551612922565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b60026020528060005260406000206000915090505481565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b60008060008591506008548551111580156119dd575084516119ca3361127e565b1015806119dc57506119db86610f7c565b5b5b8015611a335750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1515611a3e57600080fd5b600090505b8451811015611ba857600073ffffffffffffffffffffffffffffffffffffffff168582815181101515611a7257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141515611b9b578173ffffffffffffffffffffffffffffffffffffffff166323b872dd338784815181101515611ac457fe5b90602001906020020151876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515611b8657600080fd5b6102c65a03f11515611b9757600080fd5b5050505b8080600101915050611a43565b611bb186610f7c565b15611c5157611c098551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c5c565b611c5b8551612922565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60065481565b6000611d1282610f7c565b15611d7257611d6b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600954612dbd90919063ffffffff16565b9050611d77565b600090505b919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e2357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614158015611e8d5750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b8015611e995750600083115b1515611ea457600080fd5b8490508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611f5257600080fd5b6102c65a03f11515611f6357600080fd5b50505060405180519050507ee763f7778b8ceef7270c89b7d1df1008b0e482da39c43831417733af96fb0d858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a160019150509392505050565b6040805190810160405280600f81526020017f7777772e51756e466142612e636f6d000000000000000000000000000000000081525081565b60095481565b60008082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156120a95750600083115b15156120b457600080fd5b82905061210983600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561218c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8455ae6be5d92f1df1c3c1484388e247a36c7e60d72055ae216dbc258f257d4b826040518082815260200191505060405180910390a250919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561223d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156122b9575081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b15156122c457600080fd5b61231682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167fc1bc87fca69dd3948590175e7c7e66a498d583b1bf99540547fc38e7f1005859836040518082815260200191505060405180910390a26001905092915050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561248e57600080fd5b6102c65a03f1151561249f57600080fd5b5050506040518051905091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561250f57600080fd5b6064821015151561251f57600080fd5b7f9b7e3ed6ece2694ef31c25bc941a429a17a30546dd406649a5b7178d76c2159960085483604051808381526020018281526020019250505060405180910390a18160088190555060019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156125cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561265557506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b151561266057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561277b57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156127d357600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe9c9a473410d8fd0bb91117f70a4b750bce859ab398b18cc49160f5ff41d66e460405160405180910390a260019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156128d257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000818381151561291957fe5b04905092915050565b600061292d33611581565b82111515612b14576129ae612960606461295260075486610d2990919063ffffffff16565b61290c90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612a57612a0960065484610d2990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc612aea60065485610d2990919063ffffffff16565b9081150290604051600060405180830381858888f193505050501515612b0f57600080fd5b612db9565b612b2f612b2033611581565b83612dbd90919063ffffffff16565b90506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115612d2357612bfa612bac6064612b9e600754612b9033611581565b610d2990919063ffffffff16565b61290c90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515612cdd57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b612d7581600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612dbd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b6000828211151515612dcb57fe5b8183039050929150505600a165627a7a7230582090ac71525128ca5f0bb1ef256b75eadeca8163b95067fd497711bc30ae3625e80029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: QunFaBa
Function name: issueRefunds(address[])
PC address: 1368
Estimated Gas Usage: 9375 - 18082
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:282

function issueRefunds(address[] _addrs) public onlyOwner returns(bool) {
        require(_addrs.length <= maxDropsPerTx);
        for(uint i = 0; i < _addrs.length; i++) {
            if(_addrs[i] != address(0) && ethBalanceOf[_addrs[i]] > 0) {
                uint256 toRefund = ethBalanceOf[_addrs[i]];
                ethBalanceOf[_addrs[i]] = 0;
                _addrs[i].transfer(toRefund);
                RefundIssued(_addrs[i], toRefund);
            }
        }
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: issueRefunds(address[]), txdata: 0x528976deffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdcvalue: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: QunFaBa
Function name: multiValueAirdrop(address,address[],uint256[])
PC address: 1708
Estimated Gas Usage: 17306 - 46727
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:322

function multiValueAirdrop(address _addressOfToken,  address[] _recipients, uint256[] _values) public returns(bool) {
        ERCInterface token = ERCInterface(_addressOfToken);
        require(
            _recipients.length <= maxDropsPerTx 
            && _recipients.length == _values.length 
            && (
                getTotalDropsOf(msg.sender) >= _recipients.length
                || tokenHasFreeTrial(_addressOfToken)
            )
            && !tokenIsBanned[_addressOfToken]
        );
        for(uint i = 0; i < _recipients.length; i++) {
            if(_recipients[i] != address(0) && _values[i] > 0) {
                token.transferFrom(msg.sender, _recipients[i], _values[i]);
            }
        }
        if(tokenHasFreeTrial(_addressOfToken)) {
            trialDrops[_addressOfToken] = trialDrops[_addressOfToken].add(_recipients.length);
        } else {
            updateMsgSenderBonusDrops(_recipients.length);
        }
        AirdropInvoked(msg.sender, _recipients.length);
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: multiValueAirdrop(address,address[],uint256[]), txdata: 0x724ef94c0000000000000000000000000000000000000000000000000000000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: QunFaBa
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 2197
Estimated Gas Usage: 20472 - 116438
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:296

function singleValueAirdrop(address _addressOfToken,  address[] _recipients, uint256 _value) public returns(bool) {
        ERCInterface token = ERCInterface(_addressOfToken);
        require(
            _recipients.length <= maxDropsPerTx 
            && (
                getTotalDropsOf(msg.sender)>= _recipients.length 
                || tokenHasFreeTrial(_addressOfToken) 
            )
            && !tokenIsBanned[_addressOfToken]
        );
        for(uint i = 0; i < _recipients.length; i++) {
            if(_recipients[i] != address(0)) {
                token.transferFrom(msg.sender, _recipients[i], _value);
            }
        }
        if(tokenHasFreeTrial(_addressOfToken)) {
            trialDrops[_addressOfToken] = trialDrops[_addressOfToken].add(_recipients.length);
        } else {
            updateMsgSenderBonusDrops(_recipients.length);
        }
        AirdropInvoked(msg.sender, _recipients.length);
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838c802c4054098408008082002044002800fffffffffffffffffffffff01004000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: QunFaBa
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 3969
Estimated Gas Usage: 20633 - 116878
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:130

maxTrialDrops

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe5, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: QunFaBa
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 4033
Estimated Gas Usage: 20633 - 116878
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:130

trialDrops[_addressOfToken]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe5, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: QunFaBa
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 7052
Estimated Gas Usage: 20633 - 116878
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:308

token.transferFrom(msg.sender, _recipients[i], _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: QunFaBa
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 7163
Estimated Gas Usage: 20633 - 116878
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:312

trialDrops[_addressOfToken]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe5, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: QunFaBa
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 7243
Estimated Gas Usage: 20633 - 116878
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:312

trialDrops[_addressOfToken] = trialDrops[_addressOfToken].add(_recipients.length)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe5, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: QunFaBa
Function name: withdrawERC20Tokens(address,address,uint256)
PC address: 8024
Estimated Gas Usage: 4350 - 40628
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:374

token.transfer(_recipient, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address,address,uint256), txdata: 0xbcdd1e13000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef010101010101010101010101010201010108080101010201010102010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: QunFaBa
Function name: getTokenAllowance(address,address)
PC address: 9364
Estimated Gas Usage: 2562 - 37783
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:257

token.allowance(_addr, address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getTokenAllowance(address,address), txdata: 0xea7ee0100000000000000000000000000000000000000000000000800000000000000012010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


time_used: 36066.22593164444 seconds
#@contract_info_time
0x07974eb2ad95291691ba3ae80b6cd85c343bc4bc.sol:0.4.19:QunFaBa:36066.22593164444:36100:60:36000
