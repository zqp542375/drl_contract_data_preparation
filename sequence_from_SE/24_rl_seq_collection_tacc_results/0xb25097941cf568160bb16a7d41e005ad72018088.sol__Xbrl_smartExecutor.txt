++++ 0xb25097941cf568160bb16a7d41e005ad72018088.sol  :  0.5.0  :  Xbrl ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 2975
['constructor']:writes at the last depth:['1', '5', '6', '7', '8', '0', '3']
preprocessing: Achieved 99.97% coverage.
1299360985311174496703185332571802898230226337062 is added into actors.
dynamic svars:['5', '7', '3', '4', '2']
static svars:['1', '0', '8', '6']
Ending preprocessing.
preprocessing time(s): 41.85548996925354
contract coverage: 89.55%
name() is not reachable
symbol() is not reachable
Function Reads: State variables read in conditions
	name():[]
	turnon():['8']
	approve(address,uint256):['1']
	totalSupply():[]
	status():[]
	transferFrom(address,address,uint256):['1', '2', '3', '4']
	decimals():[]
	mint(address,uint256):['1', '8', '0']
	burn(uint256):['1', '3']
	controllerAddress():[]
	balanceOf(address):['1']
	symbol():[]
	turnoff():['8']
	transfer(address,uint256):['1', '2', '3']
	frozenAccount(address):[]
	allowance(address,address):['1']
	freezeAccount(address,bool):['1', '8']
Function Writes: State variables written
	turnon():['1']
	turnoff():['1']
	approve(address,uint256):['4']
	mint(address,uint256):['0', '3']
	burn(uint256):['3', '0']
	freezeAccount(address,bool):['2']
	transfer(address,uint256):['3']
	transferFrom(address,address,uint256):['3', '4']
============================
iteration:3
targets:['transferFrom(address,address,uint256)', 'name()', 'symbol()', 'balanceOf(address)', 'transfer(address,uint256)', 'allowance(address,address)']
['turnon()']:writes at the last depth:['1']
['turnoff()']:writes at the last depth:['1']
['approve(address,uint256)']:writes at the last depth:['4']
['freezeAccount(address,bool)']:writes at the last depth:['2']
['burn(uint256)']:writes at the last depth:['3', '0']
['mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 89.55%
============================
iteration:4
['transfer(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 89.55%
============================
iteration:5
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 89.55%
============================
iteration:6
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 89.55%
============================
iteration:7
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 89.55%
============================
iteration:8
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 89.95%
============================
iteration:9
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'freezeAccount(address,bool)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 90.72%
============================
iteration:10
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 91.53%
============================
iteration:11
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnoff()', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnoff()', 'turnoff()']:writes at the last depth:['1']
contract coverage: 91.53%
============================
iteration:12
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'turnon()', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 91.53%
============================
iteration:13
['transfer(address,uint256)', 'mint(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'mint(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'mint(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'mint(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'mint(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 91.53%
============================
iteration:14
contract coverage: 91.53%
============================
iteration:15
contract coverage: 91.53%
============================
iteration:16
['transfer(address,uint256)', 'mint(address,uint256)', 'burn(uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'burn(uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'mint(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
contract coverage: 91.53%
============================
iteration:17
['transfer(address,uint256)', 'mint(address,uint256)', 'freezeAccount(address,bool)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'freezeAccount(address,bool)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'freezeAccount(address,bool)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'mint(address,uint256)', 'freezeAccount(address,bool)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
contract coverage: 91.53%
============================
iteration:18
['transfer(address,uint256)', 'mint(address,uint256)', 'approve(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'approve(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'mint(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'mint(address,uint256)', 'approve(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
contract coverage: 91.53%
============================
iteration:19
contract coverage: 91.53%
============================
iteration:20
contract coverage: 91.53%
============================
iteration:21
['transfer(address,uint256)', 'burn(uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'burn(uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'burn(uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 91.53%
============================
iteration:22
['transfer(address,uint256)', 'burn(uint256)', 'transfer(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
contract coverage: 91.53%
============================
iteration:23
['transfer(address,uint256)', 'burn(uint256)', 'burn(uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'burn(uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'burn(uint256)', 'burn(uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
contract coverage: 91.53%
============================
iteration:24
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'burn(uint256)', 'freezeAccount(address,bool)', 'transfer(address,uint256)']:writes at the last depth:['3']
contract coverage: 97.58%
============================
iteration:25
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3']
['transfer(address,uint256)', 'burn(uint256)', 'approve(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['3', '4']
contract coverage: 97.58%
============================
iteration:26
['transfer(address,uint256)', 'burn(uint256)', 'turnoff()', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'turnoff()', 'turnoff()']:writes at the last depth:['1']
contract coverage: 97.58%
============================
iteration:27
['transfer(address,uint256)', 'burn(uint256)', 'turnon()', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'turnon()', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'burn(uint256)', 'turnon()', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'burn(uint256)', 'turnon()', 'freezeAccount(address,bool)']:writes at the last depth:['2']
contract coverage: 97.58%
============================
iteration:28
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'turnon()']:writes at the last depth:['1']
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'turnoff()']:writes at the last depth:['1']
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'freezeAccount(address,bool)']:writes at the last depth:['2']
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'burn(uint256)']:writes at the last depth:['3', '0']
contract coverage: 97.58%
============================
iteration:29
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'burn(uint256)', 'burn(uint256)']:writes at the last depth:['3', '0']
contract coverage: 97.58%
============================
iteration:30
['transfer(address,uint256)', 'freezeAccount(address,bool)', 'freezeAccount(address,bool)', 'turnon()']:writes at the last depth:['1']
contract coverage: 97.58%
============================
iteration:31
contract coverage: 97.58%
============================
iteration:32
contract coverage: 97.58%
============================
iteration:33
contract coverage: 97.58%
============================
iteration:34
contract coverage: 97.58%
============================
iteration:35
contract coverage: 97.58%
============================
iteration:36
contract coverage: 97.58%
============================
iteration:37
contract coverage: 97.58%
============================
iteration:38
contract coverage: 97.58%
============================
iteration:39
contract coverage: 97.58%
============================
iteration:40
contract coverage: 97.58%
============================
iteration:41
contract coverage: 97.58%
============================
iteration:42
contract coverage: 97.58%
#@statespace
4213 nodes, 4212 edges, 58840 total states
#@coverage
Achieved 9.78% coverage for code: 608060405260018060006101000a81548160ff0219169083151502179055506040805190810160405280600481526020017f7862726c00000000000000000000000000000000000000000000000000000000815250600590805190602001906200006b92919062000205565b506012600660006101000a81548160ff021916908360ff1602179055506040805190810160405280600481526020017f5842524c0000000000000000000000000000000000000000000000000000000081525060079080519060200190620000d592919062000205565b506001600860006101000a81548160ff02191690831515021790555073e3995c98c7c96d953cf247d595c6fb953ffa3d26600860016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200015357600080fd5b5060011515600860009054906101000a900460ff1615151415156200017757600080fd5b6b06765c793fa10079d00000006000819055506000546003600073e3995c98c7c96d953cf247d595c6fb953ffa3d2673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860006101000a81548160ff021916908315150217905550620002b4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024857805160ff191683800117855562000279565b8280016001018555821562000279579182015b82811115620002785782518255916020019190600101906200025b565b5b5090506200028891906200028c565b5090565b620002b191905b80821115620002ad57600081600090555060010162000293565b5090565b90565b6117da80620002c46000396000f3fe6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100f6578063084592cb14610186578063095ea7b31461019d57806318160ddd14610210578063200d2ed21461023b57806323b872dd1461026a578063313ce567146102fd57806340c10f191461032e57806342966c68146103a15780634b24ea47146103f457806370a082311461044b57806395d89b41146104b05780639eeb30e614610540578063a9059cbb14610557578063b414d4b6146105ca578063dd62ed3e14610633578063e724529c146106b8575b600080fd5b34801561010257600080fd5b5061010b610715565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014b578082015181840152602081019050610130565b50505050905090810190601f1680156101785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019257600080fd5b5061019b6107b3565b005b3480156101a957600080fd5b506101f6600480360360408110156101c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082b565b604051808215151515815260200191505060405180910390f35b34801561021c57600080fd5b5061022561093f565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b50610250610945565b604051808215151515815260200191505060405180910390f35b34801561027657600080fd5b506102e36004803603606081101561028d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610958565b604051808215151515815260200191505060405180910390f35b34801561030957600080fd5b50610312610da2565b604051808260ff1660ff16815260200191505060405180910390f35b34801561033a57600080fd5b506103876004803603604081101561035157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610db5565b604051808215151515815260200191505060405180910390f35b3480156103ad57600080fd5b506103da600480360360208110156103c457600080fd5b8101908080359060200190929190505050610f90565b604051808215151515815260200191505060405180910390f35b34801561040057600080fd5b506104096110f7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045757600080fd5b5061049a6004803603602081101561046e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111d565b6040518082815260200191505060405180910390f35b3480156104bc57600080fd5b506104c5611188565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105055780820151818401526020810190506104ea565b50505050905090810190601f1680156105325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054c57600080fd5b50610555611226565b005b34801561056357600080fd5b506105b06004803603604081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061129f565b604051808215151515815260200191505060405180910390f35b3480156105d657600080fd5b50610619600480360360208110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611554565b604051808215151515815260200191505060405180910390f35b34801561063f57600080fd5b506106a26004803603604081101561065657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611574565b6040518082815260200191505060405180910390f35b3480156106c457600080fd5b50610713600480360360408110156106db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061161d565b005b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ab5780601f10610780576101008083540402835291602001916107ab565b820191906000526020600020905b81548152906001019060200180831161078e57829003601f168201915b505050505081565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080f57600080fd5b60018060006101000a81548160ff021916908315150217905550565b600060011515600160009054906101000a900460ff16151514151561084f57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600160009054906101000a900460ff1681565b600060011515600160009054906101000a900460ff16151514151561097c57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156109d557600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610a2e57600080fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610af9575081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610b055750600082115b15610d9657610b53600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611765565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bdf600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361178f565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca8600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361178f565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610d9b565b600090505b9392505050565b600660009054906101000a900460ff1681565b600060011515600160009054906101000a900460ff161515141515610dd957600080fd5b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e3557600080fd5b610e4160005483611765565b600081905550610e90600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611765565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600060011515600160009054906101000a900460ff161515141515610fb457600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561100257600080fd5b61104b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361178f565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109a6000548361178f565b6000819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050919050565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600160009054906101000a900460ff16151514151561114157600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561121e5780601f106111f35761010080835404028352916020019161121e565b820191906000526020600020905b81548152906001019060200180831161120157829003601f168201915b505050505081565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561128257600080fd5b6000600160006101000a81548160ff021916908315150217905550565b600060011515600160009054906101000a900460ff1615151415156112c357600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561131c57600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561137557600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156113c45750600082115b80156113fd5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156115495781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550611498600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611765565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905061154e565b600090505b92915050565b60026020528060005260406000206000915054906101000a900460ff1681565b600060011515600160009054906101000a900460ff16151514151561159857600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60011515600160009054906101000a900460ff16151514151561163f57600080fd5b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169b57600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a58282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050565b600080828401905083811015801561177d5750828110155b151561178557fe5b8091505092915050565b600081831015151561179d57fe5b60008284039050809150509291505056fea165627a7a72305820ed7e10c95ab3f24f952265a7696da5444ea3f532270e00fe3e878182f52ea9750029
#@coverage
Achieved 97.58% coverage for code: 6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100f6578063084592cb14610186578063095ea7b31461019d57806318160ddd14610210578063200d2ed21461023b57806323b872dd1461026a578063313ce567146102fd57806340c10f191461032e57806342966c68146103a15780634b24ea47146103f457806370a082311461044b57806395d89b41146104b05780639eeb30e614610540578063a9059cbb14610557578063b414d4b6146105ca578063dd62ed3e14610633578063e724529c146106b8575b600080fd5b34801561010257600080fd5b5061010b610715565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014b578082015181840152602081019050610130565b50505050905090810190601f1680156101785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019257600080fd5b5061019b6107b3565b005b3480156101a957600080fd5b506101f6600480360360408110156101c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082b565b604051808215151515815260200191505060405180910390f35b34801561021c57600080fd5b5061022561093f565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b50610250610945565b604051808215151515815260200191505060405180910390f35b34801561027657600080fd5b506102e36004803603606081101561028d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610958565b604051808215151515815260200191505060405180910390f35b34801561030957600080fd5b50610312610da2565b604051808260ff1660ff16815260200191505060405180910390f35b34801561033a57600080fd5b506103876004803603604081101561035157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610db5565b604051808215151515815260200191505060405180910390f35b3480156103ad57600080fd5b506103da600480360360208110156103c457600080fd5b8101908080359060200190929190505050610f90565b604051808215151515815260200191505060405180910390f35b34801561040057600080fd5b506104096110f7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045757600080fd5b5061049a6004803603602081101561046e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111d565b6040518082815260200191505060405180910390f35b3480156104bc57600080fd5b506104c5611188565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105055780820151818401526020810190506104ea565b50505050905090810190601f1680156105325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561054c57600080fd5b50610555611226565b005b34801561056357600080fd5b506105b06004803603604081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061129f565b604051808215151515815260200191505060405180910390f35b3480156105d657600080fd5b50610619600480360360208110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611554565b604051808215151515815260200191505060405180910390f35b34801561063f57600080fd5b506106a26004803603604081101561065657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611574565b6040518082815260200191505060405180910390f35b3480156106c457600080fd5b50610713600480360360408110156106db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061161d565b005b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ab5780601f10610780576101008083540402835291602001916107ab565b820191906000526020600020905b81548152906001019060200180831161078e57829003601f168201915b505050505081565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080f57600080fd5b60018060006101000a81548160ff021916908315150217905550565b600060011515600160009054906101000a900460ff16151514151561084f57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600160009054906101000a900460ff1681565b600060011515600160009054906101000a900460ff16151514151561097c57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156109d557600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610a2e57600080fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610af9575081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610b055750600082115b15610d9657610b53600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611765565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bdf600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361178f565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca8600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361178f565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610d9b565b600090505b9392505050565b600660009054906101000a900460ff1681565b600060011515600160009054906101000a900460ff161515141515610dd957600080fd5b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e3557600080fd5b610e4160005483611765565b600081905550610e90600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611765565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600060011515600160009054906101000a900460ff161515141515610fb457600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561100257600080fd5b61104b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361178f565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109a6000548361178f565b6000819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050919050565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600160009054906101000a900460ff16151514151561114157600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561121e5780601f106111f35761010080835404028352916020019161121e565b820191906000526020600020905b81548152906001019060200180831161120157829003601f168201915b505050505081565b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561128257600080fd5b6000600160006101000a81548160ff021916908315150217905550565b600060011515600160009054906101000a900460ff1615151415156112c357600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561131c57600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561137557600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156113c45750600082115b80156113fd5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156115495781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550611498600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611765565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905061154e565b600090505b92915050565b60026020528060005260406000206000915054906101000a900460ff1681565b600060011515600160009054906101000a900460ff16151514151561159857600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60011515600160009054906101000a900460ff16151514151561163f57600080fd5b600860019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169b57600080fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a58282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050565b600080828401905083811015801561177d5750828110155b151561178557fe5b8091505092915050565b600081831015151561179d57fe5b60008284039050809150509291505056fea165627a7a72305820ed7e10c95ab3f24f952265a7696da5444ea3f532270e00fe3e878182f52ea9750029
==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Xbrl
Function name: mint(address,uint256)
PC address: 6020
Estimated Gas Usage: 3041 - 3796
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xb25097941cf568160bb16a7d41e005ad72018088.sol:124

safeAdd(totalSupply, _amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: mint(address,uint256), txdata: 0x40c10f190000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffff989a386c05eff8630000101, decoded_data: ('0x0000000000000000000000000000000000000000', 115792089237316195423570985008687907853269984665638564039457584007913129640193), value: 0x0


time_used: 36037.00845217705 seconds
#@contract_info_time
0xb25097941cf568160bb16a7d41e005ad72018088.sol:0.5.0:Xbrl:36037.00845217705:36100:60:36000
