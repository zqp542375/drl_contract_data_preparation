++++ 0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol  :  0.4.26  :  ConverterRegistry ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 11262
['constructor']:writes at the last depth:['0', '2', '3']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 42.64% coverage.
dynamic svars:['41']
static svars:['3', '0', '1', '2']
Ending preprocessing.
preprocessing time(s): 100.57441186904907
contract coverage: 75.05%
acceptOwnership() is not reachable
getConvertersBySmartTokens(address[]) is not reachable
getSmartTokens() is not reachable
getConvertersByAnchors(address[]) is not reachable
getConvertibleTokenAnchors(address) is not reachable
Function Reads: State variables read in conditions
	restrictRegistryUpdate(bool):['0']
	getSmartTokens():[]
	getConvertibleTokenAnchors(address):[]
	getLiquidityPoolByConfig(uint16,address[],uint32[]):[]
	getConvertersBySmartTokens(address[]):[]
	onlyOwnerCanUpdateRegistry():[]
	isConvertibleToken(address):[]
	isSmartToken(address):[]
	getConvertibleTokenAnchorCount(address):[]
	updateRegistry():['0', '3']
	getAnchor(uint256):[]
	newConverter(uint16,string,string,uint8,uint32,address[],uint32[]):[]
	getConvertibleTokens():[]
	getConvertibleTokenAnchor(address,uint256):[]
	getConvertersByAnchors(address[]):[]
	prevRegistry():[]
	getConvertibleTokenCount():[]
	addConverter(address):['0']
	isConvertibleTokenSmartToken(address,address):[]
	acceptOwnership():['1']
	getLiquidityPoolCount():[]
	registry():[]
	getLiquidityPools():[]
	getConvertibleToken(uint256):[]
	owner():[]
	isSimilarLiquidityPoolRegistered(address):[]
	isConverterValid(address):[]
	removeConverter(address):['0']
	getSmartToken(uint256):[]
	getConvertibleTokenSmartTokenCount(address):[]
	getLiquidityPool(uint256):[]
	restoreRegistry():['0']
	isConvertibleTokenAnchor(address,address):[]
	getLiquidityPoolByReserveConfig(address[],uint32[]):[]
	safeTransfer(address,address,uint256):[]
	getAnchorCount():[]
	newOwner():[]
	getConvertibleTokenSmartToken(address,uint256):[]
	isAnchor(address):[]
	safeTransferFrom(address,address,address,uint256):[]
	getSmartTokenCount():[]
	isLiquidityPool(address):[]
	safeApprove(address,address,uint256):[]
	getAnchors():[]
	transferOwnership(address):[]
	getConvertibleTokenSmartTokens(address):[]
Function Writes: State variables written
	restrictRegistryUpdate(bool):['3']
	acceptOwnership():['0', '1']
	restoreRegistry():['2']
============================
iteration:3
targets:['acceptOwnership()', 'getConvertersBySmartTokens(address[])', 'updateRegistry()', 'getSmartTokens()', 'getConvertersByAnchors(address[])', 'getConvertibleTokenAnchors(address)']
['restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['restoreRegistry()']:writes at the last depth:['2']
['isConvertibleToken(address)']:writes at the last depth:[]
['getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['getConvertibleTokenCount()']:writes at the last depth:[]
['getAnchor(uint256)']:writes at the last depth:[]
['isSmartToken(address)']:writes at the last depth:[]
['getLiquidityPoolCount()']:writes at the last depth:[]
['transferOwnership(address)']:writes at the last depth:['1']
['getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['isConverterValid(address)']:writes at the last depth:[]
['getConvertibleToken(uint256)']:writes at the last depth:[]
['isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['updateRegistry()']:writes at the last depth:['3', '2']
['getAnchorCount()']:writes at the last depth:[]
['updateRegistry()']:writes at the last depth:['3', '2']
['getLiquidityPool(uint256)']:writes at the last depth:[]
['getSmartToken(uint256)']:writes at the last depth:[]
['safeTransfer(address,address,uint256)']:writes at the last depth:[]
['getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['getSmartTokenCount()']:writes at the last depth:[]
['isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['safeApprove(address,address,uint256)']:writes at the last depth:[]
['isAnchor(address)']:writes at the last depth:[]
['isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['isLiquidityPool(address)']:writes at the last depth:[]
['getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)']:writes at the last depth:[]
['addConverter(address)']:writes at the last depth:[]
['isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)']:writes at the last depth:[]
['addConverter(address)']:writes at the last depth:[]
['removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)']:writes at the last depth:[]
['addConverter(address)']:writes at the last depth:[]
['removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:4
['removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:5
['removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:6
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:7
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:8
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:9
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:10
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:11
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:12
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:13
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:14
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'addConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:15
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:16
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartToken(address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:17
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isLiquidityPool(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:18
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransferFrom(address,address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:19
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isSimilarLiquidityPoolRegistered(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:20
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isAnchor(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:21
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeApprove(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:22
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'isConvertibleTokenAnchor(address,address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:23
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartTokenCount()', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:24
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getConvertibleTokenSmartTokenCount(address)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:25
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'safeTransfer(address,address,uint256)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:26
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'restoreRegistry()']:writes at the last depth:['2']
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isConvertibleToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getConvertibleTokenAnchorCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getConvertibleTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getAnchor(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isSmartToken(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getLiquidityPoolCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getConvertibleTokenAnchor(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isConverterValid(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getConvertibleToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isConvertibleTokenSmartToken(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getAnchorCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'updateRegistry()']:writes at the last depth:['3', '2']
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getLiquidityPool(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getSmartToken(uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'safeTransfer(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getConvertibleTokenSmartTokenCount(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getSmartTokenCount()']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isConvertibleTokenAnchor(address,address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'safeApprove(address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isAnchor(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'safeTransferFrom(address,address,address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isLiquidityPool(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'getConvertibleTokenSmartToken(address,uint256)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'isSimilarLiquidityPoolRegistered(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'removeConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'addConverter(address)']:writes at the last depth:[]
['removeConverter(address)', 'removeConverter(address)', 'getSmartToken(uint256)', 'removeConverter(address)']:writes at the last depth:[]
contract coverage: 75.05%
============================
iteration:27
['removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)', 'restrictRegistryUpdate(bool)']:writes at the last depth:['3']
['removeConverter(address)', 'removeConverter(address)', 'getLiquidityPool(uint256)', 'restoreRegistry()']:writes at the last depth:['2']
contract coverage: 75.05%
============================
iteration:28
contract coverage: 75.05%
============================
iteration:29
contract coverage: 75.05%
============================
iteration:30
contract coverage: 75.05%
============================
iteration:31
contract coverage: 75.05%
============================
iteration:32
contract coverage: 75.05%
============================
iteration:33
contract coverage: 75.05%
============================
iteration:34
contract coverage: 75.05%
============================
iteration:35
contract coverage: 75.05%
============================
iteration:36
contract coverage: 75.05%
============================
iteration:37
contract coverage: 75.05%
============================
iteration:38
contract coverage: 75.05%
============================
iteration:39
contract coverage: 75.05%
============================
iteration:40
contract coverage: 75.05%
============================
iteration:41
contract coverage: 75.05%
============================
iteration:42
contract coverage: 75.05%
============================
iteration:43
contract coverage: 75.05%
============================
iteration:44
contract coverage: 75.05%
============================
iteration:45
contract coverage: 75.05%
============================
iteration:46
contract coverage: 75.05%
============================
iteration:47
contract coverage: 75.05%
============================
iteration:48
contract coverage: 75.05%
============================
iteration:49
contract coverage: 75.05%
============================
iteration:50
contract coverage: 75.05%
============================
iteration:51
contract coverage: 75.05%
============================
iteration:52
contract coverage: 75.05%
============================
iteration:53
contract coverage: 75.05%
============================
iteration:54
contract coverage: 75.05%
============================
iteration:55
contract coverage: 75.05%
============================
iteration:56
contract coverage: 75.05%
============================
iteration:57
contract coverage: 75.05%
============================
iteration:58
contract coverage: 75.05%
============================
iteration:59
contract coverage: 75.05%
============================
iteration:60
contract coverage: 75.05%
============================
iteration:61
contract coverage: 75.05%
============================
iteration:62
contract coverage: 75.05%
============================
iteration:63
contract coverage: 75.05%
============================
iteration:64
contract coverage: 75.05%
============================
iteration:65
contract coverage: 75.05%
============================
iteration:66
contract coverage: 75.05%
============================
iteration:67
contract coverage: 75.05%
============================
iteration:68
contract coverage: 75.05%
============================
iteration:69
contract coverage: 75.05%
============================
iteration:70
contract coverage: 75.05%
============================
iteration:71
contract coverage: 75.05%
============================
iteration:72
contract coverage: 75.05%
============================
iteration:73
contract coverage: 75.05%
============================
iteration:74
contract coverage: 75.05%
============================
iteration:75
contract coverage: 75.05%
============================
iteration:76
contract coverage: 75.05%
============================
iteration:77
contract coverage: 75.05%
============================
iteration:78
contract coverage: 75.05%
============================
iteration:79
contract coverage: 75.05%
============================
iteration:80
contract coverage: 75.05%
============================
iteration:81
contract coverage: 75.05%
============================
iteration:82
contract coverage: 75.05%
============================
iteration:83
contract coverage: 75.05%
============================
iteration:84
contract coverage: 75.05%
============================
iteration:85
contract coverage: 75.05%
============================
iteration:86
contract coverage: 75.05%
============================
iteration:87
contract coverage: 75.05%
============================
iteration:88
contract coverage: 75.05%
============================
iteration:89
contract coverage: 75.05%
============================
iteration:90
contract coverage: 75.05%
============================
iteration:91
contract coverage: 75.05%
============================
iteration:92
contract coverage: 75.05%
============================
iteration:93
contract coverage: 75.05%
============================
iteration:94
contract coverage: 75.05%
============================
iteration:95
contract coverage: 75.05%
============================
iteration:96
contract coverage: 75.05%
============================
iteration:97
contract coverage: 75.05%
============================
iteration:98
contract coverage: 75.05%
============================
iteration:99
contract coverage: 75.05%
============================
iteration:100
contract coverage: 75.05%
============================
iteration:101
contract coverage: 75.05%
============================
iteration:102
contract coverage: 75.05%
============================
iteration:103
contract coverage: 75.05%
============================
iteration:104
contract coverage: 75.05%
============================
iteration:105
contract coverage: 75.05%
============================
iteration:106
contract coverage: 75.05%
============================
iteration:107
contract coverage: 75.05%
============================
iteration:108
contract coverage: 75.05%
============================
iteration:109
contract coverage: 75.05%
============================
iteration:110
contract coverage: 75.05%
============================
iteration:111
contract coverage: 75.05%
============================
iteration:112
contract coverage: 75.05%
============================
iteration:113
contract coverage: 75.05%
============================
iteration:114
contract coverage: 75.05%
============================
iteration:115
contract coverage: 75.05%
============================
iteration:116
contract coverage: 75.05%
============================
iteration:117
contract coverage: 75.05%
#@statespace
28116 nodes, 28115 edges, 451074 total states
#@coverage
Achieved 1.60% coverage for code: 60806040523480156200001157600080fd5b5060405160208062005a108339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508062000091816200011c640100000000026401000000009004565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620001c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4552525f494e56414c49445f414444524553530000000000000000000000000081525060200191505060405180910390fd5b50565b61583b80620001d56000396000f300608060405260043610610230576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063024c7ec71461023557806304ceaf411461026457806311839064146102d05780631d3fccd5146103685780631f8e26201461045f5780632fe8a6ad1461051a5780633ab8857c146105495780634123ef60146105a457806349c5f32b146105ff57806349d10b64146106565780634c7df18f1461066d5780635a0a6618146106da5780635f1b50fe1461087a578063603f51e4146108e6578063610c0b051461097357806361cd756e14610a2e57806369be478414610a855780636ce1c4dc14610ab0578063725b878614610af357806379ba509714610b6e5780637a5f0ffd14610b855780637b10399914610bb05780637f45c4c314610c07578063865cf19414610c735780638da5cb5b14610ce05780638f1d0e1a14610d37578063954254f514610d925780639e76a00714610ded578063a109d21414610e30578063a43d5e9414610e9d578063a74498aa14610ef4578063b4a176d314610f61578063b4c4197a14610f78578063c22b82f014610ff3578063d1660f99146110dc578063d3182bed14611149578063d4ee1d9014611174578063d6c4b5b2146111cb578063d8cced2a14611258578063d9fc4b61146112b3578063e571049b14611340578063e85455d71461136b578063eb5625d9146113c6578063effb3c6e14611433578063f2fde38b1461149f578063f4fb86c0146114e2575b600080fd5b34801561024157600080fd5b5061026260048036038101908080351515906020019092919050505061157a565b005b34801561027057600080fd5b5061027961159f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102bc5780820151818401526020810190506102a1565b505050509050019250505060405180910390f35b3480156102dc57600080fd5b50610311600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ae565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610354578082015181840152602081019050610339565b505050509050019250505060405180910390f35b34801561037457600080fd5b5061041d600480360381019080803561ffff169060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061170b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046b57600080fd5b506104c360048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611836565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105065780820151818401526020810190506104eb565b505050509050019250505060405180910390f35b34801561052657600080fd5b5061052f611848565b604051808215151515815260200191505060405180910390f35b34801561055557600080fd5b5061058a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061185b565b604051808215151515815260200191505060405180910390f35b3480156105b057600080fd5b506105e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611962565b604051808215151515815260200191505060405180910390f35b34801561060b57600080fd5b50610640600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611974565b6040518082815260200191505060405180910390f35b34801561066257600080fd5b5061066b611a7b565b005b34801561067957600080fd5b5061069860048036038101908080359060200190929190505050611ea0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106e657600080fd5b50610838600480360381019080803561ffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190803563ffffffff1690602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611f7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561088657600080fd5b5061088f6127cc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108d25780820151818401526020810190506108b7565b505050509050019250505060405180910390f35b3480156108f257600080fd5b50610931600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506128f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097f57600080fd5b506109d760048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050612a00565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a1a5780820151818401526020810190506109ff565b505050509050019250505060405180910390f35b348015610a3a57600080fd5b50610a43612b5d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9157600080fd5b50610a9a612b83565b6040518082815260200191505060405180910390f35b348015610abc57600080fd5b50610af1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c51565b005b348015610aff57600080fd5b50610b54600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ce2565b604051808215151515815260200191505060405180910390f35b348015610b7a57600080fd5b50610b83612cf6565b005b348015610b9157600080fd5b50610b9a612efe565b6040518082815260200191505060405180910390f35b348015610bbc57600080fd5b50610bc5612fcc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1357600080fd5b50610c1c612ff2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c5f578082015181840152602081019050610c44565b505050509050019250505060405180910390f35b348015610c7f57600080fd5b50610c9e60048036038101908080359060200190929190505050613116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610cec57600080fd5b50610cf56131f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d4357600080fd5b50610d78600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613216565b604051808215151515815260200191505060405180910390f35b348015610d9e57600080fd5b50610dd3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613552565b604051808215151515815260200191505060405180910390f35b348015610df957600080fd5b50610e2e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136c6565b005b348015610e3c57600080fd5b50610e5b600480360381019080803590602001909291905050506137a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ea957600080fd5b50610ede600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137b9565b6040518082815260200191505060405180910390f35b348015610f0057600080fd5b50610f1f600480360381019080803590602001909291905050506137cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f6d57600080fd5b50610f766138a6565b005b348015610f8457600080fd5b50610fd9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613913565b604051808215151515815260200191505060405180910390f35b348015610fff57600080fd5b5061109a6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050613a4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110e857600080fd5b50611147600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613a65565b005b34801561115557600080fd5b5061115e613b4b565b6040518082815260200191505060405180910390f35b34801561118057600080fd5b50611189613c19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156111d757600080fd5b50611216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561126457600080fd5b50611299600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613c53565b604051808215151515815260200191505060405180910390f35b3480156112bf57600080fd5b5061133e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613d5a565b005b34801561134c57600080fd5b50611355613e9b565b6040518082815260200191505060405180910390f35b34801561137757600080fd5b506113ac600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613eaa565b604051808215151515815260200191505060405180910390f35b3480156113d257600080fd5b50611431600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613fb1565b005b34801561143f57600080fd5b50611448614097565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561148b578082015181840152602081019050611470565b505050509050019250505060405180910390f35b3480156114ab57600080fd5b506114e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506141bb565b005b3480156114ee57600080fd5b50611523600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506142cc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561156657808201518184015260208101905061154b565b505050509050019250505060405180910390f35b6115826142de565b80600360146101000a81548160ff02191690831515021790555050565b60606115a9614097565b905090565b60606115d97f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663f4fb86c0836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561167357600080fd5b505af1158015611687573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156116b157600080fd5b8101908080516401000000008111156116c957600080fd5b828101905060208101848111156116df57600080fd5b81518560208202830111640100000000821117156116fc57600080fd5b50509291905050509050919050565b60006060600080600085518751148015611726575060018751115b156118265761173487614481565b9350600092505b835183101561182557838381518110151561175257fe5b9060200190602002015191508173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117c257600080fd5b505af11580156117d6573d6000803e3d6000fd5b505050506040513d60208110156117ec57600080fd5b8101908080519060200190929190505050905061180b81898989614812565b156118185781945061182b565b828060010193505061173b565b5b600094505b505050509392505050565b606061184182612a00565b9050919050565b600360149054906101000a900460ff1681565b60006118867f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16633ab8857c836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561192057600080fd5b505af1158015611934573d6000803e3d6000fd5b505050506040513d602081101561194a57600080fd5b81019080805190602001909291905050509050919050565b600061196d82613c53565b9050919050565b600061199f7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663a43d5e94836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611a3957600080fd5b505af1158015611a4d573d6000803e3d6000fd5b505050506040513d6020811015611a6357600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611ae55750600360149054906101000a900460ff16155b1515611b59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b611b827f436f6e74726163745265676973747279000000000000000000000000000000006143a4565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611c0f5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1515611c83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4552525f494e56414c49445f524547495354525900000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663bb34534c7f436f6e74726163745265676973747279000000000000000000000000000000006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611d3257600080fd5b505af1158015611d46573d6000803e3d6000fd5b505050506040513d6020811015611d5c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151515611df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4552525f494e56414c49445f524547495354525900000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611ecb7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663a109d214836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050506040513d6020811015611f6357600080fd5b81019080805190602001909291905050509050919050565b60008060008060008087519450865185141515612000576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4552525f494e56414c49445f524553455256455300000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166120238e8a8a61170b565b73ffffffffffffffffffffffffffffffffffffffff161415156120ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552525f414c52454144595f455849535453000000000000000000000000000081525060200191505060405180910390fd5b6120d77f436f6e766572746572466163746f7279000000000000000000000000000000006143a4565b93508373ffffffffffffffffffffffffffffffffffffffff16632e9ab7b38e8e8e8e6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808561ffff1661ffff16815260200180602001806020018460ff1660ff168152602001838103835286818151815260200191508051906020019080838360005b83811015612182578082015181840152602081019050612167565b50505050905090810190601f1680156121af5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156121e85780820151818401526020810190506121cd565b50505050905090810190601f1680156122155780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561223857600080fd5b505af115801561224c573d6000803e3d6000fd5b505050506040513d602081101561226257600080fd5b810190808051906020019092919050505092508373ffffffffffffffffffffffffffffffffffffffff166315f64b6a8e85600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808561ffff1661ffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff168152602001945050505050602060405180830381600087803b15801561238a57600080fd5b505af115801561239e573d6000803e3d6000fd5b505050506040513d60208110156123b457600080fd5b810190808051906020019092919050505091508273ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561242b57600080fd5b505af115801561243f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156124a757600080fd5b505af11580156124bb573d6000803e3d6000fd5b50505050600090505b848110156125ce578173ffffffffffffffffffffffffffffffffffffffff16636a49d2c489838151811015156124f657fe5b90602001906020020151898481518110151561250e57fe5b906020019060200201516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff16815260200192505050600060405180830381600087803b1580156125a957600080fd5b505af11580156125bd573d6000803e3d6000fd5b5050505080806001019150506124c4565b8273ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561266957600080fd5b505af115801561267d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663cdc91c696040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156126e557600080fd5b505af11580156126f9573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561279857600080fd5b505af11580156127ac573d6000803e3d6000fd5b505050506127b982614a00565b8195505050505050979650505050505050565b60606127f77f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16635f1b50fe6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561285a57600080fd5b505af115801561286e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561289857600080fd5b8101908080516401000000008111156128b057600080fd5b828101905060208101848111156128c657600080fd5b81518560208202830111640100000000821117156128e357600080fd5b5050929190505050905090565b600061291b7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663d6c4b5b284846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156129bd57600080fd5b505af11580156129d1573d6000803e3d6000fd5b505050506040513d60208110156129e757600080fd5b8101908080519060200190929190505050905092915050565b60608060008351604051908082528060200260200182016040528015612a355781602001602082028038833980820191505090505b509150600090505b8351811015612b53578381815181101515612a5457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612ac157600080fd5b505af1158015612ad5573d6000803e3d6000fd5b505050506040513d6020811015612aeb57600080fd5b81019080805190602001909291905050508282815181101515612b0a57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050612a3d565b8192505050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000612bae7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff166369be47846040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c1157600080fd5b505af1158015612c25573d6000803e3d6000fd5b505050506040513d6020811015612c3b57600080fd5b8101908080519060200190929190505050905090565b612c596142de565b612c6281613552565b1515612cd6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4552525f494e56414c49445f434f4e564552544552000000000000000000000081525060200191505060405180910390fd5b612cdf81614a00565b50565b6000612cee8383613913565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000612f297f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16637a5f0ffd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612f8c57600080fd5b505af1158015612fa0573d6000803e3d6000fd5b505050506040513d6020811015612fb657600080fd5b8101908080519060200190929190505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606061301d7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16637f45c4c36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561308057600080fd5b505af1158015613094573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156130be57600080fd5b8101908080516401000000008111156130d657600080fd5b828101905060208101848111156130ec57600080fd5b815185602082028301116401000000008211171561310957600080fd5b5050929190505050905090565b60006131417f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663865cf194836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156131af57600080fd5b505af11580156131c3573d6000803e3d6000fd5b505050506040513d60208110156131d957600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806060806000808673ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561328357600080fd5b505af1158015613297573d6000803e3d6000fd5b505050506040513d60208110156132ad57600080fd5b810190808051906020019092919050505061ffff169450846040519080825280602002602001820160405280156132f35781602001602082028038833980820191505090505b509350846040519080825280602002602001820160405280156133255781602001602082028038833980820191505090505b509250600091505b8482101561346d578673ffffffffffffffffffffffffffffffffffffffff166319b64015836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156133a457600080fd5b505af11580156133b8573d6000803e3d6000fd5b505050506040513d60208110156133ce57600080fd5b810190808051906020019092919050505090508084838151811015156133f057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506134368782614c7a565b838381518110151561344457fe5b9060200190602002019063ffffffff16908163ffffffff1681525050818060010192505061332d565b600073ffffffffffffffffffffffffffffffffffffffff1661352e8873ffffffffffffffffffffffffffffffffffffffff16633e8ff43f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156134ec57600080fd5b505af1158015613500573d6000803e3d6000fd5b505050506040513d602081101561351657600080fd5b8101908080519060200190929190505050868661170b565b73ffffffffffffffffffffffffffffffffffffffff16141595505050505050919050565b60008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156135cf57600080fd5b505af11580156135e3573d6000803e3d6000fd5b505050506040513d60208110156135f957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561366d57600080fd5b505af1158015613681573d6000803e3d6000fd5b505050506040513d602081101561369757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480613727575061372581613552565b155b151561379b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b6137a481614d8f565b50565b60006137b282611ea0565b9050919050565b60006137c482611974565b9050919050565b60006137f67f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663a74498aa836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561386457600080fd5b505af1158015613878573d6000803e3d6000fd5b505050506040513d602081101561388e57600080fd5b81019080805190602001909291905050509050919050565b6138ae6142de565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061393e7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663725b878684846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b158015613a0c57600080fd5b505af1158015613a20573d6000803e3d6000fd5b505050506040513d6020811015613a3657600080fd5b8101908080519060200190929190505050905092915050565b6000613a5d6001848461170b565b905092915050565b613b468360405180807f7472616e7366657228616464726573732c75696e743235362900000000000000815250601901905060405180910390208484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050615009565b505050565b6000613b767f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663e571049b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613bd957600080fd5b505af1158015613bed573d6000803e3d6000fd5b505050506040513d6020811015613c0357600080fd5b8101908080519060200190929190505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000613c4b83836128f0565b905092915050565b6000613c7e7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16634123ef60836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015613d1857600080fd5b505af1158015613d2c573d6000803e3d6000fd5b505050506040513d6020811015613d4257600080fd5b81019080805190602001909291905050509050919050565b613e958460405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f743235362900000000000000000000000000000000000000000000000000000081525060250190506040518091039020858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050615009565b50505050565b6000613ea5613b4b565b905090565b6000613ed57f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663e85455d7836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015613f6f57600080fd5b505af1158015613f83573d6000803e3d6000fd5b505050506040513d6020811015613f9957600080fd5b81019080805190602001909291905050509050919050565b6140928360405180807f617070726f766528616464726573732c75696e74323536290000000000000000815250601801905060405180910390208484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050615009565b505050565b60606140c27f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff166304ceaf416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561412557600080fd5b505af1158015614139573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561416357600080fd5b81019080805164010000000081111561417b57600080fd5b8281019050602081018481111561419157600080fd5b81518560208202830111640100000000821117156141ae57600080fd5b5050929190505050905090565b6141c36142de565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515614288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4552525f53414d455f4f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606142d7826115ae565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156143a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb34534c836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561443f57600080fd5b505af1158015614453573d6000803e3d6000fd5b505050506040513d602081101561446957600080fd5b81019080805190602001909291905050509050919050565b606060008060008060006144b47f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b94508473ffffffffffffffffffffffffffffffffffffffff1663a43d5e948860008151811015156144e157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561456957600080fd5b505af115801561457d573d6000803e3d6000fd5b505050506040513d602081101561459357600080fd5b8101908080519060200190929190505050935060009250600191505b86518210156146c3578473ffffffffffffffffffffffffffffffffffffffff1663a43d5e9488848151811015156145e257fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561466a57600080fd5b505af115801561467e573d6000803e3d6000fd5b505050506040513d602081101561469457600080fd5b81019080805190602001909291905050509050808411156146b6578093508192505b81806001019250506145af565b8473ffffffffffffffffffffffffffffffffffffffff1663f4fb86c088858151811015156146ed57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561477557600080fd5b505af1158015614789573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156147b357600080fd5b8101908080516401000000008111156147cb57600080fd5b828101905060208101848111156147e157600080fd5b81518560208202830111640100000000821117156147fe57600080fd5b505092919050505095505050505050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff16633e8ff43f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561487957600080fd5b505af115801561488d573d6000803e3d6000fd5b505050506040513d60208110156148a357600080fd5b810190808051906020019092919050505061ffff168561ffff161415156148cd57600091506149f7565b8573ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561493157600080fd5b505af1158015614945573d6000803e3d6000fd5b505050506040513d602081101561495b57600080fd5b810190808051906020019092919050505061ffff16845114151561498257600091506149f7565b600090505b83518110156149f2576149b18685838151811015156149a257fe5b90602001906020020151614c7a565b63ffffffff1683828151811015156149c557fe5b9060200190602002015163ffffffff161415156149e557600091506149f7565b8080600101915050614987565b600191505b50949350505050565b600080600080614a2f7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b93508473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614a9557600080fd5b505af1158015614aa9573d6000803e3d6000fd5b505050506040513d6020811015614abf57600080fd5b810190808051906020019092919050505092508473ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614b3657600080fd5b505af1158015614b4a573d6000803e3d6000fd5b505050506040513d6020811015614b6057600080fd5b810190808051906020019092919050505061ffff169150614b8184846150d0565b6001821115614b9957614b94848461520d565b614ba5565b614ba4848485615307565b5b600090505b81811015614c7357614c66848673ffffffffffffffffffffffffffffffffffffffff166319b64015846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015614c2557600080fd5b505af1158015614c39573d6000803e3d6000fd5b505050506040513d6020811015614c4f57600080fd5b810190808051906020019092919050505085615307565b8080600101915050614baa565b5050505050565b6000614c846157ca565b606060405180807f636f6e6e6563746f7273286164647265737329000000000000000000000000008152506013019050604051809103902084604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050604082825160208401885afa801515614d7057600080fd5b50816001600281101515614d8057fe5b60200201519250505092915050565b600080600080614dbe7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b93508473ffffffffffffffffffffffffffffffffffffffff1663d3fb73b46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614e2457600080fd5b505af1158015614e38573d6000803e3d6000fd5b505050506040513d6020811015614e4e57600080fd5b810190808051906020019092919050505092508473ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614ec557600080fd5b505af1158015614ed9573d6000803e3d6000fd5b505050506040513d6020811015614eef57600080fd5b810190808051906020019092919050505061ffff169150614f10848461544d565b6001821115614f2857614f23848461558a565b614f34565b614f33848485615684565b5b600090505b8181101561500257614ff5848673ffffffffffffffffffffffffffffffffffffffff166319b64015846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015614fb457600080fd5b505af1158015614fc8573d6000803e3d6000fd5b505050506040513d6020811015614fde57600080fd5b810190808051906020019092919050505085615684565b8080600101915050614f39565b5050505050565b6150116157ec565b602060405190810160405280600181525090506020818351602085016000875af180151561503e57600080fd5b50600081600060018110151561505057fe5b6020020151141515156150cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4552525f5452414e534645525f4641494c45440000000000000000000000000081525060200191505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff16638de6c3eb826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561516b57600080fd5b505af115801561517f573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fc0a6d303d67b7ed9fa0abae1c48878df32acc0e7ca4334c7dad2bceeee5956fd60405160405180910390a28073ffffffffffffffffffffffffffffffffffffffff167f88881feecdf61136ac4bdb1f681f2f3746a82910263d21ffea94750d2a78c0ab60405160405180910390a25050565b8173ffffffffffffffffffffffffffffffffffffffff1663ee6a934c826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156152a857600080fd5b505af11580156152bc573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fb893f883ef734b712208a877459424ee509832c57e0461fb1ac99ed4d42f2d8960405160405180910390a25050565b8273ffffffffffffffffffffffffffffffffffffffff166336900c1183836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156153d657600080fd5b505af11580156153ea573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167ff2e7cf6d6ed3f77039511409a43d4fa5108f09ab71d72b014380364c910233a560405160405180910390a3505050565b8173ffffffffffffffffffffffffffffffffffffffff1663ceb9838c826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156154e857600080fd5b505af11580156154fc573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fbfdf1baaa7e4871111360083540f067050014f651c9e4610a2a4a4bdf8bfab5d60405160405180910390a28073ffffffffffffffffffffffffffffffffffffffff167f2aff63790c7da80d1c50ede92d23bc841c384837735c92c184331f3d7b91e5bf60405160405180910390a25050565b8173ffffffffffffffffffffffffffffffffffffffff1663ae22107f826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561562557600080fd5b505af1158015615639573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167f59c3fbcae88f30e9b0e35c132a7f68c53231dffa4722f197c7ecb0ee013eee6060405160405180910390a25050565b8273ffffffffffffffffffffffffffffffffffffffff1663fba8f03183836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561575357600080fd5b505af1158015615767573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9430ad6ff45d6c3e126c7711bf0036bd9bc6b202fa19628abd88e59cf43ced4360405160405180910390a3505050565b6040805190810160405280600290602082028038833980820191505090505090565b6020604051908101604052806001906020820280388339808201915050905050905600a165627a7a72305820326a18dba5db4ce4ee494f0072755f90482848a3d36be8fdf73c1a597cd58fcd0029
#@coverage
Achieved 75.05% coverage for code: 608060405260043610610230576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063024c7ec71461023557806304ceaf411461026457806311839064146102d05780631d3fccd5146103685780631f8e26201461045f5780632fe8a6ad1461051a5780633ab8857c146105495780634123ef60146105a457806349c5f32b146105ff57806349d10b64146106565780634c7df18f1461066d5780635a0a6618146106da5780635f1b50fe1461087a578063603f51e4146108e6578063610c0b051461097357806361cd756e14610a2e57806369be478414610a855780636ce1c4dc14610ab0578063725b878614610af357806379ba509714610b6e5780637a5f0ffd14610b855780637b10399914610bb05780637f45c4c314610c07578063865cf19414610c735780638da5cb5b14610ce05780638f1d0e1a14610d37578063954254f514610d925780639e76a00714610ded578063a109d21414610e30578063a43d5e9414610e9d578063a74498aa14610ef4578063b4a176d314610f61578063b4c4197a14610f78578063c22b82f014610ff3578063d1660f99146110dc578063d3182bed14611149578063d4ee1d9014611174578063d6c4b5b2146111cb578063d8cced2a14611258578063d9fc4b61146112b3578063e571049b14611340578063e85455d71461136b578063eb5625d9146113c6578063effb3c6e14611433578063f2fde38b1461149f578063f4fb86c0146114e2575b600080fd5b34801561024157600080fd5b5061026260048036038101908080351515906020019092919050505061157a565b005b34801561027057600080fd5b5061027961159f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102bc5780820151818401526020810190506102a1565b505050509050019250505060405180910390f35b3480156102dc57600080fd5b50610311600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115ae565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610354578082015181840152602081019050610339565b505050509050019250505060405180910390f35b34801561037457600080fd5b5061041d600480360381019080803561ffff169060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061170b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046b57600080fd5b506104c360048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611836565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105065780820151818401526020810190506104eb565b505050509050019250505060405180910390f35b34801561052657600080fd5b5061052f611848565b604051808215151515815260200191505060405180910390f35b34801561055557600080fd5b5061058a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061185b565b604051808215151515815260200191505060405180910390f35b3480156105b057600080fd5b506105e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611962565b604051808215151515815260200191505060405180910390f35b34801561060b57600080fd5b50610640600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611974565b6040518082815260200191505060405180910390f35b34801561066257600080fd5b5061066b611a7b565b005b34801561067957600080fd5b5061069860048036038101908080359060200190929190505050611ea0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106e657600080fd5b50610838600480360381019080803561ffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803560ff169060200190929190803563ffffffff1690602001909291908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611f7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561088657600080fd5b5061088f6127cc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108d25780820151818401526020810190506108b7565b505050509050019250505060405180910390f35b3480156108f257600080fd5b50610931600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506128f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561097f57600080fd5b506109d760048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050612a00565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a1a5780820151818401526020810190506109ff565b505050509050019250505060405180910390f35b348015610a3a57600080fd5b50610a43612b5d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9157600080fd5b50610a9a612b83565b6040518082815260200191505060405180910390f35b348015610abc57600080fd5b50610af1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c51565b005b348015610aff57600080fd5b50610b54600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ce2565b604051808215151515815260200191505060405180910390f35b348015610b7a57600080fd5b50610b83612cf6565b005b348015610b9157600080fd5b50610b9a612efe565b6040518082815260200191505060405180910390f35b348015610bbc57600080fd5b50610bc5612fcc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1357600080fd5b50610c1c612ff2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c5f578082015181840152602081019050610c44565b505050509050019250505060405180910390f35b348015610c7f57600080fd5b50610c9e60048036038101908080359060200190929190505050613116565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610cec57600080fd5b50610cf56131f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d4357600080fd5b50610d78600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613216565b604051808215151515815260200191505060405180910390f35b348015610d9e57600080fd5b50610dd3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613552565b604051808215151515815260200191505060405180910390f35b348015610df957600080fd5b50610e2e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136c6565b005b348015610e3c57600080fd5b50610e5b600480360381019080803590602001909291905050506137a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ea957600080fd5b50610ede600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137b9565b6040518082815260200191505060405180910390f35b348015610f0057600080fd5b50610f1f600480360381019080803590602001909291905050506137cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f6d57600080fd5b50610f766138a6565b005b348015610f8457600080fd5b50610fd9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613913565b604051808215151515815260200191505060405180910390f35b348015610fff57600080fd5b5061109a6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050613a4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110e857600080fd5b50611147600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613a65565b005b34801561115557600080fd5b5061115e613b4b565b6040518082815260200191505060405180910390f35b34801561118057600080fd5b50611189613c19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156111d757600080fd5b50611216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561126457600080fd5b50611299600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613c53565b604051808215151515815260200191505060405180910390f35b3480156112bf57600080fd5b5061133e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613d5a565b005b34801561134c57600080fd5b50611355613e9b565b6040518082815260200191505060405180910390f35b34801561137757600080fd5b506113ac600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613eaa565b604051808215151515815260200191505060405180910390f35b3480156113d257600080fd5b50611431600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613fb1565b005b34801561143f57600080fd5b50611448614097565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561148b578082015181840152602081019050611470565b505050509050019250505060405180910390f35b3480156114ab57600080fd5b506114e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506141bb565b005b3480156114ee57600080fd5b50611523600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506142cc565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561156657808201518184015260208101905061154b565b505050509050019250505060405180910390f35b6115826142de565b80600360146101000a81548160ff02191690831515021790555050565b60606115a9614097565b905090565b60606115d97f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663f4fb86c0836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561167357600080fd5b505af1158015611687573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156116b157600080fd5b8101908080516401000000008111156116c957600080fd5b828101905060208101848111156116df57600080fd5b81518560208202830111640100000000821117156116fc57600080fd5b50509291905050509050919050565b60006060600080600085518751148015611726575060018751115b156118265761173487614481565b9350600092505b835183101561182557838381518110151561175257fe5b9060200190602002015191508173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117c257600080fd5b505af11580156117d6573d6000803e3d6000fd5b505050506040513d60208110156117ec57600080fd5b8101908080519060200190929190505050905061180b81898989614812565b156118185781945061182b565b828060010193505061173b565b5b600094505b505050509392505050565b606061184182612a00565b9050919050565b600360149054906101000a900460ff1681565b60006118867f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16633ab8857c836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561192057600080fd5b505af1158015611934573d6000803e3d6000fd5b505050506040513d602081101561194a57600080fd5b81019080805190602001909291905050509050919050565b600061196d82613c53565b9050919050565b600061199f7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663a43d5e94836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611a3957600080fd5b505af1158015611a4d573d6000803e3d6000fd5b505050506040513d6020811015611a6357600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611ae55750600360149054906101000a900460ff16155b1515611b59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b611b827f436f6e74726163745265676973747279000000000000000000000000000000006143a4565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611c0f5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1515611c83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4552525f494e56414c49445f524547495354525900000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663bb34534c7f436f6e74726163745265676973747279000000000000000000000000000000006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611d3257600080fd5b505af1158015611d46573d6000803e3d6000fd5b505050506040513d6020811015611d5c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151515611df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4552525f494e56414c49445f524547495354525900000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611ecb7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663a109d214836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015611f3957600080fd5b505af1158015611f4d573d6000803e3d6000fd5b505050506040513d6020811015611f6357600080fd5b81019080805190602001909291905050509050919050565b60008060008060008087519450865185141515612000576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4552525f494e56414c49445f524553455256455300000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166120238e8a8a61170b565b73ffffffffffffffffffffffffffffffffffffffff161415156120ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4552525f414c52454144595f455849535453000000000000000000000000000081525060200191505060405180910390fd5b6120d77f436f6e766572746572466163746f7279000000000000000000000000000000006143a4565b93508373ffffffffffffffffffffffffffffffffffffffff16632e9ab7b38e8e8e8e6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808561ffff1661ffff16815260200180602001806020018460ff1660ff168152602001838103835286818151815260200191508051906020019080838360005b83811015612182578082015181840152602081019050612167565b50505050905090810190601f1680156121af5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156121e85780820151818401526020810190506121cd565b50505050905090810190601f1680156122155780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561223857600080fd5b505af115801561224c573d6000803e3d6000fd5b505050506040513d602081101561226257600080fd5b810190808051906020019092919050505092508373ffffffffffffffffffffffffffffffffffffffff166315f64b6a8e85600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808561ffff1661ffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff168152602001945050505050602060405180830381600087803b15801561238a57600080fd5b505af115801561239e573d6000803e3d6000fd5b505050506040513d60208110156123b457600080fd5b810190808051906020019092919050505091508273ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561242b57600080fd5b505af115801561243f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff166379ba50976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156124a757600080fd5b505af11580156124bb573d6000803e3d6000fd5b50505050600090505b848110156125ce578173ffffffffffffffffffffffffffffffffffffffff16636a49d2c489838151811015156124f657fe5b90602001906020020151898481518110151561250e57fe5b906020019060200201516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff16815260200192505050600060405180830381600087803b1580156125a957600080fd5b505af11580156125bd573d6000803e3d6000fd5b5050505080806001019150506124c4565b8273ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561266957600080fd5b505af115801561267d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663cdc91c696040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156126e557600080fd5b505af11580156126f9573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561279857600080fd5b505af11580156127ac573d6000803e3d6000fd5b505050506127b982614a00565b8195505050505050979650505050505050565b60606127f77f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16635f1b50fe6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561285a57600080fd5b505af115801561286e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561289857600080fd5b8101908080516401000000008111156128b057600080fd5b828101905060208101848111156128c657600080fd5b81518560208202830111640100000000821117156128e357600080fd5b5050929190505050905090565b600061291b7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663d6c4b5b284846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156129bd57600080fd5b505af11580156129d1573d6000803e3d6000fd5b505050506040513d60208110156129e757600080fd5b8101908080519060200190929190505050905092915050565b60608060008351604051908082528060200260200182016040528015612a355781602001602082028038833980820191505090505b509150600090505b8351811015612b53578381815181101515612a5457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612ac157600080fd5b505af1158015612ad5573d6000803e3d6000fd5b505050506040513d6020811015612aeb57600080fd5b81019080805190602001909291905050508282815181101515612b0a57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050612a3d565b8192505050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000612bae7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff166369be47846040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c1157600080fd5b505af1158015612c25573d6000803e3d6000fd5b505050506040513d6020811015612c3b57600080fd5b8101908080519060200190929190505050905090565b612c596142de565b612c6281613552565b1515612cd6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4552525f494e56414c49445f434f4e564552544552000000000000000000000081525060200191505060405180910390fd5b612cdf81614a00565b50565b6000612cee8383613913565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000612f297f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16637a5f0ffd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612f8c57600080fd5b505af1158015612fa0573d6000803e3d6000fd5b505050506040513d6020811015612fb657600080fd5b8101908080519060200190929190505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606061301d7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16637f45c4c36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561308057600080fd5b505af1158015613094573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156130be57600080fd5b8101908080516401000000008111156130d657600080fd5b828101905060208101848111156130ec57600080fd5b815185602082028301116401000000008211171561310957600080fd5b5050929190505050905090565b60006131417f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663865cf194836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156131af57600080fd5b505af11580156131c3573d6000803e3d6000fd5b505050506040513d60208110156131d957600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806060806000808673ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561328357600080fd5b505af1158015613297573d6000803e3d6000fd5b505050506040513d60208110156132ad57600080fd5b810190808051906020019092919050505061ffff169450846040519080825280602002602001820160405280156132f35781602001602082028038833980820191505090505b509350846040519080825280602002602001820160405280156133255781602001602082028038833980820191505090505b509250600091505b8482101561346d578673ffffffffffffffffffffffffffffffffffffffff166319b64015836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156133a457600080fd5b505af11580156133b8573d6000803e3d6000fd5b505050506040513d60208110156133ce57600080fd5b810190808051906020019092919050505090508084838151811015156133f057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506134368782614c7a565b838381518110151561344457fe5b9060200190602002019063ffffffff16908163ffffffff1681525050818060010192505061332d565b600073ffffffffffffffffffffffffffffffffffffffff1661352e8873ffffffffffffffffffffffffffffffffffffffff16633e8ff43f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156134ec57600080fd5b505af1158015613500573d6000803e3d6000fd5b505050506040513d602081101561351657600080fd5b8101908080519060200190929190505050868661170b565b73ffffffffffffffffffffffffffffffffffffffff16141595505050505050919050565b60008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156135cf57600080fd5b505af11580156135e3573d6000803e3d6000fd5b505050506040513d60208110156135f957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561366d57600080fd5b505af1158015613681573d6000803e3d6000fd5b505050506040513d602081101561369757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480613727575061372581613552565b155b151561379b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b6137a481614d8f565b50565b60006137b282611ea0565b9050919050565b60006137c482611974565b9050919050565b60006137f67f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663a74498aa836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561386457600080fd5b505af1158015613878573d6000803e3d6000fd5b505050506040513d602081101561388e57600080fd5b81019080805190602001909291905050509050919050565b6138ae6142de565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061393e7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663725b878684846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b158015613a0c57600080fd5b505af1158015613a20573d6000803e3d6000fd5b505050506040513d6020811015613a3657600080fd5b8101908080519060200190929190505050905092915050565b6000613a5d6001848461170b565b905092915050565b613b468360405180807f7472616e7366657228616464726573732c75696e743235362900000000000000815250601901905060405180910390208484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050615009565b505050565b6000613b767f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663e571049b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613bd957600080fd5b505af1158015613bed573d6000803e3d6000fd5b505050506040513d6020811015613c0357600080fd5b8101908080519060200190929190505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000613c4b83836128f0565b905092915050565b6000613c7e7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff16634123ef60836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015613d1857600080fd5b505af1158015613d2c573d6000803e3d6000fd5b505050506040513d6020811015613d4257600080fd5b81019080805190602001909291905050509050919050565b613e958460405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f743235362900000000000000000000000000000000000000000000000000000081525060250190506040518091039020858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050615009565b50505050565b6000613ea5613b4b565b905090565b6000613ed57f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff1663e85455d7836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015613f6f57600080fd5b505af1158015613f83573d6000803e3d6000fd5b505050506040513d6020811015613f9957600080fd5b81019080805190602001909291905050509050919050565b6140928360405180807f617070726f766528616464726573732c75696e74323536290000000000000000815250601801905060405180910390208484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050615009565b505050565b60606140c27f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b73ffffffffffffffffffffffffffffffffffffffff166304ceaf416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561412557600080fd5b505af1158015614139573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561416357600080fd5b81019080805164010000000081111561417b57600080fd5b8281019050602081018481111561419157600080fd5b81518560208202830111640100000000821117156141ae57600080fd5b5050929190505050905090565b6141c36142de565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515614288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4552525f53414d455f4f574e455200000000000000000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606142d7826115ae565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156143a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552525f4143434553535f44454e49454400000000000000000000000000000081525060200191505060405180910390fd5b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb34534c836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561443f57600080fd5b505af1158015614453573d6000803e3d6000fd5b505050506040513d602081101561446957600080fd5b81019080805190602001909291905050509050919050565b606060008060008060006144b47f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b94508473ffffffffffffffffffffffffffffffffffffffff1663a43d5e948860008151811015156144e157fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561456957600080fd5b505af115801561457d573d6000803e3d6000fd5b505050506040513d602081101561459357600080fd5b8101908080519060200190929190505050935060009250600191505b86518210156146c3578473ffffffffffffffffffffffffffffffffffffffff1663a43d5e9488848151811015156145e257fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561466a57600080fd5b505af115801561467e573d6000803e3d6000fd5b505050506040513d602081101561469457600080fd5b81019080805190602001909291905050509050808411156146b6578093508192505b81806001019250506145af565b8473ffffffffffffffffffffffffffffffffffffffff1663f4fb86c088858151811015156146ed57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561477557600080fd5b505af1158015614789573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156147b357600080fd5b8101908080516401000000008111156147cb57600080fd5b828101905060208101848111156147e157600080fd5b81518560208202830111640100000000821117156147fe57600080fd5b505092919050505095505050505050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff16633e8ff43f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561487957600080fd5b505af115801561488d573d6000803e3d6000fd5b505050506040513d60208110156148a357600080fd5b810190808051906020019092919050505061ffff168561ffff161415156148cd57600091506149f7565b8573ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561493157600080fd5b505af1158015614945573d6000803e3d6000fd5b505050506040513d602081101561495b57600080fd5b810190808051906020019092919050505061ffff16845114151561498257600091506149f7565b600090505b83518110156149f2576149b18685838151811015156149a257fe5b90602001906020020151614c7a565b63ffffffff1683828151811015156149c557fe5b9060200190602002015163ffffffff161415156149e557600091506149f7565b8080600101915050614987565b600191505b50949350505050565b600080600080614a2f7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b93508473ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614a9557600080fd5b505af1158015614aa9573d6000803e3d6000fd5b505050506040513d6020811015614abf57600080fd5b810190808051906020019092919050505092508473ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614b3657600080fd5b505af1158015614b4a573d6000803e3d6000fd5b505050506040513d6020811015614b6057600080fd5b810190808051906020019092919050505061ffff169150614b8184846150d0565b6001821115614b9957614b94848461520d565b614ba5565b614ba4848485615307565b5b600090505b81811015614c7357614c66848673ffffffffffffffffffffffffffffffffffffffff166319b64015846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015614c2557600080fd5b505af1158015614c39573d6000803e3d6000fd5b505050506040513d6020811015614c4f57600080fd5b810190808051906020019092919050505085615307565b8080600101915050614baa565b5050505050565b6000614c846157ca565b606060405180807f636f6e6e6563746f7273286164647265737329000000000000000000000000008152506013019050604051809103902084604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050604082825160208401885afa801515614d7057600080fd5b50816001600281101515614d8057fe5b60200201519250505092915050565b600080600080614dbe7f42616e636f72436f6e76657274657252656769737472794461746100000000006143a4565b93508473ffffffffffffffffffffffffffffffffffffffff1663d3fb73b46040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614e2457600080fd5b505af1158015614e38573d6000803e3d6000fd5b505050506040513d6020811015614e4e57600080fd5b810190808051906020019092919050505092508473ffffffffffffffffffffffffffffffffffffffff166371f52bf36040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614ec557600080fd5b505af1158015614ed9573d6000803e3d6000fd5b505050506040513d6020811015614eef57600080fd5b810190808051906020019092919050505061ffff169150614f10848461544d565b6001821115614f2857614f23848461558a565b614f34565b614f33848485615684565b5b600090505b8181101561500257614ff5848673ffffffffffffffffffffffffffffffffffffffff166319b64015846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015614fb457600080fd5b505af1158015614fc8573d6000803e3d6000fd5b505050506040513d6020811015614fde57600080fd5b810190808051906020019092919050505085615684565b8080600101915050614f39565b5050505050565b6150116157ec565b602060405190810160405280600181525090506020818351602085016000875af180151561503e57600080fd5b50600081600060018110151561505057fe5b6020020151141515156150cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4552525f5452414e534645525f4641494c45440000000000000000000000000081525060200191505060405180910390fd5b505050565b8173ffffffffffffffffffffffffffffffffffffffff16638de6c3eb826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561516b57600080fd5b505af115801561517f573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fc0a6d303d67b7ed9fa0abae1c48878df32acc0e7ca4334c7dad2bceeee5956fd60405160405180910390a28073ffffffffffffffffffffffffffffffffffffffff167f88881feecdf61136ac4bdb1f681f2f3746a82910263d21ffea94750d2a78c0ab60405160405180910390a25050565b8173ffffffffffffffffffffffffffffffffffffffff1663ee6a934c826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156152a857600080fd5b505af11580156152bc573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fb893f883ef734b712208a877459424ee509832c57e0461fb1ac99ed4d42f2d8960405160405180910390a25050565b8273ffffffffffffffffffffffffffffffffffffffff166336900c1183836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156153d657600080fd5b505af11580156153ea573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167ff2e7cf6d6ed3f77039511409a43d4fa5108f09ab71d72b014380364c910233a560405160405180910390a3505050565b8173ffffffffffffffffffffffffffffffffffffffff1663ceb9838c826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156154e857600080fd5b505af11580156154fc573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fbfdf1baaa7e4871111360083540f067050014f651c9e4610a2a4a4bdf8bfab5d60405160405180910390a28073ffffffffffffffffffffffffffffffffffffffff167f2aff63790c7da80d1c50ede92d23bc841c384837735c92c184331f3d7b91e5bf60405160405180910390a25050565b8173ffffffffffffffffffffffffffffffffffffffff1663ae22107f826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561562557600080fd5b505af1158015615639573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167f59c3fbcae88f30e9b0e35c132a7f68c53231dffa4722f197c7ecb0ee013eee6060405160405180910390a25050565b8273ffffffffffffffffffffffffffffffffffffffff1663fba8f03183836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561575357600080fd5b505af1158015615767573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9430ad6ff45d6c3e126c7711bf0036bd9bc6b202fa19628abd88e59cf43ced4360405160405180910390a3505050565b6040805190810160405280600290602082028038833980820191505090505090565b6020604051908101604052806001906020820280388339808201915050905050905600a165627a7a72305820326a18dba5db4ce4ee494f0072755f90482848a3d36be8fdf73c1a597cd58fcd0029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ConverterRegistry
Function name: getLiquidityPoolByConfig(uint16,address[],uint32[])
PC address: 920
Estimated Gas Usage: 802 - 6538
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:598

function getLiquidityPoolByConfig(uint16 _type, IERC20Token[] memory _reserveTokens, uint32[] memory _reserveWeights) public view returns (IConverterAnchor) {
        
        if (_reserveTokens.length == _reserveWeights.length && _reserveTokens.length > 1) {
            
            address[] memory convertibleTokenAnchors = getLeastFrequentTokenAnchors(_reserveTokens);
            
            for (uint256 i = 0; i < convertibleTokenAnchors.length; i++) {
                IConverterAnchor anchor = IConverterAnchor(convertibleTokenAnchors[i]);
                IConverter converter = IConverter(anchor.owner());
                if (isConverterReserveConfigEqual(converter, _type, _reserveTokens, _reserveWeights))
                    return anchor;
            }
        }

        return IConverterAnchor(0);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPoolByConfig(uint16,address[],uint32[]), txdata: 0x1d3fccd50000000100030000000100000900010041000100000000000000001000000001fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ConverterRegistry
Function name: getLiquidityPoolByConfig(uint16,address[],uint32[])
PC address: 987
Estimated Gas Usage: 802 - 6538
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:598

function getLiquidityPoolByConfig(uint16 _type, IERC20Token[] memory _reserveTokens, uint32[] memory _reserveWeights) public view returns (IConverterAnchor) {
        
        if (_reserveTokens.length == _reserveWeights.length && _reserveTokens.length > 1) {
            
            address[] memory convertibleTokenAnchors = getLeastFrequentTokenAnchors(_reserveTokens);
            
            for (uint256 i = 0; i < convertibleTokenAnchors.length; i++) {
                IConverterAnchor anchor = IConverterAnchor(convertibleTokenAnchors[i]);
                IConverter converter = IConverter(anchor.owner());
                if (isConverterReserveConfigEqual(converter, _type, _reserveTokens, _reserveWeights))
                    return anchor;
            }
        }

        return IConverterAnchor(0);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPoolByConfig(uint16,address[],uint32[]), txdata: 0x1d3fccd50101010101010101011001010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000002000000001006bfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ConverterRegistry
Function name: getLiquidityPoolByReserveConfig(address[],uint32[])
PC address: 4117
Estimated Gas Usage: 1480 - 7216
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:791

function getLiquidityPoolByReserveConfig(IERC20Token[] memory _reserveTokens, uint32[] memory _reserveWeights) public view returns (IConverterAnchor) {
        return getLiquidityPoolByConfig(1, _reserveTokens, _reserveWeights);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPoolByReserveConfig(address[],uint32[]), txdata: 0xc22b82f0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ConverterRegistry
Function name: getLiquidityPoolByReserveConfig(address[],uint32[])
PC address: 4184
Estimated Gas Usage: 1480 - 7216
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:791

function getLiquidityPoolByReserveConfig(IERC20Token[] memory _reserveTokens, uint32[] memory _reserveWeights) public view returns (IConverterAnchor) {
        return getLiquidityPoolByConfig(1, _reserveTokens, _reserveWeights);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000002, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPoolByReserveConfig(address[],uint32[]), txdata: 0xc22b82f0094c02e28fae7ffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleToken(address)
PC address: 6435
Estimated Gas Usage: 4603 - 74433
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:541

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isConvertibleToken(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: isConvertibleToken(address), txdata: 0x3ab8857c, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleToken(address)
PC address: 6435
Estimated Gas Usage: 4603 - 74433
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:541

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isConvertibleToken(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConvertibleToken(address), txdata: 0x3ab8857c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenAnchorCount(address)
PC address: 6716
Estimated Gas Usage: 4635 - 74465
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:546

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleTokenSmartTokenCount(_convertibleToken)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenAnchorCount(address), txdata: 0x49c5f32b, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenAnchorCount(address)
PC address: 6716
Estimated Gas Usage: 4635 - 74465
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:546

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleTokenSmartTokenCount(_convertibleToken)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenAnchorCount(address), txdata: 0x49c5f32b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7050
Estimated Gas Usage: 19823 - 131352
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:226

registry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7477
Estimated Gas Usage: 19823 - 131352
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:229

newRegistry.addressOf(CONTRACT_REGISTRY)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7477
Estimated Gas Usage: 19823 - 131352
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:229

newRegistry.addressOf(CONTRACT_REGISTRY)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000002, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7477
Estimated Gas Usage: 19823 - 131352
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:229

newRegistry.addressOf(CONTRACT_REGISTRY)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7679
Estimated Gas Usage: 19823 - 131352
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:232

registry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7718
Estimated Gas Usage: 19823 - 131352
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:232

prevRegistry = registry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7771
Estimated Gas Usage: 19823 - 131352
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:232

prevRegistry = registry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7783
Estimated Gas Usage: 19823 - 131352
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:235

registry = newRegistry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 7836
Estimated Gas Usage: 19823 - 131352
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:235

registry = newRegistry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getAnchor(uint256)
PC address: 7996
Estimated Gas Usage: 4673 - 74503
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:496

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getSmartToken(_index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getAnchor(uint256), txdata: 0x4c7df18f, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getAnchor(uint256)
PC address: 7996
Estimated Gas Usage: 4673 - 74503
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:496

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getSmartToken(_index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getAnchor(uint256), txdata: 0x4c7df18f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenAnchor(address,uint256)
PC address: 10688
Estimated Gas Usage: 4809 - 74734
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:556

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleTokenSmartToken(_convertibleToken, _index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenAnchor(address,uint256), txdata: 0x603f51e4, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenAnchor(address,uint256)
PC address: 10688
Estimated Gas Usage: 4809 - 74734
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:556

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleTokenSmartToken(_convertibleToken, _index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenAnchor(address,uint256), txdata: 0x603f51e4, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenCount()
PC address: 11284
Estimated Gas Usage: 4704 - 74439
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:526

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getConvertibleTokenCount(), txdata: 0x69be4784, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenCount()
PC address: 11284
Estimated Gas Usage: 4704 - 74439
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:526

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenCount(), txdata: 0x69be4784, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getLiquidityPoolCount()
PC address: 12175
Estimated Gas Usage: 4792 - 74527
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:506

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getLiquidityPoolCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getLiquidityPoolCount(), txdata: 0x7a5f0ffd, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getLiquidityPoolCount()
PC address: 12175
Estimated Gas Usage: 4792 - 74527
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:506

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getLiquidityPoolCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPoolCount(), txdata: 0x7a5f0ffd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleToken(uint256)
PC address: 12722
Estimated Gas Usage: 4959 - 74789
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:536

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleToken(_index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleToken(uint256), txdata: 0x865cf194, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleToken(uint256)
PC address: 12722
Estimated Gas Usage: 4959 - 74789
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:536

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getConvertibleToken(_index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleToken(uint256), txdata: 0x865cf194, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isSimilarLiquidityPoolRegistered(address)
PC address: 12934
Estimated Gas Usage: 7636 - 154955
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:582

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: isSimilarLiquidityPoolRegistered(address), txdata: 0x8f1d0e1aefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isSimilarLiquidityPoolRegistered(address)
PC address: 13223
Estimated Gas Usage: 7636 - 154955
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:588

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: isSimilarLiquidityPoolRegistered(address), txdata: 0x8f1d0e1aefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isSimilarLiquidityPoolRegistered(address)
PC address: 13223
Estimated Gas Usage: 7636 - 154955
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:588

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isSimilarLiquidityPoolRegistered(address), txdata: 0x8f1d0e1a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isSimilarLiquidityPoolRegistered(address)
PC address: 13551
Estimated Gas Usage: 7636 - 154955
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:594

_converter.converterType()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: isSimilarLiquidityPoolRegistered(address), txdata: 0x8f1d0e1aefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isSimilarLiquidityPoolRegistered(address)
PC address: 13551
Estimated Gas Usage: 4442 - 74597
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:594

_converter.converterType()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isSimilarLiquidityPoolRegistered(address), txdata: 0x8f1d0e1a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConverterValid(address)
PC address: 13778
Estimated Gas Usage: 4093 - 73403
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConverterValid(address), txdata: 0x954254f5efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 13778
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 13778
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dcefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConverterValid(address)
PC address: 13936
Estimated Gas Usage: 4093 - 73403
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token().owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConverterValid(address), txdata: 0x954254f5, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 13936
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token().owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 13936
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token().owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isConverterValid(address)
PC address: 13936
Estimated Gas Usage: 4093 - 73403
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token().owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConverterValid(address), txdata: 0x954254f5, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 13936
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token().owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 13936
Estimated Gas Usage: 27369 - 409582
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:577

_converter.token().owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getLiquidityPool(uint256)
PC address: 14439
Estimated Gas Usage: 5113 - 74943
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:516

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getLiquidityPool(_index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPool(uint256), txdata: 0xa74498aa, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getLiquidityPool(uint256)
PC address: 14439
Estimated Gas Usage: 5113 - 74943
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:516

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getLiquidityPool(_index)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPool(uint256), txdata: 0xa74498aa, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleTokenSmartToken(address,address)
PC address: 14863
Estimated Gas Usage: 4985 - 74910
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:561

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isConvertibleTokenSmartToken(_convertibleToken, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: isConvertibleTokenSmartToken(address,address), txdata: 0x725b8786, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleTokenAnchor(address,address)
PC address: 14863
Estimated Gas Usage: 5245 - 75170
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:561

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isConvertibleTokenSmartToken(_convertibleToken, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: isConvertibleTokenAnchor(address,address), txdata: 0xb4c4197a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleTokenSmartToken(address,address)
PC address: 14863
Estimated Gas Usage: 4985 - 74910
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:561

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isConvertibleTokenSmartToken(_convertibleToken, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConvertibleTokenSmartToken(address,address), txdata: 0x725b8786, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleTokenAnchor(address,address)
PC address: 14863
Estimated Gas Usage: 5245 - 75170
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:561

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isConvertibleTokenSmartToken(_convertibleToken, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConvertibleTokenAnchor(address,address), txdata: 0xb4c4197a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getAnchorCount()
PC address: 15324
Estimated Gas Usage: 5122 - 74857
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:486

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getSmartTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getAnchorCount(), txdata: 0xd3182bed, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getSmartTokenCount()
PC address: 15324
Estimated Gas Usage: 5267 - 75002
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:486

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getSmartTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getSmartTokenCount(), txdata: 0xe571049b, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getAnchorCount()
PC address: 15324
Estimated Gas Usage: 5122 - 74857
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:486

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getSmartTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getAnchorCount(), txdata: 0xd3182bed, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: getSmartTokenCount()
PC address: 15324
Estimated Gas Usage: 5267 - 75002
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:486

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).getSmartTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: getSmartTokenCount(), txdata: 0xe571049b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isSmartToken(address)
PC address: 15643
Estimated Gas Usage: 4668 - 74498
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:501

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isSmartToken(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: isSmartToken(address), txdata: 0x4123ef60, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isSmartToken(address)
PC address: 15643
Estimated Gas Usage: 4668 - 74498
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:501

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isSmartToken(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isSmartToken(address), txdata: 0x4123ef60, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isLiquidityPool(address)
PC address: 16242
Estimated Gas Usage: 5373 - 75203
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:521

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isLiquidityPool(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isLiquidityPool(address), txdata: 0xe85455d7, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isLiquidityPool(address)
PC address: 16242
Estimated Gas Usage: 5373 - 75203
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:521

IConverterRegistryData(addressOf(CONVERTER_REGISTRY_DATA)).isLiquidityPool(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: isLiquidityPool(address), txdata: 0xe85455d7, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 17324
Estimated Gas Usage: 27369 - 409582
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 17324
Estimated Gas Usage: 27171 - 409384
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleToken(address)
PC address: 17474
Estimated Gas Usage: 4603 - 74433
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConvertibleToken(address), txdata: 0x3ab8857c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenAnchorCount(address)
PC address: 17474
Estimated Gas Usage: 4635 - 74465
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenAnchorCount(address), txdata: 0x49c5f32b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenCount()
PC address: 17474
Estimated Gas Usage: 4704 - 74439
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenCount(), txdata: 0x69be4784, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getAnchor(uint256)
PC address: 17474
Estimated Gas Usage: 4673 - 74503
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getAnchor(uint256), txdata: 0x4c7df18f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isSmartToken(address)
PC address: 17474
Estimated Gas Usage: 4668 - 74498
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: isSmartToken(address), txdata: 0x4123ef60, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getLiquidityPoolCount()
PC address: 17474
Estimated Gas Usage: 4792 - 74527
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPoolCount(), txdata: 0x7a5f0ffd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenAnchor(address,uint256)
PC address: 17474
Estimated Gas Usage: 4809 - 74734
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenAnchor(address,uint256), txdata: 0x603f51e4, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleToken(uint256)
PC address: 17474
Estimated Gas Usage: 4959 - 74789
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleToken(uint256), txdata: 0x865cf194, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleTokenSmartToken(address,address)
PC address: 17474
Estimated Gas Usage: 4985 - 74910
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConvertibleTokenSmartToken(address,address), txdata: 0x725b8786, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: updateRegistry()
PC address: 17474
Estimated Gas Usage: 19823 - 131352
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: updateRegistry(), txdata: 0x49d10b64, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getAnchorCount()
PC address: 17474
Estimated Gas Usage: 5122 - 74857
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getAnchorCount(), txdata: 0xd3182bed, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getLiquidityPool(uint256)
PC address: 17474
Estimated Gas Usage: 5113 - 74943
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getLiquidityPool(uint256), txdata: 0xa74498aa, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getSmartToken(uint256)
PC address: 17474
Estimated Gas Usage: 5112 - 74942
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getSmartToken(uint256), txdata: 0xa109d214, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getConvertibleTokenSmartTokenCount(address)
PC address: 17474
Estimated Gas Usage: 5140 - 74970
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getConvertibleTokenSmartTokenCount(address), txdata: 0xa43d5e94, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: getSmartTokenCount()
PC address: 17474
Estimated Gas Usage: 5267 - 75002
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: getSmartTokenCount(), txdata: 0xe571049b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: isConvertibleTokenAnchor(address,address)
PC address: 17474
Estimated Gas Usage: 5245 - 75170
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [CREATOR], function: isConvertibleTokenAnchor(address,address), txdata: 0xb4c4197a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 17474
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 17474
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 17474
Estimated Gas Usage: 27369 - 409582
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 17474
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 17474
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:252

registry.addressOf(_contractName)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19096
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:655

IConverter(_converter).token()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dcefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19096
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:655

IConverter(_converter).token()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19096
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:655

IConverter(_converter).token()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19257
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:656

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dcefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19257
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:656

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19257
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:656

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19496
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:667

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dcefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19496
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:667

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 19496
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:667

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: isSimilarLiquidityPoolRegistered(address)
PC address: 19812
Estimated Gas Usage: 7636 - 154955
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:729

staticcall(
                gas,           
                _converter,    
                add(data, 32), 
                mload(data),   
                ret,           
                64             
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: isSimilarLiquidityPoolRegistered(address), txdata: 0x8f1d0e1a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20007
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:672

IConverter(_converter).anchor()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20007
Estimated Gas Usage: 24078 - 337357
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:672

IConverter(_converter).anchor()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20007
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:672

IConverter(_converter).anchor()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20168
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:673

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20168
Estimated Gas Usage: 24078 - 337357
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:673

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20168
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:673

_converter.connectorTokenCount()

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20407
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:684

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20407
Estimated Gas Usage: 27369 - 409582
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:684

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 20407
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:684

_converter.connectorTokens(i)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: safeTransfer(address,address,uint256)
PC address: 20530
Estimated Gas Usage: 2297 - 40388
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:48

call(
                gas,            
                _token,         
                0,              
                add(_data, 32), 
                mload(_data),   
                ret,            
                32              
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: safeTransfer(address,address,uint256), txdata: 0xd1660f99efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: safeApprove(address,address,uint256)
PC address: 20530
Estimated Gas Usage: 2473 - 40564
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:48

call(
                gas,            
                _token,         
                0,              
                add(_data, 32), 
                mload(_data),   
                ret,            
                32              
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: safeApprove(address,address,uint256), txdata: 0xeb5625d9efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 20846
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:617

_converterRegistryData.addSmartToken(_anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000002, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 20846
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:617

_converterRegistryData.addSmartToken(_anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 20846
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:617

_converterRegistryData.addSmartToken(_anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 21163
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:631

_converterRegistryData.addLiquidityPool(_liquidityPool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000002, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 21163
Estimated Gas Usage: 27171 - 409384
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:631

_converterRegistryData.addLiquidityPool(_liquidityPool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 21163
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:631

_converterRegistryData.addLiquidityPool(_liquidityPool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 21465
Estimated Gas Usage: 27171 - 409384
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:643

_converterRegistryData.addConvertibleToken(_convertibleToken, _anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000002, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 21465
Estimated Gas Usage: 22696 - 335529
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:643

_converterRegistryData.addConvertibleToken(_convertibleToken, _anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: addConverter(address)
PC address: 21465
Estimated Gas Usage: 27171 - 409384
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:643

_converterRegistryData.addConvertibleToken(_convertibleToken, _anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [CREATOR], function: addConverter(address), txdata: 0x6ce1c4dc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 21739
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:624

_converterRegistryData.removeSmartToken(_anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 21739
Estimated Gas Usage: 27369 - 409582
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:624

_converterRegistryData.removeSmartToken(_anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 21739
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:624

_converterRegistryData.removeSmartToken(_anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 22056
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:637

_converterRegistryData.removeLiquidityPool(_liquidityPool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 22056
Estimated Gas Usage: 24078 - 337357
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:637

_converterRegistryData.removeLiquidityPool(_liquidityPool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 22056
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:637

_converterRegistryData.removeLiquidityPool(_liquidityPool)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 22358
Estimated Gas Usage: 27369 - 409582
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:649

_converterRegistryData.removeConvertibleToken(_convertibleToken, _anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 22358
Estimated Gas Usage: 19603 - 263502
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:649

_converterRegistryData.removeConvertibleToken(_convertibleToken, _anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [ATTACKER], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0
Caller: [CREATOR], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ConverterRegistry
Function name: removeConverter(address)
PC address: 22358
Estimated Gas Usage: 27369 - 409582
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:649

_converterRegistryData.removeConvertibleToken(_convertibleToken, _anchor)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, decoded_data: , value: 0x0
Caller: [SOMEGUY], function: removeConverter(address), txdata: 0x9e76a007, value: 0x0


time_used: 36218.104605436325 seconds
#@contract_info_time
0x3b3bf16028e40bd3a7af66ef04e41e3bf6f51e55.sol:0.4.26:ConverterRegistry:36218.104605436325:36100:60:36000
