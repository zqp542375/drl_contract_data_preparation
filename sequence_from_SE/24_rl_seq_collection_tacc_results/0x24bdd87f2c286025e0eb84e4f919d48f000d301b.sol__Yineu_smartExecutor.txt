++++ 0x24bdd87f2c286025e0eb84e4f919d48f000d301b.sol  :  0.5.13  :  Yineu ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 1853
['constructor']:writes at the last depth:['3', '0', '0', '1', '2']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 99.14% coverage.
dynamic svars:['0', '2']
static svars:['1']
Ending preprocessing.
preprocessing time(s): 110.83657431602478
contract coverage: 98.70%
Function Reads: State variables read in conditions
	allInfoFor(address):[]
	balanceOf(address):[]
	symbol():[]
	transfer(address,uint256):['2']
	allAddresses(uint256):['0']
	allowance(address,address):[]
	name():[]
	approve(address,uint256):[]
	totalSupply():[]
	transferFrom(address,address,uint256):[]
	decimals():[]
Function Writes: State variables written
	approve(address,uint256):['2']
	transferFrom(address,address,uint256):['2', '0', '1']
	transfer(address,uint256):['2', '0', '1']
============================
iteration:3
targets:[]
['approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)']:writes at the last depth:['', '0', '1', '2']
['transfer(address,uint256)']:writes at the last depth:['', '0', '1', '2']
['transferFrom(address,address,uint256)']:writes at the last depth:['', '1', '2']
['transferFrom(address,address,uint256)']:writes at the last depth:['', '1', '2']
['transfer(address,uint256)']:writes at the last depth:['', '0', '1', '2']
['transfer(address,uint256)']:writes at the last depth:['', '0', '1', '2']
['transferFrom(address,address,uint256)']:writes at the last depth:['', '1', '2']
['transferFrom(address,address,uint256)']:writes at the last depth:['', '1', '2']
['transfer(address,uint256)']:writes at the last depth:['', '0', '1', '2']
contract coverage: 98.70%
============================
iteration:4
contract coverage: 98.70%
============================
iteration:5
contract coverage: 98.70%
============================
iteration:6
contract coverage: 98.70%
============================
iteration:7
contract coverage: 98.70%
============================
iteration:8
contract coverage: 98.70%
============================
iteration:9
contract coverage: 98.70%
============================
iteration:10
contract coverage: 98.70%
============================
iteration:11
contract coverage: 98.70%
============================
iteration:12
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['', '1', '2']
contract coverage: 98.70%
============================
iteration:13
contract coverage: 98.70%
============================
iteration:14
contract coverage: 98.70%
============================
iteration:15
contract coverage: 98.70%
#@statespace
255 nodes, 254 edges, 5000 total states
#@coverage
Achieved 6.60% coverage for code: 608060405234801561001057600080fd5b5033600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060003390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103e86001600001819055506103e86001800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550610e2f806101216000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806357f6b8121161007157806357f6b8121461025f57806370a08231146102be57806395d89b4114610316578063a9059cbb14610399578063dacc5370146103ff578063dd62ed3e1461046d576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061051e565b604051808215151515815260200191505060405180910390f35b61019f610615565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610622565b604051808215151515815260200191505060405180910390f35b610243610758565b604051808260ff1660ff16815260200191505060405180910390f35b6102a16004803603602081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061075d565b604051808381526020018281526020019250505060405180910390f35b610300600480360360208110156102d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061077a565b6040518082815260200191505060405180910390f35b61031e6107c8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035e578082015181840152602081019050610343565b50505050905090810190601f16801561038b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e5600480360360408110156103af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610801565b604051808215151515815260200191505060405180910390f35b61042b6004803603602081101561041557600080fd5b8101908080359060200190929190505050610819565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104cf6004803603604081101561048357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610855565b6040518082815260200191505060405180910390f35b6040518060400160405280600581526020017f59696e657500000000000000000000000000000000000000000000000000000081525081565b6000816001800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600160000154905090565b6000816001800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106b257600080fd5b816001800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061074c8484846108e1565b50600190509392505050565b600381565b600080610768610615565b6107718461077a565b91509150915091565b60006001800160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6040518060400160405280600381526020017f59494e000000000000000000000000000000000000000000000000000000000081525081565b600061080e3384846108e1565b506001905092915050565b6000818154811061082657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000816108ed8561077a565b10156108f857600080fd5b6000806001800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154149050826001800160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055506000839050806001800160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055508180156109f95750600084115b15610bd05760008590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060008090505b600080549050811015610bbb576000600180016000808481548110610a8b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600060016000015490506000816103e8840281610b0f57fe5b04905060006103e880830281610b2157fe5b04905080600180016000808881548110610b3757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555060018501945050505050610a6a565b6103e860016000015401600160000181905550505b60006001800160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610d895760008090505b600080549050811015610d74576000600180016000808481548110610c4457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600060016000015490506000816103e8840281610cc857fe5b04905060006103e880830281610cda57fe5b04905080600180016000808881548110610cf057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254039250508190555060018501945050505050610c23565b6103e860016000015403600160000181905550505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a38092505050939250505056fea265627a7a72315820b1ccdefd4a9d7ebf3c2e16d0ef8fd9320a7da7f3969042fab50a7d9b0b7266e364736f6c634300050d0032
#@coverage
Achieved 98.70% coverage for code: 608060405234801561001057600080fd5b50600436106100a95760003560e01c806357f6b8121161007157806357f6b8121461025f57806370a08231146102be57806395d89b4114610316578063a9059cbb14610399578063dacc5370146103ff578063dd62ed3e1461046d576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061051e565b604051808215151515815260200191505060405180910390f35b61019f610615565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610622565b604051808215151515815260200191505060405180910390f35b610243610758565b604051808260ff1660ff16815260200191505060405180910390f35b6102a16004803603602081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061075d565b604051808381526020018281526020019250505060405180910390f35b610300600480360360208110156102d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061077a565b6040518082815260200191505060405180910390f35b61031e6107c8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035e578082015181840152602081019050610343565b50505050905090810190601f16801561038b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e5600480360360408110156103af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610801565b604051808215151515815260200191505060405180910390f35b61042b6004803603602081101561041557600080fd5b8101908080359060200190929190505050610819565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104cf6004803603604081101561048357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610855565b6040518082815260200191505060405180910390f35b6040518060400160405280600581526020017f59696e657500000000000000000000000000000000000000000000000000000081525081565b6000816001800160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600160000154905090565b6000816001800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106b257600080fd5b816001800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061074c8484846108e1565b50600190509392505050565b600381565b600080610768610615565b6107718461077a565b91509150915091565b60006001800160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6040518060400160405280600381526020017f59494e000000000000000000000000000000000000000000000000000000000081525081565b600061080e3384846108e1565b506001905092915050565b6000818154811061082657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001800160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000816108ed8561077a565b10156108f857600080fd5b6000806001800160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154149050826001800160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055506000839050806001800160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055508180156109f95750600084115b15610bd05760008590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060008090505b600080549050811015610bbb576000600180016000808481548110610a8b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600060016000015490506000816103e8840281610b0f57fe5b04905060006103e880830281610b2157fe5b04905080600180016000808881548110610b3757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555060018501945050505050610a6a565b6103e860016000015401600160000181905550505b60006001800160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610d895760008090505b600080549050811015610d74576000600180016000808481548110610c4457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600060016000015490506000816103e8840281610cc857fe5b04905060006103e880830281610cda57fe5b04905080600180016000808881548110610cf057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254039250508190555060018501945050505050610c23565b6103e860016000015403600160000181905550505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a38092505050939250505056fea265627a7a72315820b1ccdefd4a9d7ebf3c2e16d0ef8fd9320a7da7f3969042fab50a7d9b0b7266e364736f6c634300050d0032
==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: Yineu
Function name: allAddresses(uint256)
PC address: 2085
Estimated Gas Usage: 1133 - 1228
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x24bdd87f2c286025e0eb84e4f919d48f000d301b.sol:18

address[] public allAddresses

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: allAddresses(uint256), txdata: 0xdacc53708000000000000000000000000000000000000000000000000000000000000000, decoded_data: (57896044618658097711785492504343953926634992332820282019728792003956564819968,), value: 0x0


time_used: 2219.548115491867 seconds
#@contract_info_time
0x24bdd87f2c286025e0eb84e4f919d48f000d301b.sol:0.5.13:Yineu:2219.548115491867:36100:60:36000
