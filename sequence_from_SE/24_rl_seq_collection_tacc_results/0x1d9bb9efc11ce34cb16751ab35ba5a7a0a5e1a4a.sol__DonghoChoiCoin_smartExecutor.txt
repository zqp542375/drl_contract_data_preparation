++++ 0x1d9bb9efc11ce34cb16751ab35ba5a7a0a5e1a4a.sol  :  0.4.24  :  DonghoChoiCoin ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 4825
['constructor']:writes at the last depth:['3', '5', '6', '7', '8', '1', '0']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 99.98% coverage.
dynamic svars:['6', '7', '0', '2', '4']
static svars:['3', '5', '1', '8']
Ending preprocessing.
preprocessing time(s): 101.09843468666077
contract coverage: 94.98%
name() is not reachable
symbol() is not reachable
Function Reads: State variables read in conditions
	mintingFinished():[]
	name():[]
	approve(address,uint256):['3', '4']
	totalSupply():[]
	multiTransfer(address[],uint256[]):['3', '0']
	transferFrom(address,address,uint256):['3', '4', '0', '2']
	INITIAL_SUPPLY():[]
	decimals():[]
	unpause():['3']
	mint(address,uint256):['3', '5', '1']
	blackList(address):[]
	paused():[]
	decreaseApproval(address,uint256):['3', '4', '2']
	balanceOf(address):[]
	burnAdminAmount(uint256):['3', '0']
	finishMinting():['3', '5']
	pause():['3']
	owner():[]
	symbol():[]
	transfer(address,uint256):['3', '4', '0']
	UnLockAddress(address):['3', '4']
	SetLockAddress(address):['3', '4']
	increaseApproval(address,uint256):['3', '4']
	allowance(address,address):[]
	transferOwnership(address):['3']
Function Writes: State variables written
	unpause():['3']
	finishMinting():['5']
	pause():['3']
	approve(address,uint256):['2']
	mint(address,uint256):['1', '0']
	burnAdminAmount(uint256):['0', '1']
	UnLockAddress(address):['4']
	transferOwnership(address):['3']
	decreaseApproval(address,uint256):['2']
	SetLockAddress(address):['4']
	transferFrom(address,address,uint256):['0', '2']
	transfer(address,uint256):['0']
	increaseApproval(address,uint256):['2']
	multiTransfer(address[],uint256[]):['0']
============================
iteration:3
targets:['UnLockAddress(address)', 'unpause()', 'name()', 'symbol()', 'pause()', 'approve(address,uint256)', 'finishMinting()']
['pause()']:writes at the last depth:['3']
['finishMinting()']:writes at the last depth:['5']
['approve(address,uint256)']:writes at the last depth:['2']
['transferOwnership(address)']:writes at the last depth:['3']
['burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['SetLockAddress(address)']:writes at the last depth:['4']
['mint(address,uint256)']:writes at the last depth:['1', '0']
['decreaseApproval(address,uint256)']:writes at the last depth:['2']
['decreaseApproval(address,uint256)']:writes at the last depth:['2']
['increaseApproval(address,uint256)']:writes at the last depth:['2']
['transfer(address,uint256)']:writes at the last depth:['0']
['transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:4
['multiTransfer(address[],uint256[])', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:5
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:6
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:7
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:8
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferFrom(address,address,uint256)', 'pause()']:writes at the last depth:['3']
contract coverage: 94.98%
============================
iteration:9
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transfer(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['1', '0']
contract coverage: 94.98%
============================
iteration:10
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'increaseApproval(address,uint256)', 'SetLockAddress(address)']:writes at the last depth:['4']
contract coverage: 94.98%
============================
iteration:11
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:12
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 94.98%
============================
iteration:13
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'mint(address,uint256)', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
contract coverage: 97.06%
============================
iteration:14
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'UnLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'increaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'SetLockAddress(address)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 97.06%
============================
iteration:15
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['2', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'burnAdminAmount(uint256)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 97.06%
============================
iteration:16
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'mint(address,uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'transferOwnership(address)', 'multiTransfer(address[],uint256[])']:writes at the last depth:['', '0']
contract coverage: 97.06%
============================
iteration:17
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'finishMinting()']:writes at the last depth:['5']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'approve(address,uint256)', 'mint(address,uint256)']:writes at the last depth:['1', '0']
contract coverage: 97.06%
============================
iteration:18
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()', 'pause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()', 'approve(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()', 'transferOwnership(address)']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()', 'decreaseApproval(address,uint256)']:writes at the last depth:['2']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'finishMinting()', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 98.16%
============================
iteration:19
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()', 'unpause()']:writes at the last depth:['3']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()', 'burnAdminAmount(uint256)']:writes at the last depth:['1', '0']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()', 'SetLockAddress(address)']:writes at the last depth:['4']
['multiTransfer(address[],uint256[])', 'multiTransfer(address[],uint256[])', 'pause()', 'mint(address,uint256)']:writes at the last depth:['1', '0']
contract coverage: 98.16%
============================
iteration:20
contract coverage: 98.16%
============================
iteration:21
contract coverage: 98.16%
============================
iteration:22
contract coverage: 98.16%
============================
iteration:23
contract coverage: 98.16%
============================
iteration:24
['multiTransfer(address[],uint256[])', 'decreaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['2']
contract coverage: 98.16%
============================
iteration:25
contract coverage: 98.16%
============================
iteration:26
contract coverage: 98.16%
============================
iteration:27
contract coverage: 98.16%
============================
iteration:28
contract coverage: 98.16%
============================
iteration:29
contract coverage: 98.16%
============================
iteration:30
contract coverage: 98.16%
============================
iteration:31
contract coverage: 98.16%
============================
iteration:32
contract coverage: 98.16%
============================
iteration:33
contract coverage: 98.16%
============================
iteration:34
contract coverage: 98.16%
============================
iteration:35
contract coverage: 98.16%
============================
iteration:36
contract coverage: 98.16%
============================
iteration:37
contract coverage: 98.16%
============================
iteration:38
contract coverage: 98.16%
============================
iteration:39
contract coverage: 98.16%
============================
iteration:40
contract coverage: 98.16%
============================
iteration:41
contract coverage: 98.16%
============================
iteration:42
contract coverage: 98.16%
============================
iteration:43
contract coverage: 98.16%
============================
iteration:44
contract coverage: 98.16%
============================
iteration:45
contract coverage: 98.16%
============================
iteration:46
contract coverage: 98.16%
#@statespace
4682 nodes, 4681 edges, 75586 total states
#@coverage
Achieved 5.89% coverage for code: 60806040526000600360146101000a81548160ff0219169083151502179055506000600560006101000a81548160ff0219169083151502179055506040805190810160405280600e81526020017f446f6e67686f43686f69436f696e0000000000000000000000000000000000008152506006908051906020019062000087929190620001ee565b506040805190810160405280600381526020017f444343000000000000000000000000000000000000000000000000000000000081525060079080519060200190620000d5929190620001ee565b506012600855348015620000e857600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600854600a0a640ba43b740002600181905550600854600a0a640ba43b7400026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600854600a0a640ba43b7400026040518082815260200191505060405180910390a36200029d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023157805160ff191683800117855562000262565b8280016001018555821562000262579182015b828111156200026157825182559160200191906001019062000244565b5b50905062000271919062000275565b5090565b6200029a91905b80821115620002965760008160009055506001016200027c565b5090565b90565b61294980620002ad6000396000f300608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461014e57806306fdde031461017d578063095ea7b31461020d57806318160ddd146102725780631e89d5451461029d57806323b872dd1461035e5780632ff2e9dc146103e3578063313ce5671461040e5780633f4ba83a1461043957806340c10f19146104505780634838d165146104b55780635c975abb14610510578063661884631461053f57806370a08231146105a457806376227f3b146105fb5780637d64bcb4146106285780638456cb59146106575780638da5cb5b1461066e57806395d89b41146106c5578063a9059cbb14610755578063c201df97146107ba578063c286f3d914610815578063d73dd62314610870578063dd62ed3e146108d5578063f2fde38b1461094c575b600080fd5b34801561015a57600080fd5b5061016361098f565b604051808215151515815260200191505060405180910390f35b34801561018957600080fd5b506101926109a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d25780820151818401526020810190506101b7565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021957600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a40565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610ad0565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506103446004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610ada565b604051808215151515815260200191505060405180910390f35b34801561036a57600080fd5b506103c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e72565b604051808215151515815260200191505060405180910390f35b3480156103ef57600080fd5b506103f8610f04565b6040518082815260200191505060405180910390f35b34801561041a57600080fd5b50610423610f14565b6040518082815260200191505060405180910390f35b34801561044557600080fd5b5061044e610f1a565b005b34801561045c57600080fd5b5061049b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fda565b604051808215151515815260200191505060405180910390f35b3480156104c157600080fd5b506104f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c0565b604051808215151515815260200191505060405180910390f35b34801561051c57600080fd5b506105256111e0565b604051808215151515815260200191505060405180910390f35b34801561054b57600080fd5b5061058a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f3565b604051808215151515815260200191505060405180910390f35b3480156105b057600080fd5b506105e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611283565b6040518082815260200191505060405180910390f35b34801561060757600080fd5b50610626600480360381019080803590602001909291905050506112cb565b005b34801561063457600080fd5b5061063d6114d9565b604051808215151515815260200191505060405180910390f35b34801561066357600080fd5b5061066c6115a1565b005b34801561067a57600080fd5b50610683611662565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d157600080fd5b506106da611688565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561071a5780820151818401526020810190506106ff565b50505050905090810190601f1680156107475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561076157600080fd5b506107a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611726565b604051808215151515815260200191505060405180910390f35b3480156107c657600080fd5b506107fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117b6565b604051808215151515815260200191505060405180910390f35b34801561082157600080fd5b50610856600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611918565b604051808215151515815260200191505060405180910390f35b34801561087c57600080fd5b506108bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b13565b604051808215151515815260200191505060405180910390f35b3480156108e157600080fd5b50610936600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ba3565b6040518082815260200191505060405180910390f35b34801561095857600080fd5b5061098d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c2a565b005b600560009054906101000a900460ff1681565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b505050505081565b6000600360149054906101000a900460ff16151515610a5e57600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610abe57600080fd5b610ac88383611c92565b905092915050565b6000600154905090565b6000806000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3b57600080fd5b83518551141515610b4b57600080fd5b60009050600091505b8451821015610be957600073ffffffffffffffffffffffffffffffffffffffff168583815181101515610b8357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614151515610bb057600080fd5b610bda8483815181101515610bc157fe5b9060200190602002015182611d8490919063ffffffff16565b90508180600101925050610b54565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610c3657600080fd5b600091505b8451821015610e6657610cac8483815181101515610c5557fe5b906020019060200201516000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d6d8483815181101515610cff57fe5b906020019060200201516000808886815181101515610d1a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808785815181101515610d7e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508482815181101515610dd457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8685815181101515610e3a57fe5b906020019060200201516040518082815260200191505060405180910390a38180600101925050610c3b565b60019250505092915050565b6000600360149054906101000a900460ff16151515610e9057600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610ef057600080fd5b610efb848484611dbb565b90509392505050565b600854600a0a640ba43b74000281565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f7657600080fd5b600360149054906101000a900460ff161515610f9157600080fd5b6000600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561103857600080fd5b600560009054906101000a900460ff1615151561105457600080fd5b61106982600154611d8490919063ffffffff16565b6001819055506110c0826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60046020528060005260406000206000915054906101000a900460ff1681565b600360149054906101000a900460ff1681565b6000600360149054906101000a900460ff1615151561121157600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561127157600080fd5b61127b8383612175565b905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561132757600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561137457600080fd5b6113c5816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061141c81600154611da290919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167fa0f3dea10c8bf26d7f1b6b0cf33166195f48616c562c681b49eaaa2423894d00826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561153757600080fd5b600560009054906101000a900460ff1615151561155357600080fd5b6001600560006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115fd57600080fd5b600360149054906101000a900460ff1615151561161957600080fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561171e5780601f106116f35761010080835404028352916020019161171e565b820191906000526020600020905b81548152906001019060200180831161170157829003601f168201915b505050505081565b6000600360149054906101000a900460ff1615151561174457600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515156117a457600080fd5b6117ae8383612406565b905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561181457600080fd5b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561187457600080fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f0be774851955c26a1d6a32b13b020663a069006b4a3b643ff0b809d31826057260405160405180910390a260019050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561197657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119b257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611a0f57600080fd5b60011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515611a6f57600080fd5b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fc1b5f12cea7c200ad495a43bf2d4c7ba1a753343c06c339093937849de84d91360405160405180910390a260019050919050565b6000600360149054906101000a900460ff16151515611b3157600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515611b9157600080fd5b611b9b8383612625565b905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c8657600080fd5b611c8f81612821565b50565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000808284019050838110151515611d9857fe5b8091505092915050565b6000828211151515611db057fe5b818303905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611df857600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611e4557600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611ed057600080fd5b611f21826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611fb4826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061208582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115612286576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061231a565b6122998382611da290919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561244357600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561249057600080fd5b6124e1826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612574826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60006126b682600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561285d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820de44474a5c01a69081331683e18ffda54752e49a8573647d94ab1358dc869f2f0029
#@coverage
Achieved 98.16% coverage for code: 608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461014e57806306fdde031461017d578063095ea7b31461020d57806318160ddd146102725780631e89d5451461029d57806323b872dd1461035e5780632ff2e9dc146103e3578063313ce5671461040e5780633f4ba83a1461043957806340c10f19146104505780634838d165146104b55780635c975abb14610510578063661884631461053f57806370a08231146105a457806376227f3b146105fb5780637d64bcb4146106285780638456cb59146106575780638da5cb5b1461066e57806395d89b41146106c5578063a9059cbb14610755578063c201df97146107ba578063c286f3d914610815578063d73dd62314610870578063dd62ed3e146108d5578063f2fde38b1461094c575b600080fd5b34801561015a57600080fd5b5061016361098f565b604051808215151515815260200191505060405180910390f35b34801561018957600080fd5b506101926109a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d25780820151818401526020810190506101b7565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021957600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a40565b604051808215151515815260200191505060405180910390f35b34801561027e57600080fd5b50610287610ad0565b6040518082815260200191505060405180910390f35b3480156102a957600080fd5b506103446004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610ada565b604051808215151515815260200191505060405180910390f35b34801561036a57600080fd5b506103c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e72565b604051808215151515815260200191505060405180910390f35b3480156103ef57600080fd5b506103f8610f04565b6040518082815260200191505060405180910390f35b34801561041a57600080fd5b50610423610f14565b6040518082815260200191505060405180910390f35b34801561044557600080fd5b5061044e610f1a565b005b34801561045c57600080fd5b5061049b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fda565b604051808215151515815260200191505060405180910390f35b3480156104c157600080fd5b506104f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c0565b604051808215151515815260200191505060405180910390f35b34801561051c57600080fd5b506105256111e0565b604051808215151515815260200191505060405180910390f35b34801561054b57600080fd5b5061058a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f3565b604051808215151515815260200191505060405180910390f35b3480156105b057600080fd5b506105e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611283565b6040518082815260200191505060405180910390f35b34801561060757600080fd5b50610626600480360381019080803590602001909291905050506112cb565b005b34801561063457600080fd5b5061063d6114d9565b604051808215151515815260200191505060405180910390f35b34801561066357600080fd5b5061066c6115a1565b005b34801561067a57600080fd5b50610683611662565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d157600080fd5b506106da611688565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561071a5780820151818401526020810190506106ff565b50505050905090810190601f1680156107475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561076157600080fd5b506107a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611726565b604051808215151515815260200191505060405180910390f35b3480156107c657600080fd5b506107fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117b6565b604051808215151515815260200191505060405180910390f35b34801561082157600080fd5b50610856600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611918565b604051808215151515815260200191505060405180910390f35b34801561087c57600080fd5b506108bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b13565b604051808215151515815260200191505060405180910390f35b3480156108e157600080fd5b50610936600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ba3565b6040518082815260200191505060405180910390f35b34801561095857600080fd5b5061098d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c2a565b005b600560009054906101000a900460ff1681565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b505050505081565b6000600360149054906101000a900460ff16151515610a5e57600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610abe57600080fd5b610ac88383611c92565b905092915050565b6000600154905090565b6000806000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b3b57600080fd5b83518551141515610b4b57600080fd5b60009050600091505b8451821015610be957600073ffffffffffffffffffffffffffffffffffffffff168583815181101515610b8357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614151515610bb057600080fd5b610bda8483815181101515610bc157fe5b9060200190602002015182611d8490919063ffffffff16565b90508180600101925050610b54565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610c3657600080fd5b600091505b8451821015610e6657610cac8483815181101515610c5557fe5b906020019060200201516000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d6d8483815181101515610cff57fe5b906020019060200201516000808886815181101515610d1a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808785815181101515610d7e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508482815181101515610dd457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8685815181101515610e3a57fe5b906020019060200201516040518082815260200191505060405180910390a38180600101925050610c3b565b60019250505092915050565b6000600360149054906101000a900460ff16151515610e9057600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610ef057600080fd5b610efb848484611dbb565b90509392505050565b600854600a0a640ba43b74000281565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f7657600080fd5b600360149054906101000a900460ff161515610f9157600080fd5b6000600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561103857600080fd5b600560009054906101000a900460ff1615151561105457600080fd5b61106982600154611d8490919063ffffffff16565b6001819055506110c0826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60046020528060005260406000206000915054906101000a900460ff1681565b600360149054906101000a900460ff1681565b6000600360149054906101000a900460ff1615151561121157600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561127157600080fd5b61127b8383612175565b905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561132757600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561137457600080fd5b6113c5816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061141c81600154611da290919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167fa0f3dea10c8bf26d7f1b6b0cf33166195f48616c562c681b49eaaa2423894d00826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561153757600080fd5b600560009054906101000a900460ff1615151561155357600080fd5b6001600560006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115fd57600080fd5b600360149054906101000a900460ff1615151561161957600080fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561171e5780601f106116f35761010080835404028352916020019161171e565b820191906000526020600020905b81548152906001019060200180831161170157829003601f168201915b505050505081565b6000600360149054906101000a900460ff1615151561174457600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515156117a457600080fd5b6117ae8383612406565b905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561181457600080fd5b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561187457600080fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f0be774851955c26a1d6a32b13b020663a069006b4a3b643ff0b809d31826057260405160405180910390a260019050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561197657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119b257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611a0f57600080fd5b60011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515611a6f57600080fd5b6001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fc1b5f12cea7c200ad495a43bf2d4c7ba1a753343c06c339093937849de84d91360405160405180910390a260019050919050565b6000600360149054906101000a900460ff16151515611b3157600080fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515611b9157600080fd5b611b9b8383612625565b905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c8657600080fd5b611c8f81612821565b50565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000808284019050838110151515611d9857fe5b8091505092915050565b6000828211151515611db057fe5b818303905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611df857600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611e4557600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611ed057600080fd5b611f21826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611fb4826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061208582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115612286576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061231a565b6122998382611da290919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561244357600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561249057600080fd5b6124e1826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611da290919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612574826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60006126b682600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561285d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820de44474a5c01a69081331683e18ffda54752e49a8573647d94ab1358dc869f2f0029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DonghoChoiCoin
Function name: multiTransfer(address[],uint256[])
PC address: 709
Estimated Gas Usage: 31732 - 124116
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x1d9bb9efc11ce34cb16751ab35ba5a7a0a5e1a4a.sol:234

function multiTransfer(address[] _to, uint256[] _amount) onlyOwner public returns (bool) {
        require(_to.length == _amount.length);

        uint256 ui;
        uint256 amountSum = 0;
    
        for (ui = 0; ui < _to.length; ui++) {
            require(_to[ui] != address(0));

            amountSum = amountSum.add(_amount[ui]);
        }

        require(amountSum <= balances[msg.sender]);

        for (ui = 0; ui < _to.length; ui++) {
            balances[msg.sender] = balances[msg.sender].sub(_amount[ui]);
            balances[_to[ui]] = balances[_to[ui]].add(_amount[ui]);
        
            emit Transfer(msg.sender, _to[ui], _amount[ui]);
        }
    
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdcc0da964aa286657dd1, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DonghoChoiCoin
Function name: mint(address,uint256)
PC address: 7575
Estimated Gas Usage: 3039 - 3794
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x1d9bb9efc11ce34cb16751ab35ba5a7a0a5e1a4a.sol:291

totalSupply_.add(_amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f190000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff6f, decoded_data: ('0x0000000000000000000000000000000000000000', 115792089237316195423570985008687907853269984665595688713033488972948036386816), value: 0x0


time_used: 36050.136459589005 seconds
#@contract_info_time
0x1d9bb9efc11ce34cb16751ab35ba5a7a0a5e1a4a.sol:0.4.24:DonghoChoiCoin:36050.136459589005:36100:60:36000
