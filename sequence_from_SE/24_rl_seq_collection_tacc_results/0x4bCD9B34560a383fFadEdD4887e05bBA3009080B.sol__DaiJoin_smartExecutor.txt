++++ 0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol  :  0.5.12  :  DaiJoin ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 1341
['constructor']:writes at the last depth:['0', '3', '1', '2']
preprocessing: Achieved 98.73% coverage.
dynamic svars:['0']
static svars:['3', '1', '2']
Ending preprocessing.
preprocessing time(s): 16.797010898590088
contract coverage: 95.82%
Function Reads: State variables read in conditions
	live():[]
	deny(address):['0']
	wards(address):[]
	exit(address,uint256):['3']
	dai():[]
	vat():[]
	join(address,uint256):[]
	rely(address):['0']
	cage():['0']
Function Writes: State variables written
	cage():['3']
	deny(address):['0']
	rely(address):['0']
============================
iteration:3
targets:['exit(address,uint256)']
['cage()']:writes at the last depth:['3']
['deny(address)']:writes at the last depth:['0']
['rely(address)']:writes at the last depth:['0']
['join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)']:writes at the last depth:[]
contract coverage: 95.82%
============================
iteration:4
['exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 95.82%
============================
iteration:5
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 95.82%
============================
iteration:6
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 95.82%
============================
iteration:7
contract coverage: 95.82%
============================
iteration:8
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 95.82%
============================
iteration:9
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
contract coverage: 95.82%
============================
iteration:10
contract coverage: 95.82%
============================
iteration:11
['exit(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 95.82%
============================
iteration:12
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:13
['exit(address,uint256)', 'rely(address)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'cage()', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:14
['exit(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:15
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:16
contract coverage: 98.66%
============================
iteration:17
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:18
contract coverage: 98.66%
============================
iteration:19
['exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:20
['exit(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:21
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:22
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:23
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:24
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:25
['exit(address,uint256)', 'exit(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'exit(address,uint256)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'exit(address,uint256)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'exit(address,uint256)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:26
['exit(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:27
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:28
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
contract coverage: 98.66%
============================
iteration:29
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:30
['exit(address,uint256)', 'join(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'cage()', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:31
['exit(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:32
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:33
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:34
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:35
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:36
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'join(address,uint256)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:37
['exit(address,uint256)', 'join(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'join(address,uint256)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'join(address,uint256)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:38
['exit(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:39
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:40
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:41
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:42
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:43
['exit(address,uint256)', 'rely(address)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'rely(address)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'rely(address)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'rely(address)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:44
['exit(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:45
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:46
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:47
contract coverage: 98.66%
============================
iteration:48
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:49
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:50
['exit(address,uint256)', 'deny(address)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'deny(address)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:51
['exit(address,uint256)', 'deny(address)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'deny(address)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'deny(address)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:52
['exit(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:53
['exit(address,uint256)', 'cage()', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'cage()', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:54
['exit(address,uint256)', 'cage()', 'rely(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'cage()', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:55
['exit(address,uint256)', 'cage()', 'deny(address)', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'cage()', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'cage()', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:56
['exit(address,uint256)', 'cage()', 'cage()', 'cage()']:writes at the last depth:['3']
['exit(address,uint256)', 'cage()', 'cage()', 'deny(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'cage()', 'rely(address)']:writes at the last depth:['0']
['exit(address,uint256)', 'cage()', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
['exit(address,uint256)', 'cage()', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:57
['join(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:58
['join(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:59
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:60
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:61
contract coverage: 98.66%
============================
iteration:62
['join(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:63
['join(address,uint256)', 'rely(address)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'rely(address)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:64
['join(address,uint256)', 'rely(address)', 'cage()', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'rely(address)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'rely(address)', 'cage()', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:65
['join(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:66
contract coverage: 98.66%
============================
iteration:67
['join(address,uint256)', 'deny(address)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'deny(address)', 'cage()', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:68
['join(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
contract coverage: 98.66%
============================
iteration:69
['join(address,uint256)', 'cage()', 'cage()', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'cage()', 'cage()', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'cage()', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:70
['join(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:71
['join(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:72
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:73
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:74
['join(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:75
contract coverage: 98.66%
============================
iteration:76
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:77
contract coverage: 98.66%
============================
iteration:78
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:79
['join(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'rely(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:80
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'exit(address,uint256)', 'deny(address)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:81
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'exit(address,uint256)', 'cage()', 'join(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:82
['join(address,uint256)', 'join(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'join(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'join(address,uint256)', 'rely(address)']:writes at the last depth:['0']
['join(address,uint256)', 'join(address,uint256)', 'join(address,uint256)']:writes at the last depth:[]
['join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)']:writes at the last depth:[]
contract coverage: 98.66%
============================
iteration:83
['join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'cage()']:writes at the last depth:['3']
['join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'deny(address)']:writes at the last depth:['0']
['join(address,uint256)', 'join(address,uint256)', 'exit(address,uint256)', 'rely(address)']:writes at the last depth:['0']
contract coverage: 98.66%
============================
iteration:84
contract coverage: 98.66%
============================
iteration:85
contract coverage: 98.66%
============================
iteration:86
contract coverage: 98.66%
============================
iteration:87
contract coverage: 98.66%
============================
iteration:88
contract coverage: 98.66%
============================
iteration:89
contract coverage: 98.66%
============================
iteration:90
contract coverage: 98.66%
============================
iteration:91
contract coverage: 98.66%
============================
iteration:92
contract coverage: 98.66%
============================
iteration:93
contract coverage: 98.66%
#@statespace
5869 nodes, 5868 edges, 86380 total states
#@coverage
Achieved 9.37% coverage for code: 608060405234801561001057600080fd5b50604051610c91380380610c918339818101604052604081101561003357600080fd5b81019080805190602001909291908051906020019092919050505060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610b648061012d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063957aa58c11610066578063957aa58c1461017e5780639c52a7f11461019c578063bf353dbb146101e0578063ef693bed14610238578063f4b9fa751461028657610093565b806336569e77146100985780633b4da69f146100e257806365fae35e146101305780636924500914610174575b600080fd5b6100a06102d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012e600480360360408110156100f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102f6565b005b6101726004803603602081101561014657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f8565b005b61017c610626565b005b610186610717565b6040518082815260200191505060405180910390f35b6101de600480360360208110156101b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061071d565b005b610222600480360360208110156101f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061084b565b6040518082815260200191505060405180910390f35b6102846004803603604081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610863565b005b61028e610add565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b308461034c6b033b2e3c9fd0803ce800000086610b03565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156104a957600080fd5b505af11580156104bd573d6000803e3d6000fd5b505050505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a4505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4461694a6f696e2f6e6f742d617574686f72697a65640000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4461694a6f696e2f6e6f742d617574686f72697a65640000000000000000000081525060200191505060405180910390fd5b60006003819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a450565b60035481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4461694a6f696e2f6e6f742d617574686f72697a65640000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60006020528060005260406000206000915090505481565b6001600354146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4461694a6f696e2f6e6f742d6c6976650000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b33306109316b033b2e3c9fd0803ce800000086610b03565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156109cd57600080fd5b505af11580156109e1573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b505050505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a4505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821480610b205750828283850292508281610b1d57fe5b04145b610b2957600080fd5b9291505056fea265627a7a723158204b09d1e2e3de4ffeff162974adf5fc878e84eb7d4061fd2b0694d21f7c4fbcc564736f6c634300050c0032
#@coverage
Achieved 98.66% coverage for code: 608060405234801561001057600080fd5b50600436106100935760003560e01c8063957aa58c11610066578063957aa58c1461017e5780639c52a7f11461019c578063bf353dbb146101e0578063ef693bed14610238578063f4b9fa751461028657610093565b806336569e77146100985780633b4da69f146100e257806365fae35e146101305780636924500914610174575b600080fd5b6100a06102d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012e600480360360408110156100f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102f6565b005b6101726004803603602081101561014657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f8565b005b61017c610626565b005b610186610717565b6040518082815260200191505060405180910390f35b6101de600480360360208110156101b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061071d565b005b610222600480360360208110156101f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061084b565b6040518082815260200191505060405180910390f35b6102846004803603604081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610863565b005b61028e610add565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b308461034c6b033b2e3c9fd0803ce800000086610b03565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156104a957600080fd5b505af11580156104bd573d6000803e3d6000fd5b505050505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a4505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4461694a6f696e2f6e6f742d617574686f72697a65640000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4461694a6f696e2f6e6f742d617574686f72697a65640000000000000000000081525060200191505060405180910390fd5b60006003819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a450565b60035481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4461694a6f696e2f6e6f742d617574686f72697a65640000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60006020528060005260406000206000915090505481565b6001600354146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4461694a6f696e2f6e6f742d6c6976650000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b33306109316b033b2e3c9fd0803ce800000086610b03565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156109cd57600080fd5b505af11580156109e1573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b505050505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a4505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821480610b205750828283850292508281610b1d57fe5b04145b610b2957600080fd5b9291505056fea265627a7a723158204b09d1e2e3de4ffeff162974adf5fc878e84eb7d4061fd2b0694d21f7c4fbcc564736f6c634300050c0032
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1003
Estimated Gas Usage: 7269 - 79906
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:153

vat.move(address(this), usr, mul(ONE, wad))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: join(address,uint256), txdata: 0x3b4da69f000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', 0), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1030
Estimated Gas Usage: 7269 - 79906
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:154

dai

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: join(address,uint256), txdata: 0x3b4da69f00000000000000000000000080800004020140024080020410000880008004040000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x8080000402014002408002041000088000800404', 0), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1196
Estimated Gas Usage: 7269 - 79906
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:154

dai.burn(msg.sender, wad)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: join(address,uint256), txdata: 0x3b4da69f0000000000000000000000000ff009fe05ee20faaf02029c82fe0c02a110acea0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0ff009fe05ee20faaf02029c82fe0c02a110acea', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1196
Estimated Gas Usage: 7269 - 79906
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:154

dai.burn(msg.sender, wad)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldatadecoded_data: , value: 0x0
Caller: [CREATOR], function: join(address,uint256), txdata: 0x3b4da69f00000000000000000000000000080200000000000080800080108080000400010000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0008020000000000008080008010808000040001', 0), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DaiJoin
Function name: join(address,uint256)
PC address: 1196
Estimated Gas Usage: 7269 - 79906
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:154

dai.burn(msg.sender, wad)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: join(address,uint256), txdata: 0x3b4da69f00000000000000000000000080800004020140024080020410000880008004040000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x8080000402014002408002041000088000800404', 0), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2512
Estimated Gas Usage: 8135 - 80772
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:158

vat.move(msg.sender, address(this), mul(ONE, wad))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: exit(address,uint256), txdata: 0xef693bed000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', 0), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2539
Estimated Gas Usage: 8135 - 80772
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:159

dai

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: exit(address,uint256), txdata: 0xef693bed00000000000000000000000029eeaf40ae188066a484828a40be035409a620fe0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x29eeaf40ae188066a484828a40be035409a620fe', 0), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2705
Estimated Gas Usage: 8135 - 80772
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:159

dai.mint(usr, wad)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: exit(address,uint256), txdata: 0xef693bed000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', 0), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2705
Estimated Gas Usage: 8135 - 80772
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:159

dai.mint(usr, wad)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldatadecoded_data: , value: 0x0
Caller: [CREATOR], function: exit(address,uint256), txdata: 0xef693bed00000000000000000000000080020800100004802080808000084040108008800000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x8002080010000480208080800008404010800880', 0), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DaiJoin
Function name: exit(address,uint256)
PC address: 2705
Estimated Gas Usage: 8135 - 80772
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:159

dai.mint(usr, wad)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, decoded_data: , value: 0x0
Caller: [CREATOR], function: exit(address,uint256), txdata: 0xef693bed00000000000000000000000029eeaf40ae188066a484828a40be035409a620fe0000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x29eeaf40ae188066a484828a40be035409a620fe', 0), value: 0x0


time_used: 36038.67219352722 seconds
#@contract_info_time
0x4bCD9B34560a383fFadEdD4887e05bBA3009080B.sol:0.5.12:DaiJoin:36038.67219352722:36100:60:36000
