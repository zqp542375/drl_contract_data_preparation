++++ 0x3e72a3f9819e43713315c3f13338a4dc74b22baf.sol  :  0.5.0  :  PaymentMaster ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 2726
['constructor']:writes at the last depth:['0']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 68.89% coverage.
dynamic svars:['1', '2']
static svars:['0']
Ending preprocessing.
preprocessing time(s): 100.59189057350159
contract coverage: 59.50%
handlerList(uint256) is not reachable
getHandlerList() is not reachable
multiHandlerSweep(address[],address) is not reachable
sweepTokens(address) is not reachable
deployNewHandler() is not reachable
Function Reads: State variables read in conditions
	multiHandlerSweep(address[],address):[]
	getHandlerListLength():[]
	handlerMap(address):[]
	renounceOwnership():['0']
	owner():[]
	isOwner():[]
	handlerList(uint256):[]
	firePaymentReceivedEvent(address,address,uint256):['2']
	getHandlerList():[]
	deployNewHandler():[]
	transferOwnership(address):['0']
	sweepTokens(address):[]
	getMasterAddress():[]
	master():[]
Function Writes: State variables written
	renounceOwnership():['0']
	deployNewHandler():['1', '2']
	constructor:['0']
	transferOwnership(address):['0']
============================
iteration:3
targets:['handlerList(uint256)', 'getHandlerList()', 'multiHandlerSweep(address[],address)', 'firePaymentReceivedEvent(address,address,uint256)', 'sweepTokens(address)', 'deployNewHandler()']
['renounceOwnership()']:writes at the last depth:['0']
['transferOwnership(address)']:writes at the last depth:['0']
['deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)']:writes at the last depth:[]
contract coverage: 59.50%
============================
iteration:4
['sweepTokens(address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 59.50%
============================
iteration:5
['sweepTokens(address)', 'sweepTokens(address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'sweepTokens(address)', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 59.50%
============================
iteration:6
['sweepTokens(address)', 'sweepTokens(address)', 'sweepTokens(address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'sweepTokens(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'sweepTokens(address)', 'sweepTokens(address)', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:7
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)']:writes at the last depth:[]
['sweepTokens(address)', 'sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:8
['sweepTokens(address)', 'sweepTokens(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'sweepTokens(address)', 'transferOwnership(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'sweepTokens(address)', 'transferOwnership(address)', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:9
['sweepTokens(address)', 'sweepTokens(address)', 'renounceOwnership()', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'sweepTokens(address)', 'renounceOwnership()', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:10
['sweepTokens(address)', 'deployNewHandler()', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:11
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'sweepTokens(address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:12
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)', 'sweepTokens(address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'sweepTokens(address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:13
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'sweepTokens(address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'multiHandlerSweep(address[],address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:14
['sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()', 'deployNewHandler()']:writes at the last depth:['80084422859880547211683076133703299733277748156566366325829078699459944779000', '2', '1']
['sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'deployNewHandler()', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:15
['sweepTokens(address)', 'deployNewHandler()', 'transferOwnership(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'deployNewHandler()', 'transferOwnership(address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'transferOwnership(address)', 'sweepTokens(address)']:writes at the last depth:[]
['sweepTokens(address)', 'deployNewHandler()', 'transferOwnership(address)', 'multiHandlerSweep(address[],address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:16
contract coverage: 66.65%
============================
iteration:17
['sweepTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'transferOwnership(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
contract coverage: 66.65%
============================
iteration:18
['sweepTokens(address)', 'transferOwnership(address)', 'deployNewHandler()', 'transferOwnership(address)']:writes at the last depth:['0']
['sweepTokens(address)', 'transferOwnership(address)', 'deployNewHandler()', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:19
['sweepTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['sweepTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'transferOwnership(address)', 'transferOwnership(address)', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:20
['sweepTokens(address)', 'renounceOwnership()', 'deployNewHandler()']:writes at the last depth:['2', '1']
['sweepTokens(address)', 'renounceOwnership()', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:21
contract coverage: 66.65%
============================
iteration:22
['sweepTokens(address)', 'renounceOwnership()', 'deployNewHandler()', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:23
contract coverage: 66.65%
============================
iteration:24
['transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
contract coverage: 66.65%
============================
iteration:25
['transferOwnership(address)', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
contract coverage: 66.65%
============================
iteration:26
['transferOwnership(address)', 'transferOwnership(address)', 'renounceOwnership()', 'deployNewHandler()']:writes at the last depth:['2', '1']
['transferOwnership(address)', 'transferOwnership(address)', 'renounceOwnership()', 'sweepTokens(address)']:writes at the last depth:[]
contract coverage: 66.65%
============================
iteration:27
contract coverage: 66.65%
#@statespace
2650 nodes, 2649 edges, 35644 total states
#@coverage
Achieved 2.05% coverage for code: 6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611680806100cf6000396000f3fe6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630767abb8146100bf57806323e776d3146101a45780634592e804146101cf578063715018a6146102385780638da5cb5b1461024f5780638f32d59b146102a6578063a453b36a146102d5578063a7f0681914610350578063abb82dc1146103cb578063adbbea0114610437578063f2fde38b1461044e578063f5f6d3af1461049f575b600080fd5b3480156100cb57600080fd5b506101a2600480360360408110156100e257600080fd5b81019080803590602001906401000000008111156100ff57600080fd5b82018360208201111561011157600080fd5b8035906020019184602083028401116401000000008311171561013357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f0565b005b3480156101b057600080fd5b506101b96106d9565b6040518082815260200191505060405180910390f35b3480156101db57600080fd5b5061021e600480360360208110156101f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106e6565b604051808215151515815260200191505060405180910390f35b34801561024457600080fd5b5061024d610706565b005b34801561025b57600080fd5b506102646107d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b257600080fd5b506102bb610801565b604051808215151515815260200191505060405180910390f35b3480156102e157600080fd5b5061030e600480360360208110156102f857600080fd5b8101908080359060200190929190505050610858565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b506103c96004803603606081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610896565b005b3480156103d757600080fd5b506103e06109e7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610423578082015181840152602081019050610408565b505050509050019250505060405180910390f35b34801561044357600080fd5b5061044c610a75565b005b34801561045a57600080fd5b5061049d6004803603602081101561047157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bd9565b005b3480156104ab57600080fd5b506104ee600480360360208110156104c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf8565b005b60008090505b82518110156106d45760026000848381518110151561051157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f4f6e6c79207061796d656e742068616e646c657273206172652076616c69642081526020017f737765657020746172676574732e00000000000000000000000000000000000081525060400191505060405180910390fd5b828181518110151561060b57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1663f5f6d3af836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b5050505080806001019150506104f6565b505050565b6000600180549050905090565b60026020528060005260406000206000915054906101000a900460ff1681565b61070e610801565b151561071957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60018181548110151561086757fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f4f6e6c79207061796d656e742068616e646c6572732061726520616c6c6f776581526020017f6420746f2074726967676572207061796d656e74206576656e74732e0000000081525060400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f70b67bbcbad3ba1d594851292e63d6c097ecab60959bc60ee58beb4a1c22c9ad836040518082815260200191505060405180910390a3505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610a6b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a21575b5050505050905090565b600030610a80610f49565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610ad2573d6000803e3d6000fd5b50905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fef16b2ba030a7be9f6d0b1961285ee1b06631fc3a5bc49b1c9c3ed6a6018a22060405160405180910390a250565b610be1610801565b1515610bec57600080fd5b610bf581610e4f565b50565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c9357600080fd5b505afa158015610ca7573d6000803e3d6000fd5b505050506040513d6020811015610cbd57600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d6020811015610d7857600080fd5b8101908080519060200190929190505050836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b505050506040513d6020811015610e3957600080fd5b8101908080519060200190929190505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e8b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040516106fb80610f5a8339019056fe608060405234801561001057600080fd5b506040516020806106fb8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061066a806100916000396000f3fe608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630d25a14114610273578063ee97f7f3146102ca578063f5f6d3af14610321575b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156100dc57600080fd5b505afa1580156100f0573d6000803e3d6000fd5b505050506040513d602081101561010657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561015f573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7f068193033346040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561025857600080fd5b505af115801561026c573d6000803e3d6000fd5b5050505050005b34801561027f57600080fd5b50610288610372565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d657600080fd5b506102df61039b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103706004803603602081101561034457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c0565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561051d57600080fd5b505afa158015610531573d6000803e3d6000fd5b505050506040513d602081101561054757600080fd5b810190808051906020019092919050505090508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105fd57600080fd5b505af1158015610611573d6000803e3d6000fd5b505050506040513d602081101561062757600080fd5b81019080805190602001909291905050505050505056fea165627a7a723058200002fafdccad17eed7ba3d311991dcdf2fe1f65f59a549073f17f752a2949b890029a165627a7a7230582020e3fe2c23714607945a9a6ec82e5e11e410ec1e250b6c14f9a4be7cd8c9fe880029
#@coverage
Achieved 66.65% coverage for code: 6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630767abb8146100bf57806323e776d3146101a45780634592e804146101cf578063715018a6146102385780638da5cb5b1461024f5780638f32d59b146102a6578063a453b36a146102d5578063a7f0681914610350578063abb82dc1146103cb578063adbbea0114610437578063f2fde38b1461044e578063f5f6d3af1461049f575b600080fd5b3480156100cb57600080fd5b506101a2600480360360408110156100e257600080fd5b81019080803590602001906401000000008111156100ff57600080fd5b82018360208201111561011157600080fd5b8035906020019184602083028401116401000000008311171561013357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f0565b005b3480156101b057600080fd5b506101b96106d9565b6040518082815260200191505060405180910390f35b3480156101db57600080fd5b5061021e600480360360208110156101f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106e6565b604051808215151515815260200191505060405180910390f35b34801561024457600080fd5b5061024d610706565b005b34801561025b57600080fd5b506102646107d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b257600080fd5b506102bb610801565b604051808215151515815260200191505060405180910390f35b3480156102e157600080fd5b5061030e600480360360208110156102f857600080fd5b8101908080359060200190929190505050610858565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b506103c96004803603606081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610896565b005b3480156103d757600080fd5b506103e06109e7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610423578082015181840152602081019050610408565b505050509050019250505060405180910390f35b34801561044357600080fd5b5061044c610a75565b005b34801561045a57600080fd5b5061049d6004803603602081101561047157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bd9565b005b3480156104ab57600080fd5b506104ee600480360360208110156104c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf8565b005b60008090505b82518110156106d45760026000848381518110151561051157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f4f6e6c79207061796d656e742068616e646c657273206172652076616c69642081526020017f737765657020746172676574732e00000000000000000000000000000000000081525060400191505060405180910390fd5b828181518110151561060b57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1663f5f6d3af836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b5050505080806001019150506104f6565b505050565b6000600180549050905090565b60026020528060005260406000206000915054906101000a900460ff1681565b61070e610801565b151561071957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60018181548110151561086757fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001807f4f6e6c79207061796d656e742068616e646c6572732061726520616c6c6f776581526020017f6420746f2074726967676572207061796d656e74206576656e74732e0000000081525060400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f70b67bbcbad3ba1d594851292e63d6c097ecab60959bc60ee58beb4a1c22c9ad836040518082815260200191505060405180910390a3505050565b60606001805480602002602001604051908101604052809291908181526020018280548015610a6b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a21575b5050505050905090565b600030610a80610f49565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610ad2573d6000803e3d6000fd5b50905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fef16b2ba030a7be9f6d0b1961285ee1b06631fc3a5bc49b1c9c3ed6a6018a22060405160405180910390a250565b610be1610801565b1515610bec57600080fd5b610bf581610e4f565b50565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c9357600080fd5b505afa158015610ca7573d6000803e3d6000fd5b505050506040513d6020811015610cbd57600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d6020811015610d7857600080fd5b8101908080519060200190929190505050836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b505050506040513d6020811015610e3957600080fd5b8101908080519060200190929190505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e8b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040516106fb80610f5a8339019056fe608060405234801561001057600080fd5b506040516020806106fb8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061066a806100916000396000f3fe608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630d25a14114610273578063ee97f7f3146102ca578063f5f6d3af14610321575b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156100dc57600080fd5b505afa1580156100f0573d6000803e3d6000fd5b505050506040513d602081101561010657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561015f573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7f068193033346040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561025857600080fd5b505af115801561026c573d6000803e3d6000fd5b5050505050005b34801561027f57600080fd5b50610288610372565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d657600080fd5b506102df61039b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103706004803603602081101561034457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c0565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561051d57600080fd5b505afa158015610531573d6000803e3d6000fd5b505050506040513d602081101561054757600080fd5b810190808051906020019092919050505090508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105fd57600080fd5b505af1158015610611573d6000803e3d6000fd5b505050506040513d602081101561062757600080fd5b81019080805190602001909291905050505050505056fea165627a7a723058200002fafdccad17eed7ba3d311991dcdf2fe1f65f59a549073f17f752a2949b890029a165627a7a7230582020e3fe2c23714607945a9a6ec82e5e11e410ec1e250b6c14f9a4be7cd8c9fe880029
#@coverage
Achieved 7.51% coverage for code: 608060405234801561001057600080fd5b506040516020806106fb8339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061066a806100916000396000f3fe608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630d25a14114610273578063ee97f7f3146102ca578063f5f6d3af14610321575b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156100dc57600080fd5b505afa1580156100f0573d6000803e3d6000fd5b505050506040513d602081101561010657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561015f573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7f068193033346040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561025857600080fd5b505af115801561026c573d6000803e3d6000fd5b5050505050005b34801561027f57600080fd5b50610288610372565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d657600080fd5b506102df61039b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032d57600080fd5b506103706004803603602081101561034457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c0565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561051d57600080fd5b505afa158015610531573d6000803e3d6000fd5b505050506040513d602081101561054757600080fd5b810190808051906020019092919050505090508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105fd57600080fd5b505af1158015610611573d6000803e3d6000fd5b505050506040513d602081101561062757600080fd5b81019080805190602001909291905050505050505056fea165627a7a723058200002fafdccad17eed7ba3d311991dcdf2fe1f65f59a549073f17f752a2949b8900290000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: PaymentMaster
Function name: handlerList(uint256)
PC address: 2150
Estimated Gas Usage: 1172 - 1267
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x3e72a3f9819e43713315c3f13338a4dc74b22baf.sol:131

address[] public handlerList

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: handlerList(uint256), txdata: 0xa453b36a0000000000000000000000000000000000400040000040800000000000010420, decoded_data: (332312069548934473781702843999257632,), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PaymentMaster
Function name: sweepTokens(address)
PC address: 3409
Estimated Gas Usage: 5420 - 109201
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3e72a3f9819e43713315c3f13338a4dc74b22baf.sol:191

this.owner()

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: sweepTokens(address), txdata: 0xf5f6d3af0000000000000000000000000000001da1c09918192c00b8ac2100007ffffe60, decoded_data: ('0x0000001da1c09918192c00b8ac2100007ffffe60',), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentMaster
Function name: sweepTokens(address)
PC address: 3602
Estimated Gas Usage: 5420 - 109201
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x3e72a3f9819e43713315c3f13338a4dc74b22baf.sol:191

token.transfer(this.owner(), balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: sweepTokens(address), txdata: 0xf5f6d3af000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PaymentMaster
Function name: sweepTokens(address)
PC address: 3602
Estimated Gas Usage: 5420 - 109201
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x3e72a3f9819e43713315c3f13338a4dc74b22baf.sol:191

token.transfer(this.owner(), balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: sweepTokens(address), txdata: 0xf5f6d3af81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf, value: 0x0
Caller: [SOMEGUY], function: sweepTokens(address), txdata: 0xf5f6d3afb00000000000000000000000000000000000000000000000000000000000003e, value: 0x0


time_used: 12969.757534742355 seconds
#@contract_info_time
0x3e72a3f9819e43713315c3f13338a4dc74b22baf.sol:0.5.0:PaymentMaster:12969.757534742355:36100:60:36000
