++++ 0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol  :  0.5.16  :  EthStation ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 2346
['constructor']:writes at the last depth:['0']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 98.76% coverage.
dynamic svars:['1']
static svars:['0']
Ending preprocessing.
preprocessing time(s): 101.1995301246643
contract coverage: 59.29%
fallback is not reachable
Function Reads: State variables read in conditions
	owner():[]
	isOwner():[]
	addAccounts(address[]):['0']
	accounts(uint256):['1']
	transferOwnership(address):['0']
	removeAccount(address,uint256):['0', '1']
	lowest():['1']
	kill():['0']
	renounceOwnership():['0']
	balances():['1']
Function Writes: State variables written
	renounceOwnership():['0']
	transferOwnership(address):['0']
	addAccounts(address[]):['1']
	removeAccount(address,uint256):['1']
============================
iteration:3
targets:['fallback', 'removeAccount(address,uint256)', 'lowest()', 'accounts(uint256)', 'balances()']
['renounceOwnership()']:writes at the last depth:['0']
['transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:4
['addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
['addAccounts(address[])', 'fallback']:writes at the last depth:[]
contract coverage: 98.21%
============================
iteration:5
contract coverage: 98.21%
============================
iteration:6
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:7
contract coverage: 98.21%
============================
iteration:8
['addAccounts(address[])', 'fallback', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:9
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:10
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:11
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:12
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:13
contract coverage: 98.21%
============================
iteration:14
['addAccounts(address[])', 'fallback', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'fallback']:writes at the last depth:[]
contract coverage: 98.21%
============================
iteration:15
contract coverage: 98.21%
============================
iteration:16
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:17
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'addAccounts(address[])']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'addAccounts(address[])']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:18
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:19
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:20
contract coverage: 98.21%
============================
iteration:21
contract coverage: 98.21%
============================
iteration:22
contract coverage: 98.21%
============================
iteration:23
['addAccounts(address[])', 'fallback', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:24
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:25
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'addAccounts(address[])']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'addAccounts(address[])']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:26
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
contract coverage: 98.21%
============================
iteration:27
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:28
contract coverage: 98.21%
============================
iteration:29
['addAccounts(address[])', 'fallback', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:30
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'renounceOwnership()']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'transferOwnership(address)']:writes at the last depth:['0']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'removeAccount(address,uint256)']:writes at the last depth:['', '1']
['addAccounts(address[])', 'fallback', 'addAccounts(address[])', 'addAccounts(address[])']:writes at the last depth:['1', '80084422859880547211683076133703299733277748156566366325829078699459944779000']
contract coverage: 98.21%
============================
iteration:31
['addAccounts(address[])', 'fallback', 'removeAccount(address,uint256)', 'renounceOwnership()']:writes at the last depth:['0']
contract coverage: 98.21%
============================
iteration:32
contract coverage: 98.21%
============================
iteration:33
contract coverage: 98.21%
============================
iteration:34
contract coverage: 98.21%
============================
iteration:35
contract coverage: 98.21%
============================
iteration:36
contract coverage: 98.21%
============================
iteration:37
contract coverage: 98.21%
============================
iteration:38
contract coverage: 98.21%
============================
iteration:39
contract coverage: 98.21%
============================
iteration:40
contract coverage: 98.21%
============================
iteration:41
contract coverage: 98.21%
============================
iteration:42
contract coverage: 98.21%
============================
iteration:43
contract coverage: 98.21%
============================
iteration:44
contract coverage: 98.21%
============================
iteration:45
contract coverage: 98.21%
============================
iteration:46
contract coverage: 98.21%
============================
iteration:47
contract coverage: 98.21%
============================
iteration:48
contract coverage: 98.21%
============================
iteration:49
contract coverage: 98.21%
============================
iteration:50
contract coverage: 98.21%
============================
iteration:51
contract coverage: 98.21%
============================
iteration:52
contract coverage: 98.21%
============================
iteration:53
contract coverage: 98.21%
============================
iteration:54
contract coverage: 98.21%
============================
iteration:55
contract coverage: 98.21%
============================
iteration:56
contract coverage: 98.21%
============================
iteration:57
contract coverage: 98.21%
============================
iteration:58
contract coverage: 98.21%
============================
iteration:59
contract coverage: 98.21%
============================
iteration:60
contract coverage: 98.21%
============================
iteration:61
contract coverage: 98.21%
============================
iteration:62
contract coverage: 98.21%
============================
iteration:63
contract coverage: 98.21%
============================
iteration:64
contract coverage: 98.21%
============================
iteration:65
contract coverage: 98.21%
============================
iteration:66
contract coverage: 98.21%
============================
iteration:67
contract coverage: 98.21%
============================
iteration:68
contract coverage: 98.21%
============================
iteration:69
contract coverage: 98.21%
============================
iteration:70
contract coverage: 98.21%
============================
iteration:71
contract coverage: 98.21%
============================
iteration:72
contract coverage: 98.21%
============================
iteration:73
contract coverage: 98.21%
============================
iteration:74
contract coverage: 98.21%
============================
iteration:75
contract coverage: 98.21%
============================
iteration:76
contract coverage: 98.21%
============================
iteration:77
contract coverage: 98.21%
============================
iteration:78
contract coverage: 98.21%
#@statespace
6058 nodes, 6057 edges, 88655 total states
#@coverage
Achieved 2.17% coverage for code: 60806040526000339050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35061121f806100b46000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146104395780638f32d59b14610490578063ac71abde146104bf578063f2a40db814610545578063f2fde38b146105c057610091565b806329181003146102e65780632ec2a32b1461034157806341c0e1b51461039f578063715018a6146103b65780637bb98a68146103cd575b6060600180548060200260200160405190810160405280929190818152602001828054801561011557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116100cb575b505050505090506000815190506060816040519080825280602002602001820160405280156101535781602001602082028038833980820191505090505b509050600080600090505b838110156101c157600085828151811061017457fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163190508083019250808483815181106101a757fe5b60200260200101818152505050808060010191505061015e565b5060006101d082470184610611565b905060008090505b8481101561029757818482815181106101ed57fe5b6020026020010151101561028a5785818151811061020757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1684828151811061023157fe5b6020026020010151830360405180600001905060006040518083038185875af1925050503d8060008114610281576040519150601f19603f3d011682016040523d82523d6000602084013e610286565b606091505b5050505b80806001019150506101d8565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102de573d6000803e3d6000fd5b505050505050005b3480156102f257600080fd5b5061033f6004803603604081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069c565b005b34801561034d57600080fd5b506103566108e7565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156103ab57600080fd5b506103b4610a2e565b005b3480156103c257600080fd5b506103cb610ac8565b005b3480156103d957600080fd5b506103e2610c01565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561042557808201518184015260208101905061040a565b505050509050019250505060405180910390f35b34801561044557600080fd5b5061044e610d29565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049c57600080fd5b506104a5610d52565b604051808215151515815260200191505060405180910390f35b3480156104cb57600080fd5b50610543600480360360208110156104e257600080fd5b81019080803590602001906401000000008111156104ff57600080fd5b82018360208201111561051157600080fd5b8035906020019184602083028401116401000000008311171561053357600080fd5b9091929391929390505050610da9565b005b34801561055157600080fd5b5061057e6004803603602081101561056857600080fd5b8101908080359060200190929190505050610e77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105cc57600080fd5b5061060f600480360360208110156105e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb3565b005b6000808251905060008351858161062457fe5b049050600080600090505b8551811015610684578286828151811061064557fe5b60200260200101511115610677578380600190039450508286828151811061066957fe5b602002602001015103820191505b808060010191505061062f565b5082818161068e57fe5b048203935050505092915050565b6106a4610d52565b610716576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166001828154811061073a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061119b602a913960400191505060405180910390fd5b6000600180808054905003815481106107e657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806001838154811061082157fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548091906001900361087e9190611149565b507ff4ee8aaf6e383046c15f963c83459f20cd012dcdf1304c56aec18e684381d6dd83604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000806060600180548060200260200160405190810160405280929190818152602001828054801561096e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610924575b5050505050905060008151905060008060008090505b83811015610a1f57600085828151811061099a57fe5b6020026020010151905060008173ffffffffffffffffffffffffffffffffffffffff16319050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a0057819450809350610a10565b83811015610a0f578194508093505b5b50508080600101915050610984565b50818195509550505050509091565b610a36610d52565b610aa8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ab0610d29565b73ffffffffffffffffffffffffffffffffffffffff16ff5b610ad0610d52565b610b42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060806001805480602002602001604051908101604052809291908181526020018280548015610c8657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c3c575b5050505050905060008151905080604051908082528060200260200182016040528015610cc25781602001602082028038833980820191505090505b50925060008090505b81811015610d2357828181518110610cdf57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631848281518110610d0a57fe5b6020026020010181815250508080600101915050610ccb565b50505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610db1610d52565b610e23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008090505b82829050811015610e7257610e65838383818110610e4357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16610f39565b8080600101915050610e29565b505050565b60018181548110610e8457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ebb610d52565b610f2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610f3681611005565b50565b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f3e67e6407255879d31ea937ba6e59eb404ec7c3e4e9381c8a64b426a1d78545e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561108b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806111c56026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156111705781836000526020600020918201910161116f9190611175565b5b505050565b61119791905b8082111561119357600081600090555060010161117b565b5090565b9056fe65746873746174696f6e3a206163636f756e7420616e6420696e6465782073686f756c64206d617463684f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820da5b44e45e3a11000f40d36eb02819f4f7b5217745a41f82e4950e952ba5e2a464736f6c63430005100032
#@coverage
Achieved 98.21% coverage for code: 6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146104395780638f32d59b14610490578063ac71abde146104bf578063f2a40db814610545578063f2fde38b146105c057610091565b806329181003146102e65780632ec2a32b1461034157806341c0e1b51461039f578063715018a6146103b65780637bb98a68146103cd575b6060600180548060200260200160405190810160405280929190818152602001828054801561011557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116100cb575b505050505090506000815190506060816040519080825280602002602001820160405280156101535781602001602082028038833980820191505090505b509050600080600090505b838110156101c157600085828151811061017457fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163190508083019250808483815181106101a757fe5b60200260200101818152505050808060010191505061015e565b5060006101d082470184610611565b905060008090505b8481101561029757818482815181106101ed57fe5b6020026020010151101561028a5785818151811061020757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1684828151811061023157fe5b6020026020010151830360405180600001905060006040518083038185875af1925050503d8060008114610281576040519150601f19603f3d011682016040523d82523d6000602084013e610286565b606091505b5050505b80806001019150506101d8565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102de573d6000803e3d6000fd5b505050505050005b3480156102f257600080fd5b5061033f6004803603604081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069c565b005b34801561034d57600080fd5b506103566108e7565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156103ab57600080fd5b506103b4610a2e565b005b3480156103c257600080fd5b506103cb610ac8565b005b3480156103d957600080fd5b506103e2610c01565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561042557808201518184015260208101905061040a565b505050509050019250505060405180910390f35b34801561044557600080fd5b5061044e610d29565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049c57600080fd5b506104a5610d52565b604051808215151515815260200191505060405180910390f35b3480156104cb57600080fd5b50610543600480360360208110156104e257600080fd5b81019080803590602001906401000000008111156104ff57600080fd5b82018360208201111561051157600080fd5b8035906020019184602083028401116401000000008311171561053357600080fd5b9091929391929390505050610da9565b005b34801561055157600080fd5b5061057e6004803603602081101561056857600080fd5b8101908080359060200190929190505050610e77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105cc57600080fd5b5061060f600480360360208110156105e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb3565b005b6000808251905060008351858161062457fe5b049050600080600090505b8551811015610684578286828151811061064557fe5b60200260200101511115610677578380600190039450508286828151811061066957fe5b602002602001015103820191505b808060010191505061062f565b5082818161068e57fe5b048203935050505092915050565b6106a4610d52565b610716576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166001828154811061073a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061119b602a913960400191505060405180910390fd5b6000600180808054905003815481106107e657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806001838154811061082157fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180548091906001900361087e9190611149565b507ff4ee8aaf6e383046c15f963c83459f20cd012dcdf1304c56aec18e684381d6dd83604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000806060600180548060200260200160405190810160405280929190818152602001828054801561096e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610924575b5050505050905060008151905060008060008090505b83811015610a1f57600085828151811061099a57fe5b6020026020010151905060008173ffffffffffffffffffffffffffffffffffffffff16319050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610a0057819450809350610a10565b83811015610a0f578194508093505b5b50508080600101915050610984565b50818195509550505050509091565b610a36610d52565b610aa8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ab0610d29565b73ffffffffffffffffffffffffffffffffffffffff16ff5b610ad0610d52565b610b42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060806001805480602002602001604051908101604052809291908181526020018280548015610c8657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c3c575b5050505050905060008151905080604051908082528060200260200182016040528015610cc25781602001602082028038833980820191505090505b50925060008090505b81811015610d2357828181518110610cdf57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1631848281518110610d0a57fe5b6020026020010181815250508080600101915050610ccb565b50505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610db1610d52565b610e23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008090505b82829050811015610e7257610e65838383818110610e4357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16610f39565b8080600101915050610e29565b505050565b60018181548110610e8457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ebb610d52565b610f2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610f3681611005565b50565b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f3e67e6407255879d31ea937ba6e59eb404ec7c3e4e9381c8a64b426a1d78545e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561108b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806111c56026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156111705781836000526020600020918201910161116f9190611175565b5b505050565b61119791905b8082111561119357600081600090555060010161117b565b5090565b9056fe65746873746174696f6e3a206163636f756e7420616e6420696e6465782073686f756c64206d617463684f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820da5b44e45e3a11000f40d36eb02819f4f7b5217745a41f82e4950e952ba5e2a464736f6c63430005100032
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EthStation
Function name: fallback
PC address: 408
Estimated Gas Usage: 9287 - 118735
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:136

totalBalance += balance

--------------------
Initial State:

Account: [CREATOR], balance: 0x3fcf05540ffa3a053, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4fffffffe01c8800f, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x8e010000, decoded_data: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EthStation
Function name: fallback
PC address: 458
Estimated Gas Usage: 9414 - 119428
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:140

address(this).balance + totalBalance

--------------------
Initial State:

Account: [CREATOR], balance: 0x10044080100480, nonce:0, storage:{}
Account: [ATTACKER], balance: 0xefffffdffe, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x20014001, decoded_data: , value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EthStation
Function name: fallback
PC address: 593
Estimated Gas Usage: 9333 - 119161
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:144

maccounts[i].call.value(nTarget - balances[i])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0xd0c20008024c180, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40797f8005cc000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x90200010, decoded_data: , value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: EthStation
Function name: fallback
PC address: 593
Estimated Gas Usage: 9333 - 119161
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:144

maccounts[i].call.value(nTarget - balances[i])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x28000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x11010000000000020, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0xc0010801, decoded_data: , value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthStation
Function name: fallback
PC address: 593
Estimated Gas Usage: 9178 - 119006
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:144

maccounts[i].call.value(nTarget - balances[i])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x18346409ce9c8051e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000001400000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: EthStation
Function name: fallback
PC address: 593
Estimated Gas Usage: 9333 - 119161
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:144

maccounts[i].call.value(nTarget - balances[i])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x5555487619200000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x455556035e6e00000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x90400808, decoded_data: , value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: EthStation
Function name: fallback
PC address: 593
Estimated Gas Usage: 9333 - 119161
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:144

maccounts[i].call.value(nTarget - balances[i])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2c000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000000000000002, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0xc0000200, decoded_data: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EthStation
Function name: fallback
PC address: 619
Estimated Gas Usage: 9414 - 119428
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x101000000400000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x28080084040800000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x04800810, decoded_data: , value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: EthStation
Function name: fallback
PC address: 712
Estimated Gas Usage: 8124 - 82828
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:148

msg.sender.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20008201004200001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthStation
Function name: fallback
PC address: 712
Estimated Gas Usage: 9178 - 119006
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:148

msg.sender.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x41401000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef'],), value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: EthStation
Function name: fallback
PC address: 712
Estimated Gas Usage: 9333 - 119161
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:148

msg.sender.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x41f3f100000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20000000000002, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f'],), value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0xc0012040, decoded_data: , value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: EthStation
Function name: fallback
PC address: 1571
Estimated Gas Usage: 1975 - 2915
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:140

_balance(address(this).balance + totalBalance, balances)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EthStation
Function name: fallback
PC address: 1652
Estimated Gas Usage: 9414 - 119428
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:84

t += (_balances[i] - oTarget)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x467ffffffffffc001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010110, decoded_data: , value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: EthStation
Function name: fallback
PC address: 1677
Estimated Gas Usage: 6228 - 12188
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:81

for (uint256 i = 0; i < _balances.length; i++) {
            if (_balances[i] > oTarget) {
                d--;
                t += (_balances[i] - oTarget);
            }
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000004000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0xd1aff2e2809000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, decoded_data: (['0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EthStation
Function name: fallback
PC address: 1681
Estimated Gas Usage: 9277 - 118725
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:88

oTarget - (t / d)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20204048004220802, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40800100401e2087e, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addAccounts(address[]), txdata: 0xac71abde000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: (['0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f', '0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef'],), value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x08048000, decoded_data: , value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: EthStation
Function name: removeAccount(address,uint256)
PC address: 1849
Estimated Gas Usage: 1993 - 2418
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:27

function isOwner() public view returns (bool) {
        return msg.sender == _owner;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1002100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: removeAccount(address,uint256), txdata: 0x2918100303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: EthStation
Function name: accounts(uint256)
PC address: 3715
Estimated Gas Usage: 1111 - 1206
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:51

address payable[] public accounts

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: accounts(uint256), txdata: 0xf2a40db8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8, decoded_data: (83551938900651686109557102908229706058830106582266132483373315519435356289208,), value: 0x0


time_used: 36046.35086321831 seconds
#@contract_info_time
0x4e44b15a9df77ebb0f1b060ae8036c04cc773021.sol:0.5.16:EthStation:36046.35086321831:36100:60:36000
