++++ 0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol  :  0.5.0  :  DeflationToken ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 5036
['constructor']:writes at the last depth:['7', '0', '1', '2', '3', '6']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 97.97% coverage.
dynamic svars:['0', '1', '3', '4', '5']
static svars:['6', '8', '9', '2', '7']
Ending preprocessing.
preprocessing time(s): 104.02039122581482
contract coverage: 88.32%
name() is not reachable
symbol() is not reachable
Function Reads: State variables read in conditions
	airdrop(address,address[],uint256[]):['3', '5']
	name():[]
	approve(address,uint256):[]
	totalSupply():[]
	transferFrom(address,address,uint256):['3', '4', '5']
	decimals():[]
	increaseAllowance(address,uint256):[]
	burn(uint256):['3', '6']
	_mint(address,uint256):['2']
	unFreezeAccount(address):['2']
	balanceOf(address):[]
	burnFrom(address,uint256):['4']
	owner():[]
	InflationToken():[]
	symbol():[]
	confiscate(address,address,uint256):['2']
	inflationTokenAddress():[]
	decreaseAllowance(address,uint256):['4']
	findOnePercent(uint256):['7']
	transfer(address,uint256):['3', '5', '7']
	basePercent():[]
	_freezed(address):[]
	allowance(address,address):[]
	setInflationContractAddress(address):['2']
	freezeAccount(address):['2']
	transferOwnership(address):['2']
Function Writes: State variables written
	approve(address,uint256):['4']
	unFreezeAccount(address):['5']
	burn(uint256):['6', '3']
	setInflationContractAddress(address):['8', '9']
	_mint(address,uint256):['3', '6']
	increaseAllowance(address,uint256):['4']
	transferOwnership(address):['2']
	freezeAccount(address):['5']
	confiscate(address,address,uint256):['3']
	decreaseAllowance(address,uint256):['4']
	burnFrom(address,uint256):['4', '6', '3']
	transferFrom(address,address,uint256):['3', '6', '4']
	airdrop(address,address[],uint256[]):['3']
	transfer(address,uint256):['3', '6']
============================
iteration:3
targets:['transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'name()', 'symbol()']
['unFreezeAccount(address)']:writes at the last depth:['5']
['approve(address,uint256)']:writes at the last depth:['4']
['transferOwnership(address)']:writes at the last depth:['2']
['setInflationContractAddress(address)']:writes at the last depth:['8', '9']
['freezeAccount(address)']:writes at the last depth:['5']
['burn(uint256)']:writes at the last depth:['3', '6']
['increaseAllowance(address,uint256)']:writes at the last depth:['4']
['_mint(address,uint256)']:writes at the last depth:['3', '6']
['confiscate(address,address,uint256)']:writes at the last depth:['3']
['decreaseAllowance(address,uint256)']:writes at the last depth:['4']
contract coverage: 94.04%
============================
iteration:4
['decreaseAllowance(address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['5']
['decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['8', '9']
['decreaseAllowance(address,uint256)', 'freezeAccount(address)']:writes at the last depth:['5']
['decreaseAllowance(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '6']
['decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)', '_mint(address,uint256)']:writes at the last depth:['3', '6']
['decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['3']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['3', '6']
contract coverage: 94.04%
============================
iteration:5
contract coverage: 94.04%
============================
iteration:6
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['5']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['8', '9']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)']:writes at the last depth:['5']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)']:writes at the last depth:['3', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)']:writes at the last depth:['6', '3']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['3']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['6', '3']
contract coverage: 94.04%
============================
iteration:7
contract coverage: 94.04%
============================
iteration:8
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
contract coverage: 94.04%
============================
iteration:9
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'freezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'burn(uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'confiscate(address,address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
contract coverage: 94.04%
============================
iteration:10
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'freezeAccount(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'burn(uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', '_mint(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
contract coverage: 94.16%
============================
iteration:11
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'freezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'burn(uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)', 'burnFrom(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
contract coverage: 94.16%
============================
iteration:12
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'unFreezeAccount(address)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'approve(address,uint256)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'transferOwnership(address)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'freezeAccount(address)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'burn(uint256)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'confiscate(address,address,uint256)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'burn(uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['5', '', '9', '8', '3', '4', '2', '6']
contract coverage: 94.40%
============================
iteration:13
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'unFreezeAccount(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'approve(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'transferOwnership(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'setInflationContractAddress(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'freezeAccount(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'burn(uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'increaseAllowance(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', '_mint(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'confiscate(address,address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'freezeAccount(address)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
contract coverage: 94.40%
============================
iteration:14
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'unFreezeAccount(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'approve(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'transferOwnership(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'setInflationContractAddress(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'freezeAccount(address)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'burn(uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'increaseAllowance(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', '_mint(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'confiscate(address,address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'setInflationContractAddress(address)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['5', '6', '9', '8', '3', '2', '4']
contract coverage: 94.40%
============================
iteration:15
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'unFreezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'approve(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'setInflationContractAddress(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'freezeAccount(address)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'burn(uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'increaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['', '5', '6', '9', '8', '3', '2', '4']
contract coverage: 94.40%
============================
iteration:16
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'unFreezeAccount(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'setInflationContractAddress(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'freezeAccount(address)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'burn(uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)', 'burnFrom(address,uint256)']:writes at the last depth:['5', '', '6', '9', '8', '3', '2', '4']
contract coverage: 94.40%
============================
iteration:17
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unFreezeAccount(address)', 'unFreezeAccount(address)']:writes at the last depth:['5', '9', '3', '8', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unFreezeAccount(address)', 'approve(address,uint256)']:writes at the last depth:['5', '9', '3', '8', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unFreezeAccount(address)', 'transferOwnership(address)']:writes at the last depth:['5', '9', '3', '8', '2', '4']
['decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unFreezeAccount(address)', 'setInflationContractAddress(address)']:writes at the last depth:['5', '9', '3', '8', '2', '4']
contract coverage: 94.40%
============================
iteration:18
contract coverage: 94.40%
============================
iteration:19
contract coverage: 94.40%
============================
iteration:20
contract coverage: 94.40%
============================
iteration:21
contract coverage: 94.40%
============================
iteration:22
contract coverage: 94.40%
============================
iteration:23
contract coverage: 94.40%
============================
iteration:24
contract coverage: 94.40%
============================
iteration:25
contract coverage: 94.40%
============================
iteration:26
contract coverage: 94.40%
============================
iteration:27
contract coverage: 94.40%
============================
iteration:28
contract coverage: 94.40%
============================
iteration:29
contract coverage: 94.40%
============================
iteration:30
contract coverage: 94.40%
============================
iteration:31
contract coverage: 94.40%
============================
iteration:32
contract coverage: 94.40%
============================
iteration:33
contract coverage: 94.40%
============================
iteration:34
contract coverage: 94.40%
============================
iteration:35
contract coverage: 94.40%
#@statespace
5381 nodes, 5380 edges, 72905 total states
#@coverage
Achieved 7.37% coverage for code: 608060405260646007553480156200001657600080fd5b506040805190810160405280600781526020017f57656e4255524e000000000000000000000000000000000000000000000000008152506040805190810160405280600481526020017f57454e4200000000000000000000000000000000000000000000000000000000815250600682600090805190602001906200009d9291906200030d565b508160019080519060200190620000b69291906200030d565b5080600260006101000a81548160ff021916908360ff16021790555050505033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000137336501ba60d338006200013e640100000000026401000000009004565b50620003bc565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200019d57600080fd5b60008214151515620001ae57600080fd5b6200021082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002ee6401000000000262002866179091906401000000009004565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200027882600654620002ee6401000000000262002866179091906401000000009004565b6006819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008082840190508381101515156200030357fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200035057805160ff191683800117855562000381565b8280016001018555821562000381579182015b828111156200038057825182559160200191906001019062000363565b5b50905062000390919062000394565b5090565b620003b991905b80821115620003b55760008160009055506001016200039b565b5090565b90565b612ab980620003cc6000396000f3fe608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025ff12f1461015957806306fdde03146102d2578063095ea7b31461036257806318160ddd146103d557806323b872dd14610400578063313ce5671461049357806339509351146104c457806342966c68146105375780634e6ec2471461057257806353cc2fae146105e557806370a082311461063657806379cc67901461069b5780638da5cb5b146106f65780638fd168801461074d57806395d89b41146107a4578063960313bb14610834578063a2673503146108af578063a457c2d714610906578063a6a6860614610979578063a9059cbb146109c8578063c5ac0ded14610a3b578063d11674ed14610a66578063dd62ed3e14610acf578063e2d13f7b14610b54578063f26c159f14610ba5578063f2fde38b14610bf6575b600080fd5b34801561016557600080fd5b506102d06004803603606081101561017c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101b957600080fd5b8201836020820111156101cb57600080fd5b803590602001918460208302840111640100000000831117156101ed57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561024d57600080fd5b82018360208201111561025f57600080fd5b8035906020019184602083028401116401000000008311171561028157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610c47565b005b3480156102de57600080fd5b506102e7610cbd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032757808201518184015260208101905061030c565b50505050905090810190601f1680156103545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036e57600080fd5b506103bb6004803603604081101561038557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d5f565b604051808215151515815260200191505060405180910390f35b3480156103e157600080fd5b506103ea610e8c565b6040518082815260200191505060405180910390f35b34801561040c57600080fd5b506104796004803603606081101561042357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e96565b604051808215151515815260200191505060405180910390f35b34801561049f57600080fd5b506104a86114be565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104d057600080fd5b5061051d600480360360408110156104e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114d5565b604051808215151515815260200191505060405180910390f35b34801561054357600080fd5b506105706004803603602081101561055a57600080fd5b810190808035906020019092919050505061170c565b005b34801561057e57600080fd5b506105cb6004803603604081101561059557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611719565b604051808215151515815260200191505060405180910390f35b3480156105f157600080fd5b506106346004803603602081101561060857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118a7565b005b34801561064257600080fd5b506106856004803603602081101561065957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061195e565b6040518082815260200191505060405180910390f35b3480156106a757600080fd5b506106f4600480360360408110156106be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119a7565b005b34801561070257600080fd5b5061070b611b4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561075957600080fd5b50610762611b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107b057600080fd5b506107b9611b9b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f95780820151818401526020810190506107de565b50505050905090810190601f1680156108265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561084057600080fd5b506108ad6004803603606081101561085757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c3d565b005b3480156108bb57600080fd5b506108c4611e2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561091257600080fd5b5061095f6004803603604081101561092957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e53565b604051808215151515815260200191505060405180910390f35b34801561098557600080fd5b506109b26004803603602081101561099c57600080fd5b810190808035906020019092919050505061208a565b6040518082815260200191505060405180910390f35b3480156109d457600080fd5b50610a21600480360360408110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120db565b604051808215151515815260200191505060405180910390f35b348015610a4757600080fd5b50610a50612568565b6040518082815260200191505060405180910390f35b348015610a7257600080fd5b50610ab560048036036020811015610a8957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061256e565b604051808215151515815260200191505060405180910390f35b348015610adb57600080fd5b50610b3e60048036036040811015610af257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061258e565b6040518082815260200191505060405180910390f35b348015610b6057600080fd5b50610ba360048036036020811015610b7757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612615565b005b348015610bb157600080fd5b50610bf460048036036020811015610bc857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126f6565b005b348015610c0257600080fd5b50610c4560048036036020811015610c1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127ad565b005b80518251141515610c5757600080fd5b60008090505b8251811015610cb757610c9f848483815181101515610c7857fe5b906020019060200201518484815181101515610c9057fe5b90602001906020020151610e96565b1515610caa57600080fd5b8080600101915050610c5d565b50505050565b606060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d555780601f10610d2a57610100808354040283529160200191610d55565b820191906000526020600020905b815481529060010190602001808311610d3857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d9c57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600654905090565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610ee657600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610f7157600080fd5b60011515600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610fd157600080fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561103157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561106d57600080fd5b6110bf82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061110d8361208a565b90506000611124828561284d90919063ffffffff16565b905061117881600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111d08260065461284d90919063ffffffff16565b600681905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24787846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561129b57600080fd5b505af11580156112af573d6000803e3d6000fd5b505050506040513d60208110156112c557600080fd5b81019080805190602001909291905050505061136684600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001925050509392505050565b6000600260009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561151257600080fd5b6115a182600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6117163382612884565b50565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561177757600080fd5b6000821415151561178757600080fd5b6117d982600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118318260065461286690919063ffffffff16565b6006819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190357600080fd5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611a3257600080fd5b611ac181600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b4b8282612884565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c335780601f10611c0857610100808354040283529160200191611c33565b820191906000526020600020905b815481529060010190602001808311611c1657829003601f168201915b5050505050905090565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c9957600080fd5b611ceb81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d8081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611e9057600080fd5b611f1f82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000806120a2600754846129fc90919063ffffffff16565b905060006120cf6127106120c160075485612a3790919063ffffffff16565b612a7290919063ffffffff16565b90508092505050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561212b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561216757600080fd5b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515156121c757600080fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561222757600080fd5b60006122328361208a565b90506000612249828561284d90919063ffffffff16565b9050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24733846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561231057600080fd5b505af1158015612324573d6000803e3d6000fd5b505050506040513d602081101561233a57600080fd5b81019080805190602001909291905050505061239e84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243381600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061248b8260065461284d90919063ffffffff16565b6006819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019250505092915050565b60075481565b60056020528060005260406000206000915054906101000a900460ff1681565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561267157600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561275257600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561280957600080fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561285b57fe5b818303905092915050565b600080828401905083811015151561287a57fe5b8091505092915050565b6000811415151561289457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156128e257600080fd5b6128f78160065461284d90919063ffffffff16565b60068190555061294f81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080612a098484612866565b90506000612a1882600161284d565b9050612a2d612a278286612a72565b85612a37565b9250505092915050565b600080831415612a4a5760009050612a6c565b60008284029050828482811515612a5d57fe5b04141515612a6757fe5b809150505b92915050565b6000808284811515612a8057fe5b049050809150509291505056fea165627a7a7230582037aa8dd1e7876992f69c67b2d85e5f93a5fa8564e39f6d28e3dd647205f010960029
#@coverage
Achieved 94.40% coverage for code: 608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025ff12f1461015957806306fdde03146102d2578063095ea7b31461036257806318160ddd146103d557806323b872dd14610400578063313ce5671461049357806339509351146104c457806342966c68146105375780634e6ec2471461057257806353cc2fae146105e557806370a082311461063657806379cc67901461069b5780638da5cb5b146106f65780638fd168801461074d57806395d89b41146107a4578063960313bb14610834578063a2673503146108af578063a457c2d714610906578063a6a6860614610979578063a9059cbb146109c8578063c5ac0ded14610a3b578063d11674ed14610a66578063dd62ed3e14610acf578063e2d13f7b14610b54578063f26c159f14610ba5578063f2fde38b14610bf6575b600080fd5b34801561016557600080fd5b506102d06004803603606081101561017c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101b957600080fd5b8201836020820111156101cb57600080fd5b803590602001918460208302840111640100000000831117156101ed57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561024d57600080fd5b82018360208201111561025f57600080fd5b8035906020019184602083028401116401000000008311171561028157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610c47565b005b3480156102de57600080fd5b506102e7610cbd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032757808201518184015260208101905061030c565b50505050905090810190601f1680156103545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036e57600080fd5b506103bb6004803603604081101561038557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d5f565b604051808215151515815260200191505060405180910390f35b3480156103e157600080fd5b506103ea610e8c565b6040518082815260200191505060405180910390f35b34801561040c57600080fd5b506104796004803603606081101561042357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e96565b604051808215151515815260200191505060405180910390f35b34801561049f57600080fd5b506104a86114be565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104d057600080fd5b5061051d600480360360408110156104e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114d5565b604051808215151515815260200191505060405180910390f35b34801561054357600080fd5b506105706004803603602081101561055a57600080fd5b810190808035906020019092919050505061170c565b005b34801561057e57600080fd5b506105cb6004803603604081101561059557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611719565b604051808215151515815260200191505060405180910390f35b3480156105f157600080fd5b506106346004803603602081101561060857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118a7565b005b34801561064257600080fd5b506106856004803603602081101561065957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061195e565b6040518082815260200191505060405180910390f35b3480156106a757600080fd5b506106f4600480360360408110156106be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119a7565b005b34801561070257600080fd5b5061070b611b4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561075957600080fd5b50610762611b75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107b057600080fd5b506107b9611b9b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107f95780820151818401526020810190506107de565b50505050905090810190601f1680156108265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561084057600080fd5b506108ad6004803603606081101561085757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c3d565b005b3480156108bb57600080fd5b506108c4611e2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561091257600080fd5b5061095f6004803603604081101561092957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e53565b604051808215151515815260200191505060405180910390f35b34801561098557600080fd5b506109b26004803603602081101561099c57600080fd5b810190808035906020019092919050505061208a565b6040518082815260200191505060405180910390f35b3480156109d457600080fd5b50610a21600480360360408110156109eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120db565b604051808215151515815260200191505060405180910390f35b348015610a4757600080fd5b50610a50612568565b6040518082815260200191505060405180910390f35b348015610a7257600080fd5b50610ab560048036036020811015610a8957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061256e565b604051808215151515815260200191505060405180910390f35b348015610adb57600080fd5b50610b3e60048036036040811015610af257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061258e565b6040518082815260200191505060405180910390f35b348015610b6057600080fd5b50610ba360048036036020811015610b7757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612615565b005b348015610bb157600080fd5b50610bf460048036036020811015610bc857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126f6565b005b348015610c0257600080fd5b50610c4560048036036020811015610c1957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127ad565b005b80518251141515610c5757600080fd5b60008090505b8251811015610cb757610c9f848483815181101515610c7857fe5b906020019060200201518484815181101515610c9057fe5b90602001906020020151610e96565b1515610caa57600080fd5b8080600101915050610c5d565b50505050565b606060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d555780601f10610d2a57610100808354040283529160200191610d55565b820191906000526020600020905b815481529060010190602001808311610d3857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d9c57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600654905090565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610ee657600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610f7157600080fd5b60011515600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151515610fd157600080fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561103157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561106d57600080fd5b6110bf82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061110d8361208a565b90506000611124828561284d90919063ffffffff16565b905061117881600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111d08260065461284d90919063ffffffff16565b600681905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24787846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561129b57600080fd5b505af11580156112af573d6000803e3d6000fd5b505050506040513d60208110156112c557600080fd5b81019080805190602001909291905050505061136684600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001925050509392505050565b6000600260009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561151257600080fd5b6115a182600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6117163382612884565b50565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561177757600080fd5b6000821415151561178757600080fd5b6117d982600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118318260065461286690919063ffffffff16565b6006819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561190357600080fd5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611a3257600080fd5b611ac181600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b4b8282612884565b5050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c335780601f10611c0857610100808354040283529160200191611c33565b820191906000526020600020905b815481529060010190602001808311611c1657829003601f168201915b5050505050905090565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c9957600080fd5b611ceb81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d8081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611e9057600080fd5b611f1f82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000806120a2600754846129fc90919063ffffffff16565b905060006120cf6127106120c160075485612a3790919063ffffffff16565b612a7290919063ffffffff16565b90508092505050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561212b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561216757600080fd5b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515156121c757600080fd5b60011515600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415151561222757600080fd5b60006122328361208a565b90506000612249828561284d90919063ffffffff16565b9050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24733846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561231057600080fd5b505af1158015612324573d6000803e3d6000fd5b505050506040513d602081101561233a57600080fd5b81019080805190602001909291905050505061239e84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243381600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286690919063ffffffff16565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061248b8260065461284d90919063ffffffff16565b6006819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019250505092915050565b60075481565b60056020528060005260406000206000915054906101000a900460ff1681565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561267157600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561275257600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561280957600080fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561285b57fe5b818303905092915050565b600080828401905083811015151561287a57fe5b8091505092915050565b6000811415151561289457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156128e257600080fd5b6128f78160065461284d90919063ffffffff16565b60068190555061294f81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461284d90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080612a098484612866565b90506000612a1882600161284d565b9050612a2d612a278286612a72565b85612a37565b9250505092915050565b600080831415612a4a5760009050612a6c565b60008284029050828482811515612a5d57fe5b04141515612a6757fe5b809150505b92915050565b6000808284811515612a8057fe5b049050809150509291505056fea165627a7a7230582037aa8dd1e7876992f69c67b2d85e5f93a5fa8564e39f6d28e3dd647205f010960029
==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DeflationToken
Function name: decreaseAllowance(address,uint256)
PC address: 10330
Estimated Gas Usage: 1709 - 2184
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol:210

_allowed[msg.sender][spender].sub(subtractedValue)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: decreaseAllowance(address,uint256), txdata: 0xa457c2d700000000000000000000000080080280100480404080014020200140088020800880104004404004804080010000000000000000000000000000000000000000, decoded_data: ('0x8008028010048040408001402020014008802080', 3844771366783579759714137478593819684385928870975393587171417868434048811008), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DeflationToken
Function name: confiscate(address,address,uint256)
PC address: 10330
Estimated Gas Usage: 8546 - 29541
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol:136

_balances[_from].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: confiscate(address,address,uint256), txdata: 0x960313bb0000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000fa0000000000000000000000000000000002200003588024881480048080c280a230020822811042401308900442270449, decoded_data: ('0x0000020000000000000000000000000000000000', '0x000000fa00000000000000000000000000000000', 961164893439477593370633805198427895514384554559810817221636298394548241481), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DeflationToken
Function name: findOnePercent(uint256)
PC address: 10361
Estimated Gas Usage: 1522 - 1617
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol:38

add(a,m)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: findOnePercent(uint256), txdata: 0xa6a68606ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c, decoded_data: (115792089237316195423570985008687907853269984665640564039457584007913129639836,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DeflationToken
Function name: _mint(address,uint256)
PC address: 10361
Estimated Gas Usage: 8321 - 29126
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol:219

_totalSupply.add(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: _mint(address,uint256), txdata: 0x4e6ec2470000000000000000000000000000000000000000000000000000000000440100fffffffffffffffffffffffffffffffffffffffffffffffffffffec61004e648, decoded_data: ('0x0000000000000000000000000000000000440100', 115792089237316195423570985008687907853269984665640564039457584006564778665544), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DeflationToken
Function name: confiscate(address,address,uint256)
PC address: 10361
Estimated Gas Usage: 2455 - 3070
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol:135

_balances[_to].add(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: confiscate(address,address,uint256), txdata: 0x960313bb0000000000000000000000000000000200020020000000000000000200000008000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffeffffffffffffffffffffffffffffffffffffffffffffffffffffff00d3448e35, decoded_data: ('0x0000000200020020000000000000000200000008', '0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', 115792089237316195423570985008687907853269984665640564039457584006817162497589), value: 0x0


time_used: 36036.07521033287 seconds
#@contract_info_time
0x46f4e420c75401494a39b70653f4bbb88ad2d728.sol:0.5.0:DeflationToken:36036.07521033287:36100:60:36000
