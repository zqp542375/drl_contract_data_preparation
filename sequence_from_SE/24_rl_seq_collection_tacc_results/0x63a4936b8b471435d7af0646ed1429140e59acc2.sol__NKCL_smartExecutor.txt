++++ 0x63a4936b8b471435d7af0646ed1429140e59acc2.sol  :  0.4.24  :  NKCL ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 6625
['constructor']:writes at the last depth:['9', '2', '4', '5', '6', '6', '6', '7', '1', '0']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 95.23% coverage.
dynamic svars:['4', '5', '6', '0', '8', '10', '11', '12']
static svars:['9', '1', '13', '3', '2']
Ending preprocessing.
preprocessing time(s): 104.9441602230072
contract coverage: 87.18%
Function Reads: State variables read in conditions
	name():[]
	approve(address,uint256):['8']
	payer():[]
	totalSupply():[]
	addTokenLockDate(address,uint256,uint256):['2', '10']
	lockVolumeAddress(address):[]
	transferFrom(address,address,uint256):['2', '3', '9', '11', '0', '10']
	note():[]
	addressburn(address,uint256):['2', '0']
	noTokenLocked():[]
	decimals():[]
	Pay(address,uint256):['2', '3', '9', '11', '12', '0', '10']
	burn(uint256):['2', '0']
	transferEnabled():[]
	unlockAllTokens():['2']
	decreaseApproval(address,uint256):['8']
	setAdmin(address):['2', '3', '8']
	balanceOf(address):[]
	getMinLockedAmount(address):['10']
	canTransferIfLocked(address,uint256):['0', '10']
	addressLockTransfer(address,bool):['2']
	setPayFee(uint8):['2']
	owner():[]
	symbol():[]
	mint(uint256):['2', '0']
	LockTransferAddress(address):[]
	transfer(address,uint256):['2', '3', '9', '11', '0', '10']
	setPayFee(uint16):['2']
	setPayer(address):['2', '13']
	payfee():[]
	increaseApproval(address,uint256):[]
	allowance(address,address):[]
	addTokenLock(address,uint256):['2']
	enableTransfer(bool):['2']
	transferOwnership(address):['2']
	admin():[]
Function Writes: State variables written
	approve(address,uint256):['8']
	unlockAllTokens():['9']
	addTokenLockDate(address,uint256,uint256):['10']
	burn(uint256):['0', '1']
	decreaseApproval(address,uint256):['8']
	addressLockTransfer(address,bool):['11']
	setPayFee(uint8):['13']
	setPayFee(uint16):['13']
	enableTransfer(bool):['9']
	setAdmin(address):['3', '8']
	mint(uint256):['0', '1']
	addressburn(address,uint256):['0', '1']
	transferFrom(address,address,uint256):['0', '8']
	addTokenLock(address,uint256):['12']
	setPayer(address):['13']
	increaseApproval(address,uint256):['8']
	transferOwnership(address):['2']
	transfer(address,uint256):['0']
	Pay(address,uint256):['0']
============================
iteration:3
targets:['Pay(address,uint256)', 'getMinLockedAmount(address)', 'canTransferIfLocked(address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)', 'transfer(address,uint256)', 'setPayer(address)']
['unlockAllTokens()']:writes at the last depth:['9']
['approve(address,uint256)']:writes at the last depth:['8']
['approve(address,uint256)']:writes at the last depth:['8']
['setPayFee(uint16)']:writes at the last depth:['13']
['setPayFee(uint8)']:writes at the last depth:['13']
['enableTransfer(bool)']:writes at the last depth:['9']
['addressLockTransfer(address,bool)']:writes at the last depth:['11']
['setPayer(address)']:writes at the last depth:['13']
['burn(uint256)']:writes at the last depth:['1', '0']
['addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['10']
['decreaseApproval(address,uint256)']:writes at the last depth:['8']
['addTokenLock(address,uint256)']:writes at the last depth:['12']
['transferOwnership(address)']:writes at the last depth:['2']
['mint(uint256)']:writes at the last depth:['1', '0']
['addressburn(address,uint256)']:writes at the last depth:['1', '0']
['increaseApproval(address,uint256)']:writes at the last depth:['8']
['setAdmin(address)']:writes at the last depth:['8', '3']
['transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 87.18%
============================
iteration:4
['transfer(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'setAdmin(address)']:writes at the last depth:['8', '3', '0']
['transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 87.18%
============================
iteration:5
['transfer(address,uint256)', 'transfer(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)']:writes at the last depth:['', '8', '3']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 87.18%
============================
iteration:6
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)']:writes at the last depth:['', '8', '3']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 87.18%
============================
iteration:7
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferFrom(address,address,uint256)', 'setAdmin(address)']:writes at the last depth:['', '8', '3']
contract coverage: 88.05%
============================
iteration:8
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'addressburn(address,uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'setAdmin(address)']:writes at the last depth:['', '8', '3']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setAdmin(address)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 88.05%
============================
iteration:9
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'increaseApproval(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
contract coverage: 88.05%
============================
iteration:10
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'setAdmin(address)']:writes at the last depth:['', '8', '3']
['transfer(address,uint256)', 'transfer(address,uint256)', 'addressburn(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 88.05%
============================
iteration:11
contract coverage: 88.05%
============================
iteration:12
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['2']
['transfer(address,uint256)', 'transfer(address,uint256)', 'transferOwnership(address)', 'setAdmin(address)']:writes at the last depth:['', '8', '3']
contract coverage: 88.05%
============================
iteration:13
contract coverage: 88.05%
============================
iteration:14
contract coverage: 89.33%
============================
iteration:15
['transfer(address,uint256)', 'transfer(address,uint256)', 'addTokenLockDate(address,uint256,uint256)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
contract coverage: 89.33%
============================
iteration:16
contract coverage: 89.33%
============================
iteration:17
['transfer(address,uint256)', 'transfer(address,uint256)', 'setPayer(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setPayer(address)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'transfer(address,uint256)', 'setPayer(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
contract coverage: 89.33%
============================
iteration:18
contract coverage: 89.33%
============================
iteration:19
contract coverage: 89.33%
============================
iteration:20
contract coverage: 89.33%
============================
iteration:21
contract coverage: 89.33%
============================
iteration:22
contract coverage: 89.33%
============================
iteration:23
contract coverage: 89.33%
============================
iteration:24
['transfer(address,uint256)', 'transfer(address,uint256)', 'unlockAllTokens()', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'transfer(address,uint256)', 'unlockAllTokens()', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'transfer(address,uint256)', 'unlockAllTokens()', 'mint(uint256)']:writes at the last depth:['1', '0']
contract coverage: 89.33%
============================
iteration:25
contract coverage: 89.33%
============================
iteration:26
['transfer(address,uint256)', 'setAdmin(address)', 'unlockAllTokens()']:writes at the last depth:['9']
['transfer(address,uint256)', 'setAdmin(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'setAdmin(address)', 'approve(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'setAdmin(address)', 'setPayFee(uint16)']:writes at the last depth:['13']
['transfer(address,uint256)', 'setAdmin(address)', 'setPayFee(uint8)']:writes at the last depth:['13']
['transfer(address,uint256)', 'setAdmin(address)', 'enableTransfer(bool)']:writes at the last depth:['9']
['transfer(address,uint256)', 'setAdmin(address)', 'addressLockTransfer(address,bool)']:writes at the last depth:['11']
['transfer(address,uint256)', 'setAdmin(address)', 'setPayer(address)']:writes at the last depth:['13']
['transfer(address,uint256)', 'setAdmin(address)', 'burn(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'setAdmin(address)', 'decreaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'setAdmin(address)', 'addTokenLockDate(address,uint256,uint256)']:writes at the last depth:['', '10']
['transfer(address,uint256)', 'setAdmin(address)', 'addTokenLock(address,uint256)']:writes at the last depth:['12']
['transfer(address,uint256)', 'setAdmin(address)', 'mint(uint256)']:writes at the last depth:['1', '0']
['transfer(address,uint256)', 'setAdmin(address)', 'increaseApproval(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)', 'setAdmin(address)', 'transfer(address,uint256)']:writes at the last depth:['0']
contract coverage: 89.33%
============================
iteration:27
contract coverage: 89.33%
============================
iteration:28
contract coverage: 89.33%
============================
iteration:29
contract coverage: 89.33%
============================
iteration:30
contract coverage: 89.33%
============================
iteration:31
contract coverage: 89.33%
============================
iteration:32
contract coverage: 89.33%
============================
iteration:33
contract coverage: 89.33%
============================
iteration:34
contract coverage: 89.33%
============================
iteration:35
contract coverage: 89.33%
============================
iteration:36
contract coverage: 89.33%
============================
iteration:37
contract coverage: 89.33%
============================
iteration:38
contract coverage: 89.33%
============================
iteration:39
contract coverage: 89.33%
============================
iteration:40
contract coverage: 89.33%
============================
iteration:41
contract coverage: 89.33%
============================
iteration:42
contract coverage: 89.33%
============================
iteration:43
contract coverage: 89.33%
============================
iteration:44
contract coverage: 89.33%
============================
iteration:45
contract coverage: 89.33%
============================
iteration:46
contract coverage: 89.33%
============================
iteration:47
contract coverage: 89.33%
============================
iteration:48
contract coverage: 89.33%
============================
iteration:49
contract coverage: 89.33%
============================
iteration:50
contract coverage: 89.33%
============================
iteration:51
contract coverage: 89.33%
============================
iteration:52
contract coverage: 89.33%
============================
iteration:53
contract coverage: 89.33%
============================
iteration:54
contract coverage: 89.33%
============================
iteration:55
contract coverage: 89.33%
============================
iteration:56
contract coverage: 89.33%
============================
iteration:57
contract coverage: 89.33%
============================
iteration:58
contract coverage: 89.33%
============================
iteration:59
contract coverage: 89.33%
============================
iteration:60
contract coverage: 89.33%
============================
iteration:61
contract coverage: 89.33%
============================
iteration:62
contract coverage: 89.33%
============================
iteration:63
contract coverage: 89.33%
============================
iteration:64
contract coverage: 89.33%
============================
iteration:65
contract coverage: 89.33%
============================
iteration:66
contract coverage: 89.33%
============================
iteration:67
contract coverage: 89.33%
============================
iteration:68
contract coverage: 89.33%
============================
iteration:69
contract coverage: 89.33%
============================
iteration:70
contract coverage: 89.33%
============================
iteration:71
contract coverage: 89.33%
============================
iteration:72
contract coverage: 89.33%
============================
iteration:73
contract coverage: 89.33%
============================
iteration:74
contract coverage: 89.33%
============================
iteration:75
contract coverage: 89.33%
#@statespace
4610 nodes, 4609 edges, 68075 total states
#@coverage
Achieved 5.85% coverage for code: 60806040526000600960006101000a81548160ff0219169083151502179055506000600960016101000a81548160ff0219169083151502179055503480156200004757600080fd5b506040805190810160405280600481526020017f4e4b434c000000000000000000000000000000000000000000000000000000008152506040805190810160405280600481526020017f4e4b434c00000000000000000000000000000000000000000000000000000000815250606060405190810160405280603a81526020017f4e4b434c206973206120706572736f6e616c697a656420696d6d756e652d636181526020017f726520706c6174666f726d207573696e67204e4b2043656c6c2e000000000000815250601233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600490805190602001906200016c929190620002a7565b50826005908051906020019062000185929190620002a7565b5081600690805190602001906200019e929190620002a7565b5080600760006101000a81548160ff021916908360ff16021790555050505050601260ff16600a0a633b9aca0002600181905550600154600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001546040518082815260200191505060405180910390a362000356565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002ea57805160ff19168380011785556200031b565b828001600101855582156200031b579182015b828111156200031a578251825591602001919060010190620002fd565b5b5090506200032a91906200032e565b5090565b6200035391905b808211156200034f57600081600090555060010162000335565b5090565b90565b613d3080620003666000396000f3006080604052600436106101c2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101c7578063095ea7b314610257578063123119cd146102bc57806318160ddd146103135780631eee6a8d1461033e5780632292952c1461039557806323b872dd146103ec57806326d111f51461047157806329ba3177146105015780632a7806e41461054e578063313ce5671461057d578063357b676c146105ae57806342966c68146106135780634cd412d5146106405780635e0be6071461066f5780636618846314610686578063704b6c02146106eb57806370a082311461072e57806374ad74e91461078557806375d7e8ea146107dc5780637784f2c714610841578063781b551f146108905780638da5cb5b146108c057806395d89b4114610917578063a0712d68146109a7578063a802a2f4146109d4578063a9059cbb14610a2f578063b1c449e014610a94578063d55e697514610ac5578063d5e3fbb214610b08578063d73dd62314610b3b578063dd62ed3e14610ba0578063eb20ca4114610c17578063ef7ac0e514610c64578063f2fde38b14610c93578063f851a44014610cd6575b600080fd5b3480156101d357600080fd5b506101dc610d2d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021c578082015181840152602081019050610201565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026357600080fd5b506102a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d66565b604051808215151515815260200191505060405180910390f35b3480156102c857600080fd5b506102d1610eed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031f57600080fd5b50610328610f13565b6040518082815260200191505060405180910390f35b34801561034a57600080fd5b50610393600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f1d565b005b3480156103a157600080fd5b506103d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611172565b6040518082815260200191505060405180910390f35b3480156103f857600080fd5b50610457600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111bb565b604051808215151515815260200191505060405180910390f35b34801561047d57600080fd5b506104866116d4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104c65780820151818401526020810190506104ab565b50505050905090810190601f1680156104f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561050d57600080fd5b5061054c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611734565b005b34801561055a57600080fd5b50610563611b17565b604051808215151515815260200191505060405180910390f35b34801561058957600080fd5b50610592611b2a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156105ba57600080fd5b506105f9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b2f565b604051808215151515815260200191505060405180910390f35b34801561061f57600080fd5b5061063e60048036038101908080359060200190929190505050611db5565b005b34801561064c57600080fd5b50610655611f76565b604051808215151515815260200191505060405180910390f35b34801561067b57600080fd5b50610684611f89565b005b34801561069257600080fd5b506106d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612002565b604051808215151515815260200191505060405180910390f35b3480156106f757600080fd5b5061072c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612294565b005b34801561073a57600080fd5b5061076f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612348565b6040518082815260200191505060405180910390f35b34801561079157600080fd5b506107c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612390565b6040518082815260200191505060405180910390f35b3480156107e857600080fd5b50610827600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061248a565b604051808215151515815260200191505060405180910390f35b34801561084d57600080fd5b5061088e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506124ff565b005b34801561089c57600080fd5b506108be600480360381019080803560ff169060200190929190505050612644565b005b3480156108cc57600080fd5b506108d56126af565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561092357600080fd5b5061092c6126d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561096c578082015181840152602081019050610951565b50505050905090810190601f1680156109995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109b357600080fd5b506109d26004803603810190808035906020019092919050505061270e565b005b3480156109e057600080fd5b50610a15600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128cf565b604051808215151515815260200191505060405180910390f35b348015610a3b57600080fd5b50610a7a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612925565b604051808215151515815260200191505060405180910390f35b348015610aa057600080fd5b50610ac3600480360381019080803561ffff169060200190929190505050612bab565b005b348015610ad157600080fd5b50610b06600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c3c565b005b348015610b1457600080fd5b50610b1d612ca4565b604051808261ffff1661ffff16815260200191505060405180910390f35b348015610b4757600080fd5b50610b86600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612cb8565b604051808215151515815260200191505060405180910390f35b348015610bac57600080fd5b50610c01600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb4565b6040518082815260200191505060405180910390f35b348015610c2357600080fd5b50610c62600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612f3b565b005b348015610c7057600080fd5b50610c9160048036038101908080351515906020019092919050505061310a565b005b348015610c9f57600080fd5b50610cd4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613183565b005b348015610ce257600080fd5b50610ceb613395565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6040805190810160405280600481526020017f4e4b434c0000000000000000000000000000000000000000000000000000000081525081565b600080821480610df257506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b1515610dfd57600080fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156110005750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fff5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b151561100b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561104757600080fd5b60008311151561105657600080fd5b428211151561106457600080fd5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548211156110bb578181600001819055505b806001016040805190810160405280858152602001848152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508373ffffffffffffffffffffffffffffffffffffffff167fdbb3979b78c94a13fcfc98491a14180b56267350de06698a75ba88fa114f315c8385604051808381526020018281526020019250505060405180910390a250505050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111fa57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561123557600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561129257600080fd5b8483600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112d057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806113795750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806114215750600960009054906101000a900460ff1680156114205750600960019054906101000a900460ff168061141f5750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561140c575061140b828261248a565b5b801561141e575061141d828261248a565b5b5b5b5b151561142c57600080fd5b61147d856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611510856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115e185600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a3600193505050509392505050565b606060405190810160405280603a81526020017f4e4b434c206973206120706572736f6e616c697a656420696d6d756e652d636181526020017f726520706c6174666f726d207573696e67204e4b2043656c6c2e00000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561179057600080fd5b600081116040805190810160405280601481526020017f496e76616c696420746f6b656e2076616c756573000000000000000000000000815250901515611872576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561183757808201518184015260208101905061181c565b50505050905090810190601f1680156118645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156040805190810160405280601181526020017f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000815250901515611993576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561195857808201518184015260208101905061193d565b50505050905090810190601f1680156119855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506119e5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a3c816001546133bb90919063ffffffff16565b6001819055507f549fe1c7b7237a3f61e4860f69519c5d76c20fb3cb213bf84ba242f2d4e631018282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600960019054906101000a900460ff1681565b601281565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b6e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611ba957600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c0657600080fd5b3383600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c4457600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480611ced5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611d955750600960009054906101000a900460ff168015611d945750600960019054906101000a900460ff1680611d935750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015611d805750611d7f828261248a565b5b8015611d925750611d91828261248a565b5b5b5b5b1515611da057600080fd5b611daa86866133f2565b935050505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e1157600080fd5b611e62816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611eb9816001546133bb90919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b600960009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fe557600080fd5b6001600960016101000a81548160ff021916908315150217905550565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515612114576000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506121a8565b61212783826133bb90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122f257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123208261381e565b61232b816000610d66565b5061234382601260ff16600a0a633b9aca0002610d66565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008060008060009150600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905042816000015410156123f35760009550612480565b600094505b806001018054905085101561247c57806001018581548110151561241857fe5b9060005260206000209060020201600001549350806001018581548110151561243d57fe5b90600052602060002090600202016001015492504283111561246f5761246c84836133d490919063ffffffff16565b91505b84806001019550506123f8565b8195505b5050505050919050565b6000806124de836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b90506124e984611172565b6124f285612390565b0181101591505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561255b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561259757600080fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6dd5a7941ee5159148c1fc57fc90e228da8894ad0402921937808ff3387cecc482604051808215151515815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156126a057600080fd5b6126ac8160ff16612bab565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600481526020017f4e4b434c0000000000000000000000000000000000000000000000000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561276a57600080fd5b6127bb816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612812816001546133d490919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561296457600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561299f57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156129fc57600080fd5b3383600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612a3a57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480612ae35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80612b8b5750600960009054906101000a900460ff168015612b8a5750600960019054906101000a900460ff1680612b895750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015612b765750612b75828261248a565b5b8015612b885750612b87828261248a565b5b5b5b5b1515612b9657600080fd5b612ba08686613978565b935050505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c0757600080fd5b6127108161ffff1611151515612c1c57600080fd5b80600d60146101000a81548161ffff021916908361ffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c9857600080fd5b612ca181613ba6565b50565b600d60149054906101000a900461ffff1681565b6000612d4982600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561301d5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061301c5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b151561302857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561306457600080fd5b6000811015151561307457600080fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f9fdfba1cadc85a4f86fec37bf6eb2bda0beeeee783af62de3c2c59ddbf889d33826040518082815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561316657600080fd5b80600960006101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156131df57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561321b57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561327857600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156132d557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156133c957fe5b818303905092915050565b60008082840190508381101515156133e857fe5b8091505092915050565b60008060008073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561345457600080fd5b6000600d60149054906101000a900461ffff1661ffff161015151561347857600080fd5b60008411151561348757600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484111515156134d457600080fd5b6134e961271085613ca390919063ffffffff16565b9150613512600d60149054906101000a900461ffff1661ffff1683613cbe90919063ffffffff16565b915061352782856133bb90919063ffffffff16565b905061357a846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061360d816000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506136c282600080600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b600080600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561387a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156138d757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561393457600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156139b557600080fd5b6000821115156139c457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515613a1157600080fd5b613a62826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613af5826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613c0257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515613c5f57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808284811515613cb157fe5b0490508091505092915050565b6000806000841480613cd05750600083145b15613cde5760009150613cfd565b8284029050828482811515613cef57fe5b04141515613cf957fe5b8091505b50929150505600a165627a7a7230582066956d32629f62b1415644d271192c40c8894e1caa3bd01bf32d23e392b5de9e0029
#@coverage
Achieved 89.33% coverage for code: 6080604052600436106101c2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101c7578063095ea7b314610257578063123119cd146102bc57806318160ddd146103135780631eee6a8d1461033e5780632292952c1461039557806323b872dd146103ec57806326d111f51461047157806329ba3177146105015780632a7806e41461054e578063313ce5671461057d578063357b676c146105ae57806342966c68146106135780634cd412d5146106405780635e0be6071461066f5780636618846314610686578063704b6c02146106eb57806370a082311461072e57806374ad74e91461078557806375d7e8ea146107dc5780637784f2c714610841578063781b551f146108905780638da5cb5b146108c057806395d89b4114610917578063a0712d68146109a7578063a802a2f4146109d4578063a9059cbb14610a2f578063b1c449e014610a94578063d55e697514610ac5578063d5e3fbb214610b08578063d73dd62314610b3b578063dd62ed3e14610ba0578063eb20ca4114610c17578063ef7ac0e514610c64578063f2fde38b14610c93578063f851a44014610cd6575b600080fd5b3480156101d357600080fd5b506101dc610d2d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021c578082015181840152602081019050610201565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026357600080fd5b506102a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d66565b604051808215151515815260200191505060405180910390f35b3480156102c857600080fd5b506102d1610eed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031f57600080fd5b50610328610f13565b6040518082815260200191505060405180910390f35b34801561034a57600080fd5b50610393600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f1d565b005b3480156103a157600080fd5b506103d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611172565b6040518082815260200191505060405180910390f35b3480156103f857600080fd5b50610457600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111bb565b604051808215151515815260200191505060405180910390f35b34801561047d57600080fd5b506104866116d4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104c65780820151818401526020810190506104ab565b50505050905090810190601f1680156104f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561050d57600080fd5b5061054c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611734565b005b34801561055a57600080fd5b50610563611b17565b604051808215151515815260200191505060405180910390f35b34801561058957600080fd5b50610592611b2a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156105ba57600080fd5b506105f9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b2f565b604051808215151515815260200191505060405180910390f35b34801561061f57600080fd5b5061063e60048036038101908080359060200190929190505050611db5565b005b34801561064c57600080fd5b50610655611f76565b604051808215151515815260200191505060405180910390f35b34801561067b57600080fd5b50610684611f89565b005b34801561069257600080fd5b506106d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612002565b604051808215151515815260200191505060405180910390f35b3480156106f757600080fd5b5061072c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612294565b005b34801561073a57600080fd5b5061076f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612348565b6040518082815260200191505060405180910390f35b34801561079157600080fd5b506107c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612390565b6040518082815260200191505060405180910390f35b3480156107e857600080fd5b50610827600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061248a565b604051808215151515815260200191505060405180910390f35b34801561084d57600080fd5b5061088e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506124ff565b005b34801561089c57600080fd5b506108be600480360381019080803560ff169060200190929190505050612644565b005b3480156108cc57600080fd5b506108d56126af565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561092357600080fd5b5061092c6126d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561096c578082015181840152602081019050610951565b50505050905090810190601f1680156109995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109b357600080fd5b506109d26004803603810190808035906020019092919050505061270e565b005b3480156109e057600080fd5b50610a15600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128cf565b604051808215151515815260200191505060405180910390f35b348015610a3b57600080fd5b50610a7a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612925565b604051808215151515815260200191505060405180910390f35b348015610aa057600080fd5b50610ac3600480360381019080803561ffff169060200190929190505050612bab565b005b348015610ad157600080fd5b50610b06600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c3c565b005b348015610b1457600080fd5b50610b1d612ca4565b604051808261ffff1661ffff16815260200191505060405180910390f35b348015610b4757600080fd5b50610b86600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612cb8565b604051808215151515815260200191505060405180910390f35b348015610bac57600080fd5b50610c01600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eb4565b6040518082815260200191505060405180910390f35b348015610c2357600080fd5b50610c62600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612f3b565b005b348015610c7057600080fd5b50610c9160048036038101908080351515906020019092919050505061310a565b005b348015610c9f57600080fd5b50610cd4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613183565b005b348015610ce257600080fd5b50610ceb613395565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6040805190810160405280600481526020017f4e4b434c0000000000000000000000000000000000000000000000000000000081525081565b600080821480610df257506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b1515610dfd57600080fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156110005750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fff5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b151561100b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561104757600080fd5b60008311151561105657600080fd5b428211151561106457600080fd5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548211156110bb578181600001819055505b806001016040805190810160405280858152602001848152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508373ffffffffffffffffffffffffffffffffffffffff167fdbb3979b78c94a13fcfc98491a14180b56267350de06698a75ba88fa114f315c8385604051808381526020018281526020019250505060405180910390a250505050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111fa57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561123557600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561129257600080fd5b8483600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112d057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806113795750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806114215750600960009054906101000a900460ff1680156114205750600960019054906101000a900460ff168061141f5750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615801561140c575061140b828261248a565b5b801561141e575061141d828261248a565b5b5b5b5b151561142c57600080fd5b61147d856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611510856000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115e185600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a3600193505050509392505050565b606060405190810160405280603a81526020017f4e4b434c206973206120706572736f6e616c697a656420696d6d756e652d636181526020017f726520706c6174666f726d207573696e67204e4b2043656c6c2e00000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561179057600080fd5b600081116040805190810160405280601481526020017f496e76616c696420746f6b656e2076616c756573000000000000000000000000815250901515611872576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561183757808201518184015260208101905061181c565b50505050905090810190601f1680156118645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156040805190810160405280601181526020017f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000815250901515611993576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561195857808201518184015260208101905061193d565b50505050905090810190601f1680156119855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506119e5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a3c816001546133bb90919063ffffffff16565b6001819055507f549fe1c7b7237a3f61e4860f69519c5d76c20fb3cb213bf84ba242f2d4e631018282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600960019054906101000a900460ff1681565b601281565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b6e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611ba957600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c0657600080fd5b3383600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c4457600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480611ced5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611d955750600960009054906101000a900460ff168015611d945750600960019054906101000a900460ff1680611d935750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015611d805750611d7f828261248a565b5b8015611d925750611d91828261248a565b5b5b5b5b1515611da057600080fd5b611daa86866133f2565b935050505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e1157600080fd5b611e62816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611eb9816001546133bb90919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b600960009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fe557600080fd5b6001600960016101000a81548160ff021916908315150217905550565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515612114576000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506121a8565b61212783826133bb90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122f257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123208261381e565b61232b816000610d66565b5061234382601260ff16600a0a633b9aca0002610d66565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008060008060009150600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905042816000015410156123f35760009550612480565b600094505b806001018054905085101561247c57806001018581548110151561241857fe5b9060005260206000209060020201600001549350806001018581548110151561243d57fe5b90600052602060002090600202016001015492504283111561246f5761246c84836133d490919063ffffffff16565b91505b84806001019550506123f8565b8195505b5050505050919050565b6000806124de836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b90506124e984611172565b6124f285612390565b0181101591505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561255b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561259757600080fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f6dd5a7941ee5159148c1fc57fc90e228da8894ad0402921937808ff3387cecc482604051808215151515815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156126a057600080fd5b6126ac8160ff16612bab565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600481526020017f4e4b434c0000000000000000000000000000000000000000000000000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561276a57600080fd5b6127bb816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612812816001546133d490919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561296457600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561299f57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156129fc57600080fd5b3383600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612a3a57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480612ae35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80612b8b5750600960009054906101000a900460ff168015612b8a5750600960019054906101000a900460ff1680612b895750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015612b765750612b75828261248a565b5b8015612b885750612b87828261248a565b5b5b5b5b1515612b9657600080fd5b612ba08686613978565b935050505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c0757600080fd5b6127108161ffff1611151515612c1c57600080fd5b80600d60146101000a81548161ffff021916908361ffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c9857600080fd5b612ca181613ba6565b50565b600d60149054906101000a900461ffff1681565b6000612d4982600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561301d5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061301c5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b151561302857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561306457600080fd5b6000811015151561307457600080fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f9fdfba1cadc85a4f86fec37bf6eb2bda0beeeee783af62de3c2c59ddbf889d33826040518082815260200191505060405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561316657600080fd5b80600960006101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156131df57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561321b57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561327857600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156132d557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156133c957fe5b818303905092915050565b60008082840190508381101515156133e857fe5b8091505092915050565b60008060008073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561345457600080fd5b6000600d60149054906101000a900461ffff1661ffff161015151561347857600080fd5b60008411151561348757600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484111515156134d457600080fd5b6134e961271085613ca390919063ffffffff16565b9150613512600d60149054906101000a900461ffff1661ffff1683613cbe90919063ffffffff16565b915061352782856133bb90919063ffffffff16565b905061357a846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061360d816000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506136c282600080600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b600080600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561387a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156138d757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561393457600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156139b557600080fd5b6000821115156139c457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515613a1157600080fd5b613a62826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133bb90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613af5826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546133d490919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613c0257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515613c5f57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808284811515613cb157fe5b0490508091505092915050565b6000806000841480613cd05750600083145b15613cde5760009150613cfd565b8284029050828482811515613cef57fe5b04141515613cf957fe5b8091505b50929150505600a165627a7a7230582066956d32629f62b1415644d271192c40c8894e1caa3bd01bf32d23e392b5de9e0029
==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: NKCL
Function name: addTokenLockDate(address,uint256,uint256)
PC address: 4191
Estimated Gas Usage: 1359 - 1784
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:309

require(_release_time > now)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: addTokenLockDate(address,uint256,uint256), txdata: 0x1eee6a8d000000000000000000000000000004800802200240082020200000000020008001, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: NKCL
Function name: getMinLockedAmount(address)
PC address: 9194
Estimated Gas Usage: 1526 - 1811
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:286

if (lockState.latestReleaseTime < now) {
      return 0;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getMinLockedAmount(address), txdata: 0x74ad74e9, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: NKCL
Function name: burn(uint256)
PC address: 13256
Estimated Gas Usage: 2279 - 2894
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:180

balances[msg.sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: burn(uint256), txdata: 0x42966c6801, decoded_data: (452312848583266388373324160190187140051835877600158453279131187530910662656,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: NKCL
Function name: canTransferIfLocked(address,uint256)
PC address: 13256
Estimated Gas Usage: 1597 - 1882
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:396

balances[_sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: canTransferIfLocked(address,uint256), txdata: 0x75d7e8ea000000000000000000000000000000000000000000000000000000fe8000000009, decoded_data: ('0x000000000000000000000000000000fe80000000', 4070815637249397495359917441711684260466522898401426079512180687778195963904), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: NKCL
Function name: transferFrom(address,address,uint256)
PC address: 13256
Estimated Gas Usage: 15564 - 57459
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:415

allowed[_from][msg.sender].sub(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transferFrom(address,address,uint256), txdata: 0x23b872dd000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000002004000104000000000000000000000000000000000000000001, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', '0x0000000000000000000000000000002004000104', 309485009821345068724781056), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: NKCL
Function name: mint(uint256)
PC address: 13287
Estimated Gas Usage: 8577 - 29382
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:198

_totalSupply.add(_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000002aaaaaaaaaaaaa00aaaaaaaaaaaaaa00aaaaa8aa000000000000000000000000000000000000000001, decoded_data: ('0x2aaaaaaaaaaaaa00aaaaaaaaaaaaaa00aaaaa8aa', 309485009821345068724781056), value: 0x0
Caller: [CREATOR], function: mint(uint256), txdata: 0xa0712d68fffffffffffffffffffffffffffffffffffffffffd, decoded_data: (115792089237316195423570985008687907853269984665639635584428119972706955296768,), value: 0x0


time_used: 36036.280069351196 seconds
#@contract_info_time
0x63a4936b8b471435d7af0646ed1429140e59acc2.sol:0.4.24:NKCL:36036.280069351196:36100:60:36000
