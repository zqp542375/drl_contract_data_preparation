++++ 0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol  :  0.4.24  :  FiatTokenV1 ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 9058
['constructor']:writes at the last depth:['1', '9', '0']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 94.71% coverage.
dynamic svars:['4', '5', '3', '8', '7', '11', '10']
static svars:['1', '6', '2', '9', '0']
Ending preprocessing.
preprocessing time(s): 102.56029391288757
contract coverage: 67.61%
name() is not reachable
symbol() is not reachable
Function Reads: State variables read in conditions
	name():[]
	approve(address,uint256):['1', '3']
	initialize(string,string,uint8,address,address,address,address):['6']
	reclaimToken(address):['0']
	totalSupply():[]
	unBlacklist(address):['2', '3']
	transferFrom(address,address,uint256):['1', '3', '7', '8']
	decimals():[]
	masterMinter():[]
	increaseAllowance(address,uint256):['1', '3']
	unpause():['1']
	mint(address,uint256):['1', '10', '3', '11']
	burn(uint256):['1', '10', '3', '7', '9']
	updatePauser(address):['0']
	paused():[]
	balanceOf(address):[]
	lawEnforcementWipingBurn(address):['1', '2', '3', '7']
	pause():['1']
	minterAllowance(address):[]
	owner():[]
	symbol():[]
	pauser():[]
	decreaseMinterAllowance(address,uint256):['6', '10', '11']
	decreaseAllowance(address,uint256):['1', '3', '8']
	transfer(address,uint256):['1', '3', '7']
	updateMasterMinter(address):['0']
	isMinter(address):[]
	updateBlacklister(address):['0']
	blacklister():[]
	increaseMinterAllowance(address,uint256):['6']
	tokenFallback(address,uint256,bytes):[]
	allowance(address,address):[]
	transferOwnership(address):['0']
	blacklist(address):['2', '3']
	isBlacklisted(address):[]
Function Writes: State variables written
	unpause():['1']
	pause():['1']
	unBlacklist(address):['3']
	updatePauser(address):['1']
	approve(address,uint256):['8']
	updateMasterMinter(address):['6']
	updateBlacklister(address):['2']
	lawEnforcementWipingBurn(address):['9', '7']
	burn(uint256):['9', '7']
	increaseAllowance(address,uint256):['8']
	decreaseMinterAllowance(address,uint256):['11', '10']
	increaseMinterAllowance(address,uint256):['11', '10']
	blacklist(address):['3']
	transferOwnership(address):['0']
	mint(address,uint256):['9', '7']
	initialize(string,string,uint8,address,address,address,address):['4', '5']
	transfer(address,uint256):['7']
	decreaseAllowance(address,uint256):['8']
	transferFrom(address,address,uint256):['7']
============================
iteration:3
targets:['burn(uint256)', 'mint(address,uint256)', 'decreaseMinterAllowance(address,uint256)', 'lawEnforcementWipingBurn(address)', 'blacklist(address)', 'unBlacklist(address)', 'increaseMinterAllowance(address,uint256)', 'name()', 'symbol()', 'unpause()', 'pause()', 'approve(address,uint256)', 'transferFrom(address,address,uint256)', 'increaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transfer(address,uint256)', 'updatePauser(address)', 'updateMasterMinter(address)', 'updateBlacklister(address)', 'initialize(string,string,uint8,address,address,address,address)']
['updatePauser(address)']:writes at the last depth:['1']
['approve(address,uint256)']:writes at the last depth:['8']
['updateMasterMinter(address)']:writes at the last depth:['6']
['updateBlacklister(address)']:writes at the last depth:['2']
['reclaimToken(address)']:writes at the last depth:[]
['transferOwnership(address)']:writes at the last depth:['0']
['increaseAllowance(address,uint256)']:writes at the last depth:['8']
['decreaseAllowance(address,uint256)']:writes at the last depth:['8']
['transfer(address,uint256)']:writes at the last depth:['7']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['transferFrom(address,address,uint256)']:writes at the last depth:['8', '7']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
['initialize(string,string,uint8,address,address,address,address)']:writes at the last depth:['4', '6', '5', '1', '0', '2']
contract coverage: 77.80%
============================
iteration:4
['initialize(string,string,uint8,address,address,address,address)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'approve(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'updateMasterMinter(address)']:writes at the last depth:['6']
['initialize(string,string,uint8,address,address,address,address)', 'updateBlacklister(address)']:writes at the last depth:['2']
['initialize(string,string,uint8,address,address,address,address)', 'reclaimToken(address)']:writes at the last depth:[]
['initialize(string,string,uint8,address,address,address,address)', 'blacklist(address)']:writes at the last depth:['3']
['initialize(string,string,uint8,address,address,address,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['initialize(string,string,uint8,address,address,address,address)', 'increaseAllowance(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'increaseMinterAllowance(address,uint256)']:writes at the last depth:['11', '10']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transfer(address,uint256)']:writes at the last depth:['7']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)']:writes at the last depth:['8', '7']
contract coverage: 77.80%
============================
iteration:5
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'updateMasterMinter(address)']:writes at the last depth:['6']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'updateBlacklister(address)']:writes at the last depth:['2']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'reclaimToken(address)']:writes at the last depth:[]
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'blacklist(address)']:writes at the last depth:['3']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'increaseMinterAllowance(address,uint256)']:writes at the last depth:['11', '10']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['7']
contract coverage: 77.80%
============================
iteration:6
contract coverage: 77.80%
============================
iteration:7
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'updateMasterMinter(address)']:writes at the last depth:['6']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'updateBlacklister(address)']:writes at the last depth:['2']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'blacklist(address)']:writes at the last depth:['3']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseAllowance(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['8']
contract coverage: 77.80%
============================
iteration:8
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'increaseMinterAllowance(address,uint256)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'increaseMinterAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
contract coverage: 77.80%
============================
iteration:9
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'increaseAllowance(address,uint256)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'increaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
contract coverage: 77.80%
============================
iteration:10
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'updateBlacklister(address)']:writes at the last depth:['2']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'transferOwnership(address)', 'increaseAllowance(address,uint256)']:writes at the last depth:['8']
contract coverage: 77.80%
============================
iteration:11
contract coverage: 77.80%
============================
iteration:12
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'reclaimToken(address)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'reclaimToken(address)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'reclaimToken(address)', 'blacklist(address)']:writes at the last depth:['3']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'reclaimToken(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'reclaimToken(address)', 'increaseMinterAllowance(address,uint256)']:writes at the last depth:['11', '10']
contract coverage: 77.80%
============================
iteration:13
contract coverage: 77.80%
============================
iteration:14
contract coverage: 77.80%
============================
iteration:15
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'approve(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['8']
contract coverage: 77.80%
============================
iteration:16
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'updatePauser(address)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'updatePauser(address)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'updatePauser(address)', 'updatePauser(address)']:writes at the last depth:['1']
contract coverage: 80.32%
============================
iteration:17
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'pause()', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'pause()', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'pause()', 'increaseMinterAllowance(address,uint256)']:writes at the last depth:['11', '10']
contract coverage: 80.32%
============================
iteration:18
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'unpause()', 'approve(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'unpause()', 'updateMasterMinter(address)']:writes at the last depth:['6']
['initialize(string,string,uint8,address,address,address,address)', 'transferFrom(address,address,uint256)', 'unpause()', 'transferOwnership(address)']:writes at the last depth:['0']
contract coverage: 80.32%
============================
iteration:19
['initialize(string,string,uint8,address,address,address,address)', 'transfer(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
contract coverage: 80.32%
============================
iteration:20
contract coverage: 80.32%
============================
iteration:21
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'updateMasterMinter(address)']:writes at the last depth:['6']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'updateBlacklister(address)']:writes at the last depth:['2']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'reclaimToken(address)']:writes at the last depth:[]
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'blacklist(address)']:writes at the last depth:['3']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'increaseMinterAllowance(address,uint256)']:writes at the last depth:['11', '10']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'transfer(address,uint256)']:writes at the last depth:['7']
contract coverage: 80.32%
============================
iteration:22
contract coverage: 80.32%
============================
iteration:23
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'updatePauser(address)']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['8']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'updateMasterMinter(address)']:writes at the last depth:['6']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'reclaimToken(address)']:writes at the last depth:[]
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'blacklist(address)']:writes at the last depth:['3']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['0']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'decreaseAllowance(address,uint256)', 'increaseMinterAllowance(address,uint256)']:writes at the last depth:['11', '10']
contract coverage: 80.32%
============================
iteration:24
contract coverage: 80.32%
============================
iteration:25
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'unpause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'pause()']:writes at the last depth:['1']
['initialize(string,string,uint8,address,address,address,address)', 'decreaseAllowance(address,uint256)', 'transferOwnership(address)', 'approve(address,uint256)']:writes at the last depth:['8']
contract coverage: 80.32%
============================
iteration:26
contract coverage: 80.32%
============================
iteration:27
contract coverage: 80.32%
============================
iteration:28
contract coverage: 80.32%
============================
iteration:29
contract coverage: 80.32%
============================
iteration:30
contract coverage: 80.32%
============================
iteration:31
contract coverage: 80.32%
============================
iteration:32
contract coverage: 80.32%
============================
iteration:33
contract coverage: 80.32%
============================
iteration:34
contract coverage: 80.32%
============================
iteration:35
contract coverage: 80.32%
============================
iteration:36
contract coverage: 80.32%
============================
iteration:37
contract coverage: 80.32%
============================
iteration:38
contract coverage: 80.32%
============================
iteration:39
contract coverage: 80.32%
============================
iteration:40
contract coverage: 80.32%
============================
iteration:41
contract coverage: 80.32%
============================
iteration:42
contract coverage: 80.32%
============================
iteration:43
contract coverage: 80.32%
============================
iteration:44
contract coverage: 80.32%
============================
iteration:45
contract coverage: 80.32%
============================
iteration:46
contract coverage: 80.32%
============================
iteration:47
contract coverage: 80.32%
============================
iteration:48
contract coverage: 80.32%
============================
iteration:49
contract coverage: 80.32%
============================
iteration:50
contract coverage: 80.32%
============================
iteration:51
contract coverage: 80.32%
============================
iteration:52
contract coverage: 80.32%
============================
iteration:53
contract coverage: 80.32%
============================
iteration:54
contract coverage: 80.32%
============================
iteration:55
contract coverage: 80.32%
============================
iteration:56
contract coverage: 80.32%
============================
iteration:57
contract coverage: 80.32%
============================
iteration:58
contract coverage: 80.32%
============================
iteration:59
contract coverage: 80.32%
============================
iteration:60
contract coverage: 80.32%
============================
iteration:61
contract coverage: 80.32%
============================
iteration:62
contract coverage: 80.32%
============================
iteration:63
contract coverage: 80.32%
============================
iteration:64
contract coverage: 80.32%
============================
iteration:65
contract coverage: 80.32%
============================
iteration:66
contract coverage: 80.32%
============================
iteration:67
contract coverage: 80.32%
============================
iteration:68
contract coverage: 80.32%
============================
iteration:69
contract coverage: 80.32%
#@statespace
3970 nodes, 3969 edges, 69748 total states
#@coverage
Achieved 1.06% coverage for code: 
#@coverage
Achieved 80.32% coverage for code: 
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 729
Estimated Gas Usage: 69696 - 318023
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:261

function initialize(
        string _name,
        string _symbol,
        uint8 _decimals,
        address _masterMinter,
        address _pauser,
        address _blacklister,
        address _owner
    ) public {
        require(!initialized, "already initialized!");
        require(_masterMinter != address(0), "master minter can't be 0x0");
        require(_pauser != address(0), "pauser can't be 0x0");
        require(_blacklister != address(0), "blacklister can't be 0x0");
        require(_owner != address(0), "owner can't be 0x0");

        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        masterMinter = _masterMinter;
        pauser = _pauser;
        blacklister = _blacklister;
        setOwner(_owner);
        initialized = true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936baffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdcc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004200420010108010202020101010410100801010000000000000000000000000101020201804001040820800120000180020108000000000000000000000000010101800401040110020101010410400101011000000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 735
Estimated Gas Usage: 59556 - 267697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:261

function initialize(
        string _name,
        string _symbol,
        uint8 _decimals,
        address _masterMinter,
        address _pauser,
        address _blacklister,
        address _owner
    ) public {
        require(!initialized, "already initialized!");
        require(_masterMinter != address(0), "master minter can't be 0x0");
        require(_pauser != address(0), "pauser can't be 0x0");
        require(_blacklister != address(0), "blacklister can't be 0x0");
        require(_owner != address(0), "owner can't be 0x0");

        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        masterMinter = _masterMinter;
        pauser = _pauser;
        blacklister = _blacklister;
        setOwner(_owner);
        initialized = true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba8000000000000000000000000000000000000000000000000000000000000000800402fffffffffffffffffffffffffffffc00000000000000000000008000c6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004010101010101018001080101010101010101010000000000000000000000000101010101010101400101010201010101010201000000000000000000000000010101800101010101012001000101010201010100000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 744
Estimated Gas Usage: 59556 - 267697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:261

function initialize(
        string _name,
        string _symbol,
        uint8 _decimals,
        address _masterMinter,
        address _pauser,
        address _blacklister,
        address _owner
    ) public {
        require(!initialized, "already initialized!");
        require(_masterMinter != address(0), "master minter can't be 0x0");
        require(_pauser != address(0), "pauser can't be 0x0");
        require(_blacklister != address(0), "blacklister can't be 0x0");
        require(_owner != address(0), "owner can't be 0x0");

        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        masterMinter = _masterMinter;
        pauser = _pauser;
        blacklister = _blacklister;
        setOwner(_owner);
        initialized = true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba8a000d00090841011110000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010404010101010101010101040000000000000000000000000101010004010101010101012001010101800101000000000000000000000000010801010101010101010101010401010101010100000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 750
Estimated Gas Usage: 59556 - 267697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:261

function initialize(
        string _name,
        string _symbol,
        uint8 _decimals,
        address _masterMinter,
        address _pauser,
        address _blacklister,
        address _owner
    ) public {
        require(!initialized, "already initialized!");
        require(_masterMinter != address(0), "master minter can't be 0x0");
        require(_pauser != address(0), "pauser can't be 0x0");
        require(_blacklister != address(0), "blacklister can't be 0x0");
        require(_owner != address(0), "owner can't be 0x0");

        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        masterMinter = _masterMinter;
        pauser = _pauser;
        blacklister = _blacklister;
        setOwner(_owner);
        initialized = true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba8000000000000000000000000004bb15c30a240008000000000000000000101180000000000000000000000000000000000000000000000000000000000082d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010018020202002800408040204200202020102100000000000000000000000000102010120080108042020010801010440084040000000000000000000000000042008400101010110012040010100200880400800000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 820
Estimated Gas Usage: 59556 - 267697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:261

function initialize(
        string _name,
        string _symbol,
        uint8 _decimals,
        address _masterMinter,
        address _pauser,
        address _blacklister,
        address _owner
    ) public {
        require(!initialized, "already initialized!");
        require(_masterMinter != address(0), "master minter can't be 0x0");
        require(_pauser != address(0), "pauser can't be 0x0");
        require(_blacklister != address(0), "blacklister can't be 0x0");
        require(_owner != address(0), "owner can't be 0x0");

        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        masterMinter = _masterMinter;
        pauser = _pauser;
        blacklister = _blacklister;
        setOwner(_owner);
        initialized = true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba8001004001808080808080000304020800020400080080000080f01000801878800000000000000000000000a8aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101024010028001040101400101020204080101000000000000000000000000ffffffffffffffffffffffffffffffffffffff0c000000000000000000000000010104020101010101010101022008010101010100000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: name()
PC address: 3546
Estimated Gas Usage: 4177 - 6296
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:224

string public name

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba8000000000000000000000000000000000000000000000000000000000000000808805c508900000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080400404010104020101020101010101020401040000000000000000000000000280800104020401040001018001010101080101000000000000000000000000400102010101400101010101010108020120040100000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: name()
PC address: 3598
Estimated Gas Usage: 4177 - 6296
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:224

string public name

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba8000000000000000000000000000000000000000000000000000000000000000808805c508900000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080400404010104020101020101010101020401040000000000000000000000000280800104020401040001018001010101080101000000000000000000000000400102010101400101010101010108020120040100000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FiatTokenV1
Function name: reclaimToken(address)
PC address: 5850
Estimated Gas Usage: 5471 - 75445
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:520

token.balanceOf(this)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reclaimToken(address), txdata: 0x17ffc320000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FiatTokenV1
Function name: reclaimToken(address)
PC address: 6081
Estimated Gas Usage: 5471 - 75445
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:521

token.transfer(owner(), balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reclaimToken(address), txdata: 0x17ffc320000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FiatTokenV1
Function name: reclaimToken(address)
PC address: 6081
Estimated Gas Usage: 5471 - 75445
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:521

token.transfer(owner(), balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reclaimToken(address), txdata: 0x17ffc32000000000000000000000000001, decoded_data: ('0x0100000000000000000000000000000000000000',), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FiatTokenV1
Function name: reclaimToken(address)
PC address: 6081
Estimated Gas Usage: 5471 - 75445
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:521

token.transfer(owner(), balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reclaimToken(address), txdata: 0x17ffc320000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FiatTokenV1
Function name: reclaimToken(address)
PC address: 14903
Estimated Gas Usage: 5471 - 75445
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:69

_owner

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: reclaimToken(address), txdata: 0x17ffc320000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: ('0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef',), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: symbol()
PC address: 14953
Estimated Gas Usage: 4617 - 6736
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:225

string public symbol

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba80023805214800000001d7cb0d114934820f44889400000000000000003000bd80001014e202108320013c561000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040010101800140040101010201010108010101010000000000000000000000000108020101100108010108010120010102010104000000000000000000000000010101010101010101010101010101010101010100000000000000000000000010, value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatTokenV1
Function name: symbol()
PC address: 15005
Estimated Gas Usage: 4617 - 6736
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:225

string public symbol

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba80023805214800000001d7cb0d114934820f44889400000000000000003000bd80001014e202108320013c561000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040010101800140040101010201010108010101010000000000000000000000000108020101100108010108010120010102010104000000000000000000000000010101010101010101010101010101010101010100000000000000000000000010, value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: FiatTokenV1
Function name: decreaseAllowance(address,uint256)
PC address: 22122
Estimated Gas Usage: 4575 - 6420
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:366

allowed[msg.sender][_spender].sub(
            _subtractedValue
        )

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: decreaseAllowance(address,uint256), txdata: 0xa457c2d700000000000000000000000000000000000000000000000800000000000000000a, decoded_data: ('0x0000000000000000000000080000000000000000', 4523128485832663883733241601901871400518358776001584532791311875309106626560), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 22230
Estimated Gas Usage: 59556 - 267697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936bac0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101012001010000000000000000000000000102010101010101014001010101010101010201000000000000000000000000010101010101010101010101800101010101010100000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: FiatTokenV1
Function name: initialize(string,string,uint8,address,address,address,address)
PC address: 22244
Estimated Gas Usage: 59556 - 267697
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(string,string,uint8,address,address,address,address), txdata: 0x147936ba00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe100000000000000000000000004010101010208010201084002040101040102040000000000000000000000000101010102010140010104010101010101010880000000000000000000000000010101010101010801800401014010010101010100000000000000000000000001, value: 0x0


time_used: 36055.40709733963 seconds
#@contract_info_time
0x2e21613c4eed4a5af1e9223edcfc8640138da7fb.sol:0.4.24:FiatTokenV1:36055.40709733963:36100:60:36000
