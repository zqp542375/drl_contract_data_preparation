++++ 0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol  :  0.5.13  :  POOL ++++
1238217623414929882123654808274689464312769072814 is added into actors.
Starting preprocessing.
number of genesis states: 1
total instructions: 4982
['constructor']:writes at the last depth:['0', '5']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 67.70% coverage.
dynamic svars:[]
static svars:['1', '4', '2', '3', '0', '5']
Ending preprocessing.
preprocessing time(s): 104.37597894668579
contract coverage: 16.70%
getair(address) is not reachable
delair() is not reachable
setair(uint256,uint256,uint256) is not reachable
Function Reads: State variables read in conditions
	delair():[]
	getair(address):[]
	setreg(address):['0']
	setdel(address):['0']
	setrot(address):['0']
	setuni(address):['0']
	setair(uint256,uint256,uint256):[]
Function Writes: State variables written
	setrot(address):['1']
	setuni(address):['4']
	setreg(address):['2']
	setdel(address):['3']
============================
iteration:3
targets:['getair(address)', 'delair()', 'setair(uint256,uint256,uint256)']
['setrot(address)']:writes at the last depth:['1']
['setuni(address)']:writes at the last depth:['4']
['setreg(address)']:writes at the last depth:['2']
['setdel(address)']:writes at the last depth:['3']
contract coverage: 42.95%
============================
iteration:4
['setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 42.95%
============================
iteration:5
['setdel(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 42.95%
============================
iteration:6
['setdel(address)', 'setdel(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setdel(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setdel(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setdel(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 49.32%
============================
iteration:7
['setdel(address)', 'setdel(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setdel(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setdel(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setdel(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 49.32%
============================
iteration:8
['setdel(address)', 'setdel(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setdel(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setdel(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setdel(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 52.47%
============================
iteration:9
['setdel(address)', 'setdel(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setdel(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setdel(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setdel(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setdel(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 52.47%
============================
iteration:10
['setdel(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 52.47%
============================
iteration:11
['setdel(address)', 'setreg(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setreg(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setreg(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setreg(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 52.47%
============================
iteration:12
['setdel(address)', 'setreg(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setreg(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setreg(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setreg(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 52.47%
============================
iteration:13
['setdel(address)', 'setreg(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setreg(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setreg(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setreg(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.58%
============================
iteration:14
['setdel(address)', 'setreg(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setreg(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setreg(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setreg(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setreg(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setreg(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
['setdel(address)', 'setreg(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
['setdel(address)', 'setreg(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
['setdel(address)', 'setreg(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
['setdel(address)', 'setreg(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
contract coverage: 82.58%
============================
iteration:15
['setdel(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.58%
============================
iteration:16
['setdel(address)', 'setuni(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setuni(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setuni(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setuni(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.58%
============================
iteration:17
['setdel(address)', 'setuni(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setuni(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setuni(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setuni(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.58%
============================
iteration:18
['setdel(address)', 'setuni(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setuni(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setuni(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setuni(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.58%
============================
iteration:19
['setdel(address)', 'setuni(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setuni(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setuni(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setuni(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setuni(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setuni(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.58%
============================
iteration:20
['setdel(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.58%
============================
iteration:21
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.58%
============================
iteration:22
['setdel(address)', 'setrot(address)', 'delair()', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'delair()', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'delair()', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'delair()', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'delair()', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'delair()', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.58%
============================
iteration:23
['setdel(address)', 'setrot(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'setdel(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:24
['setdel(address)', 'setrot(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'setreg(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setreg(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:25
['setdel(address)', 'setrot(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'setuni(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setuni(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:26
['setdel(address)', 'setrot(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setdel(address)', 'setrot(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setdel(address)', 'setrot(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setdel(address)', 'setrot(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setdel(address)', 'setrot(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setdel(address)', 'setrot(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:27
['setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:28
['setreg(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:29
['setreg(address)', 'setdel(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setdel(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setdel(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setdel(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:30
['setreg(address)', 'setdel(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setdel(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setdel(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setdel(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:31
['setreg(address)', 'setdel(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setdel(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setdel(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setdel(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:32
['setreg(address)', 'setdel(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setdel(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setdel(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setdel(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setreg(address)', 'setdel(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setreg(address)', 'setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
['setreg(address)', 'setdel(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
['setreg(address)', 'setdel(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
['setreg(address)', 'setdel(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
['setreg(address)', 'setdel(address)', 'setrot(address)', 'getair(address)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:33
['setreg(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:34
['setreg(address)', 'setreg(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setreg(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setreg(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setreg(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:35
['setreg(address)', 'setreg(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setreg(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setreg(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setreg(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:36
['setreg(address)', 'setreg(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setreg(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setreg(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setreg(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:37
['setreg(address)', 'setreg(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setreg(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setreg(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setreg(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:38
['setreg(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:39
['setreg(address)', 'setuni(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setuni(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setuni(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setuni(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:40
['setreg(address)', 'setuni(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setuni(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setuni(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setuni(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:41
['setreg(address)', 'setuni(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setuni(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setuni(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setuni(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:42
['setreg(address)', 'setuni(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setuni(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setuni(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setuni(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:43
['setreg(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:44
['setreg(address)', 'setrot(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setrot(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setrot(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setrot(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
['setreg(address)', 'setrot(address)', 'setdel(address)', 'delair()']:writes at the last depth:[]
['setreg(address)', 'setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
['setreg(address)', 'setrot(address)', 'setdel(address)', 'getair(address)']:writes at the last depth:[]
['setreg(address)', 'setrot(address)', 'setdel(address)', 'getair(address)']:writes at the last depth:[]
['setreg(address)', 'setrot(address)', 'setdel(address)', 'getair(address)']:writes at the last depth:[]
['setreg(address)', 'setrot(address)', 'setdel(address)', 'getair(address)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:45
['setreg(address)', 'setrot(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setrot(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setrot(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setrot(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:46
['setreg(address)', 'setrot(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setrot(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setrot(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setrot(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:47
['setreg(address)', 'setrot(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setreg(address)', 'setrot(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setreg(address)', 'setrot(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setreg(address)', 'setrot(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:48
['setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:49
['setuni(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:50
['setuni(address)', 'setdel(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setdel(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setdel(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setdel(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:51
['setuni(address)', 'setdel(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setdel(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setdel(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setdel(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:52
['setuni(address)', 'setdel(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setdel(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setdel(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setdel(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:53
['setuni(address)', 'setdel(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setdel(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setdel(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setdel(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
['setuni(address)', 'setdel(address)', 'setrot(address)', 'delair()']:writes at the last depth:[]
['setuni(address)', 'setdel(address)', 'setrot(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:54
['setuni(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:55
['setuni(address)', 'setreg(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setreg(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setreg(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setreg(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:56
['setuni(address)', 'setreg(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setreg(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setreg(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setreg(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:57
['setuni(address)', 'setreg(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setreg(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setreg(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setreg(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:58
['setuni(address)', 'setreg(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setreg(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setreg(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setreg(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:59
['setuni(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:60
['setuni(address)', 'setuni(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setuni(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setuni(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setuni(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:61
['setuni(address)', 'setuni(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setuni(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setuni(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setuni(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:62
['setuni(address)', 'setuni(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setuni(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setuni(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setuni(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:63
['setuni(address)', 'setuni(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setuni(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setuni(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setuni(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:64
['setuni(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:65
['setuni(address)', 'setrot(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setrot(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setrot(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setrot(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
['setuni(address)', 'setrot(address)', 'setdel(address)', 'delair()']:writes at the last depth:[]
['setuni(address)', 'setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:66
['setuni(address)', 'setrot(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setrot(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setrot(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setrot(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:67
['setuni(address)', 'setrot(address)', 'setuni(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setrot(address)', 'setuni(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setrot(address)', 'setuni(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setrot(address)', 'setuni(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:68
['setuni(address)', 'setrot(address)', 'setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setuni(address)', 'setrot(address)', 'setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setuni(address)', 'setrot(address)', 'setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setuni(address)', 'setrot(address)', 'setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:69
['setrot(address)', 'setrot(address)']:writes at the last depth:['1']
['setrot(address)', 'setuni(address)']:writes at the last depth:['4']
['setrot(address)', 'setreg(address)']:writes at the last depth:['2']
['setrot(address)', 'setdel(address)']:writes at the last depth:['3']
contract coverage: 82.64%
============================
iteration:70
['setrot(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setrot(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setrot(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setrot(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
['setrot(address)', 'setdel(address)', 'delair()']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:71
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)', 'setrot(address)']:writes at the last depth:['1']
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)', 'setuni(address)']:writes at the last depth:['4']
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)', 'setreg(address)']:writes at the last depth:['2']
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)', 'setdel(address)']:writes at the last depth:['3']
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)', 'delair()']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:72
['setrot(address)', 'setdel(address)', 'delair()', 'setrot(address)']:writes at the last depth:['1']
['setrot(address)', 'setdel(address)', 'delair()', 'setuni(address)']:writes at the last depth:['4']
['setrot(address)', 'setdel(address)', 'delair()', 'setreg(address)']:writes at the last depth:['2']
['setrot(address)', 'setdel(address)', 'delair()', 'setdel(address)']:writes at the last depth:['3']
['setrot(address)', 'setdel(address)', 'delair()', 'delair()']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'delair()', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:73
['setrot(address)', 'setdel(address)', 'setdel(address)', 'setrot(address)']:writes at the last depth:['1']
['setrot(address)', 'setdel(address)', 'setdel(address)', 'setuni(address)']:writes at the last depth:['4']
['setrot(address)', 'setdel(address)', 'setdel(address)', 'setreg(address)']:writes at the last depth:['2']
['setrot(address)', 'setdel(address)', 'setdel(address)', 'setdel(address)']:writes at the last depth:['3']
['setrot(address)', 'setdel(address)', 'setdel(address)', 'delair()']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setdel(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:74
['setrot(address)', 'setdel(address)', 'setreg(address)', 'setrot(address)']:writes at the last depth:['1']
['setrot(address)', 'setdel(address)', 'setreg(address)', 'setuni(address)']:writes at the last depth:['4']
['setrot(address)', 'setdel(address)', 'setreg(address)', 'setreg(address)']:writes at the last depth:['2']
['setrot(address)', 'setdel(address)', 'setreg(address)', 'setdel(address)']:writes at the last depth:['3']
['setrot(address)', 'setdel(address)', 'setreg(address)', 'delair()']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setreg(address)', 'setair(uint256,uint256,uint256)']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
['setrot(address)', 'setdel(address)', 'setreg(address)', 'getair(address)']:writes at the last depth:[]
contract coverage: 82.64%
============================
iteration:75
contract coverage: 82.64%
============================
iteration:76
contract coverage: 82.64%
============================
iteration:77
contract coverage: 82.64%
============================
iteration:78
contract coverage: 82.64%
============================
iteration:79
contract coverage: 82.64%
#@statespace
12351 nodes, 12350 edges, 168434 total states
#@coverage
Achieved 1.23% coverage for code: 
#@coverage
Achieved 82.64% coverage for code: 608060405234801561001057600080fd5b506004361061007c5760003560e01c80639abcc63a1161005b5780639abcc63a14610193578063a76dcf2b146101b5578063b44dd78514610211578063eda72bfa1461026d5761007c565b80620ef2b21461008157806376677d19146100dd5780638f40e66914610139575b600080fd5b6100c36004803603602081101561009757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c9565b604051808215151515815260200191505060405180910390f35b61011f600480360360208110156100f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061036e565b604051808215151515815260200191505060405180910390f35b6101796004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610413565b604051808215151515815260200191505060405180910390f35b61019b6108d2565b604051808215151515815260200191505060405180910390f35b6101f7600480360360208110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c8c565b604051808215151515815260200191505060405180910390f35b6102536004803603602081101561022757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123ca565b604051808215151515815260200191505060405180910390f35b6102af6004803603602081101561028357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061246f565b604051808215151515815260200191505060405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461032457600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c957600080fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000620f423f841180156104295750620f423f83115b801561050e57506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166332390c67336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156104d157600080fd5b505afa1580156104e5573d6000803e3d6000fd5b505050506040513d60208110156104fb57600080fd5b8101908080519060200190929190505050145b80156105fa5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f4995633866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b505050506040513d60208110156105e857600080fd5b81019080805190602001909291905050505b80156106e65750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663817b61c633856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b505050506040513d60208110156106d457600080fd5b81019080805190602001909291905050505b80156107d25750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af235c2433846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561079657600080fd5b505af11580156107aa573d6000803e3d6000fd5b505050506040513d60208110156107c057600080fd5b81019080805190602001909291905050505b80156108be5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050506040513d60208110156108ac57600080fd5b81019080805190602001909291905050505b6108c757600080fd5b600190509392505050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166332390c67336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d602081101561099e57600080fd5b81019080805190602001909291905050509050600081118015610aa25750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f499563360006040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a6657600080fd5b505af1158015610a7a573d6000803e3d6000fd5b505050506040513d6020811015610a9057600080fd5b81019080805190602001909291905050505b8015610b8f5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663817b61c63360006040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b505050506040513d6020811015610b7d57600080fd5b81019080805190602001909291905050505b8015610c7b5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c3f57600080fd5b505af1158015610c53573d6000803e3d6000fd5b505050506040513d6020811015610c6957600080fd5b81019080805190602001909291905050505b610c8457600080fd5b600191505090565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318a8ac2e846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d2e57600080fd5b505afa158015610d42573d6000803e3d6000fd5b505050506040513d6020811015610d5857600080fd5b810190808051906020019092919050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166332390c67856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e0c57600080fd5b505afa158015610e20573d6000803e3d6000fd5b505050506040513d6020811015610e3657600080fd5b810190808051906020019092919050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635550e8c4866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610eea57600080fd5b505afa158015610efe573d6000803e3d6000fd5b505050506040513d6020811015610f1457600080fd5b81019080805190602001909291905050509050600082118015610f3657508282115b80156110345750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1f4995686610f8f868661251490919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ff857600080fd5b505af115801561100c573d6000803e3d6000fd5b505050506040513d602081101561102257600080fd5b81019080805190602001909291905050505b801561111957506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663293031b8336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156110dc57600080fd5b505afa1580156110f0573d6000803e3d6000fd5b505050506040513d602081101561110657600080fd5b8101908080519060200190929190505050145b80156112315750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67735433876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156111f557600080fd5b505af1158015611209573d6000803e3d6000fd5b505050506040513d602081101561121f57600080fd5b81019080805190602001909291905050505b80156113435750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198661129e604061129060648961253490919063ffffffff16565b61255a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561130757600080fd5b505af115801561131b573d6000803e3d6000fd5b505050506040513d602081101561133157600080fd5b81019080805190602001909291905050505b61134c57600080fd5b6000611375602461136760648761253490919063ffffffff16565b61255a90919063ffffffff16565b9050600182141561149457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561144b57600080fd5b505af115801561145f573d6000803e3d6000fd5b505050506040513d602081101561147557600080fd5b810190808051906020019092919050505061148f57600080fd5b611a80565b600282141561155b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f367d3d826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561151257600080fd5b505af1158015611526573d6000803e3d6000fd5b505050506040513d602081101561153c57600080fd5b810190808051906020019092919050505061155657600080fd5b611a7f565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee42b10b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115c857600080fd5b505afa1580156115dc573d6000803e3d6000fd5b505050506040513d60208110156115f257600080fd5b810190808051906020019092919050505090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce4a1c7f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166f57600080fd5b505afa158015611683573d6000803e3d6000fd5b505050506040513d602081101561169957600080fd5b8101908080519060200190929190505050905060006116c260058761253490919063ffffffff16565b905060006116ec60046116de868561253490919063ffffffff16565b61255a90919063ffffffff16565b90506000611703848461253490919063ffffffff16565b905060008090505b858110156118bd57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636566f811826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561178657600080fd5b505afa15801561179a573d6000803e3d6000fd5b505050506040513d60208110156117b057600080fd5b81019080805190602001909291905050509750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1989856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561186c57600080fd5b505af1158015611880573d6000803e3d6000fd5b505050506040513d602081101561189657600080fd5b81019080805190602001909291905050506118b057600080fd5b808060010191505061170b565b5060008090505b84811015611a7657600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f2ca654826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561193f57600080fd5b505afa158015611953573d6000803e3d6000fd5b505050506040513d602081101561196957600080fd5b81019080805190602001909291905050509650600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1988846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611a2557600080fd5b505af1158015611a39573d6000803e3d6000fd5b505050506040513d6020811015611a4f57600080fd5b8101908080519060200190929190505050611a6957600080fd5b80806001019150506118c4565b50505050505050505b5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636ed415b98733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4b6ebdf8b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611b5f57600080fd5b505afa158015611b73573d6000803e3d6000fd5b505050506040513d6020811015611b8957600080fd5b8101908080519060200190929190505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d877f3cf8c6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611c3957600080fd5b505afa158015611c4d573d6000803e3d6000fd5b505050506040513d6020811015611c6357600080fd5b8101908080519060200190929190505050896000600160006040518963ffffffff1660e01b8152600401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182815260200198505050505050505050602060405180830381600087803b158015611d9257600080fd5b505af1158015611da6573d6000803e3d6000fd5b505050506040513d6020811015611dbc57600080fd5b81019080805190602001909291905050508015611edf5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cce6765d87611e3a60ac611e2c60648a61253490919063ffffffff16565b61255a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611ea357600080fd5b505af1158015611eb7573d6000803e3d6000fd5b505050506040513d6020811015611ecd57600080fd5b81019080805190602001909291905050505b8015611ff15750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cce6765d33611f4c6008611f3e60058a61253490919063ffffffff16565b61255a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611fb557600080fd5b505af1158015611fc9573d6000803e3d6000fd5b505050506040513d6020811015611fdf57600080fd5b81019080805190602001909291905050505b80156121dc5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cce6765d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4b6ebdf896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156120d557600080fd5b505afa1580156120e9573d6000803e3d6000fd5b505050506040513d60208110156120ff57600080fd5b8101908080519060200190929190505050612137601261212960648a61253490919063ffffffff16565b61255a90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156121a057600080fd5b505af11580156121b4573d6000803e3d6000fd5b505050506040513d60208110156121ca57600080fd5b81019080805190602001909291905050505b80156123b45750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cce6765d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d877f3cf896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156122c057600080fd5b505afa1580156122d4573d6000803e3d6000fd5b505050506040513d60208110156122ea57600080fd5b810190808051906020019092919050505061230f600a8861253490919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561237857600080fd5b505af115801561238c573d6000803e3d6000fd5b505050506040513d60208110156123a257600080fd5b81019080805190602001909291905050505b6123bd57600080fd5b6001945050505050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461242557600080fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124ca57600080fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60008282111561252357600080fd5b600082840390508091505092915050565b600080821161254257600080fd5b600082848161254d57fe5b0490508091505092915050565b60008083141561256d576000905061258e565b600082840290508284828161257e57fe5b041461258957600080fd5b809150505b9291505056fea265627a7a72315820ea89e14d35c07320425faeb9fec91a769ca610200bbc72d9c936f194ced539d264736f6c634300050d0032
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1473
Estimated Gas Usage: 13103 - 188319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:31

Out(del).apull(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010108010101010101100101010102100201010101010101010101011f424001020101020101010201010101010101010101020101800201010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086813179690181519468429771423971354140654276655262105000674683298726464, 455853471630154187487644667788546179122525526241720360979462533867496227456, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1473
Estimated Gas Usage: 13103 - 188319
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:31

Out(del).apull(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010108010101010101010101010108014001010101011f424040100101020101010101010120400101010101010101010101010101201f42400101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511465654721735159837564825834336702661320352961758639374912, 28976298791282834035596712996305266300719083491603472084230189846752688816704, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1543
Estimated Gas Usage: 13103 - 188319
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010101010101010101010101020101020101010101011f424001010101010140010101010101200101010101010101400101010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936031011189294057591544104646268404807948517952, 454086624460164748561772571324081477902266000073662740973786420287717196416, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1709
Estimated Gas Usage: 13103 - 188319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(del).adrop(msg.sender,l)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010108010101010101100101010102100201010101010101010101011f424001020101020101010201010101010101010101020101800201010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086813179690181519468429771423971354140654276655262105000674683298726464, 455853471630154187487644667788546179122525526241720360979462533867496227456, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1709
Estimated Gas Usage: 13103 - 188319
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(del).adrop(msg.sender,l)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e669010101010101010101010101010801800101010101010101010101010110424001010101010240020801010100080101010101010101010101010101021f42400101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936187159621544370833491547286121266709863088704, 454086624460576131149844108792036327514241053468779170982419079392846103104, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1709
Estimated Gas Usage: 13103 - 188319
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(del).adrop(msg.sender,l)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010101010101010101010101020101020101010101011f424001010101010140010101010101200101010101010101400101010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936031011189294057591544104646268404807948517952, 454086624460164748561772571324081477902266000073662740973786420287717196416, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1779
Estimated Gas Usage: 13103 - 188319
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010101010101010101010101020101020101010101011f424001010101010140010101010101200101010101010101400101010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936031011189294057591544104646268404807948517952, 454086624460164748561772571324081477902266000073662740973786420287717196416, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1945
Estimated Gas Usage: 13103 - 188319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(del).adirr(msg.sender,c)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010108010101010101100101010102100201010101010101010101011f424001020101020101010201010101010101010101020101800201010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086813179690181519468429771423971354140654276655262105000674683298726464, 455853471630154187487644667788546179122525526241720360979462533867496227456, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1945
Estimated Gas Usage: 13103 - 188319
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(del).adirr(msg.sender,c)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setuni(address), txdata: 0x76677d191919191919191919191919191919191919191919191919191919191919191919, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66980010101010101010101010101010101010101010101100101080401011f424001100120010101010101010101010101010101010120100101010101012144400101010101010101010101010101010101010101010101010101010101010101, decoded_data: (57897818394534894834877152599089797797772450512732439574694797617438463574592, 480590166190085958078567352124642486535257198716964868075113888125160604736, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 1945
Estimated Gas Usage: 13103 - 188319
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(del).adirr(msg.sender,c)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010101010101010101010101020101020101010101011f424001010101010140010101010101200101010101010101400101010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936031011189294057591544104646268404807948517952, 454086624460164748561772571324081477902266000073662740973786420287717196416, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 2015
Estimated Gas Usage: 13103 - 188319
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

rot

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010101010101010101010101020101020101010101011f424001010101010140010101010101200101010101010101400101010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936031011189294057591544104646268404807948517952, 454086624460164748561772571324081477902266000073662740973786420287717196416, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 2181
Estimated Gas Usage: 13103 - 188319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(rot).burn(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901012001010101010101010101010101010201010101010101010101011f424001010101010101010101010101010101010101010101010101010101011c01020101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454300578596814018942394732367761598978325234187311754220476153092026352192, 454086624460063511464984254936031011189294057512315937409637584344759140610, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 2181
Estimated Gas Usage: 13103 - 188319
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(rot).burn(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: setair(uint256,uint256,uint256), txdata: 0x8f40e669010101010101010101200101010101010101010101010101010401040114010001010101400401010120011020010101010101010101010804010101801742400101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511467953465046458670852363354877419661452899735831804379392, 454086631095972015005047153646413915669601402153047674672044158363752677952, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: setair(uint256,uint256,uint256)
PC address: 2181
Estimated Gas Usage: 13103 - 188319
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:32

Out(rot).burn(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: setair(uint256,uint256,uint256), txdata: 0x8f40e66901010101010101010101010101010101010101020101020101010101011f424001010101010140010101010101200101010101010101400101010101011f42800101010101010101010101010101010101010101010101010101010101010101, decoded_data: (454086624460063511464984254936031011189294057591544104646268404807948517952, 454086624460164748561772571324081477902266000073662740973786420287717196416, 454086624460063511464984254936031011189294057512315937409637584344757371137), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: delair()
PC address: 2665
Estimated Gas Usage: 10335 - 150564
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:34

Out(del).apull(msg.sender,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: delair()
PC address: 2665
Estimated Gas Usage: 10335 - 150564
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:34

Out(del).apull(msg.sender,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: delair()
PC address: 2735
Estimated Gas Usage: 10335 - 150564
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:34

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: delair()
PC address: 2902
Estimated Gas Usage: 10335 - 150564
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:34

Out(del).adrop(msg.sender,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: delair()
PC address: 2902
Estimated Gas Usage: 10335 - 150564
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:34

Out(del).adrop(msg.sender,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: delair()
PC address: 2902
Estimated Gas Usage: 10335 - 150564
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:34

Out(del).adrop(msg.sender,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: delair()
PC address: 2972
Estimated Gas Usage: 10335 - 150564
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:35

rot

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: delair()
PC address: 3138
Estimated Gas Usage: 10335 - 150564
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:35

Out(rot).mint(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: delair()
PC address: 3138
Estimated Gas Usage: 10335 - 150564
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:35

Out(rot).mint(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setuni(address), txdata: 0x76677d191919191919191919191919191919191919191919191919191919191919191919, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: delair()
PC address: 3138
Estimated Gas Usage: 10335 - 150564
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:35

Out(rot).mint(msg.sender,a)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: delair(), txdata: 0x9abcc63a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 3599
Estimated Gas Usage: 45500 - 640795
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:37

Out(del).ipull(g)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020220020202020202020302020302020202, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 3821
Estimated Gas Usage: 45500 - 640795
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:37

Out(del).idirr(g)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210020202020202020202020202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 4091
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:38

Out(del).apull(g,b.sub(a))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210100202020202020202020202200302020202, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 4091
Estimated Gas Usage: 45500 - 640795
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:38

Out(del).apull(g,b.sub(a))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202020302020202020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 4163
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:38

reg

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 4319
Estimated Gas Usage: 45500 - 640795
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:38

Out(reg).idd(msg.sender)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202020202020202020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 4390
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

reg

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 4600
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

Out(reg).register(msg.sender,g)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd785efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202020202020302020202, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 4600
Estimated Gas Usage: 45500 - 640795
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

Out(reg).register(msg.sender,g)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020210020202020202020202020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 4600
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

Out(reg).register(msg.sender,g)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 4670
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

rot

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd785efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202010202020202020202020202020202020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 4874
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

Out(rot).mint(g,a.div(100).mul(64))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 4874
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:39

Out(rot).mint(g,a.div(100).mul(64))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd785efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202010202020202020202020202020202020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 4998
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

rot

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 5060
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

rvs

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 5198
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

Out(rot).mint(rvs,aaa)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 5198
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

Out(rot).mint(rvs,aaa)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 5283
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

rot

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 5397
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

Out(rot).subsu(aaa)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 5397
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:41

Out(rot).subsu(aaa)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 5478
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:42

uni

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 6790
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:46

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 6854
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:46

reg

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 7072
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:46

reg

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 7573
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:46

Out(del).deal(g,msg.sender,Out(reg).ref(g),Out(reg).sef(g),a,0,1,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210100202020202020202020202200302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 7573
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:46

Out(del).deal(g,msg.sender,Out(reg).ref(g),Out(reg).sef(g),a,0,1,0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202020202020202040202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 7642
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:47

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 7846
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:47

Out(del).await(g,(a.div(100)).mul(172))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210100202020202020202020202200302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 7846
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:47

Out(del).await(g,(a.div(100)).mul(172))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 7916
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:47

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 8120
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:47

Out(del).await(msg.sender,(a.div(5)).mul(8))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210100202020202020202020202200302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 8120
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:47

Out(del).await(msg.sender,(a.div(5)).mul(8))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 8190
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 8252
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

reg

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 8611
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

Out(del).await(Out(reg).ref(g),a.div(100).mul(18))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210100202020202020202020202200302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 8611
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

Out(del).await(Out(reg).ref(g),a.div(100).mul(18))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 8681
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

del

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 8743
Estimated Gas Usage: 45500 - 640795
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

reg

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOL
Function name: getair(address)
PC address: 9083
Estimated Gas Usage: 45500 - 640795
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

Out(del).await(Out(reg).sef(g),a.div(10))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [ATTACKER], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020210100202020202020202020202200302020202, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: POOL
Function name: getair(address)
PC address: 9083
Estimated Gas Usage: 45500 - 640795
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:48

Out(del).await(Out(reg).sef(g),a.div(10))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setdel(address), txdata: 0xeda72bfaefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: setreg(address), txdata: 0xb44dd7858585858585858585858585858585858585858585858585858585858585858585, value: 0x0
Caller: [CREATOR], function: setrot(address), txdata: 0x000ef2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2, value: 0x0
Caller: [SOMEGUY], function: getair(address), txdata: 0xa76dcf2b0202020202020202020202020202020202100202020202020202020302020202, value: 0x0


time_used: 36066.357295274734 seconds
#@contract_info_time
0x6b2a9d9500645d51c5b1d87fc95ab56f429902e7.sol:0.5.13:POOL:36066.357295274734:36100:60:36000
