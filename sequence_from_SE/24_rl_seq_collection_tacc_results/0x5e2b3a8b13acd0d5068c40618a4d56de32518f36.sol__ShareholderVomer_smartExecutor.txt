++++ 0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol  :  0.5.16  :  ShareholderVomer ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 5016
['constructor']:writes at the last depth:[]
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 87.00% coverage.
dynamic svars:['56', '60', '59', '58', '57']
static svars:['51', '53', '0', '54', '55', '61', '63', '64', '52', '62']
Ending preprocessing.
preprocessing time(s): 101.3302218914032
contract coverage: 45.75%
fallback is not reachable
getInfo(address) is not reachable
withdraw(uint256) is not reachable
takeEth(address,uint256) is not reachable
updatePaymentMode(address,uint256) is not reachable
transferTokens(address,address,uint256) is not reachable
acceptOwner() is not reachable
setPartnerContract(address,int256) is not reachable
setDepositTokens(address[],uint256[]) is not reachable
lockFunds(uint256) is not reachable
setAdmin(address,bool) is not reachable
changeIndividualVMRCup(address,uint256) is not reachable
changeOwnerCandidate(address) is not reachable
giveBackEth() is not reachable
changeMinBalance(uint256) is not reachable
initialize() is not reachable
Function Reads: State variables read in conditions
	giveBackEth():[]
	newOwnerCandidate():[]
	acceptOwner():[]
	changeIndividualVMRCup(address,uint256):[]
	dateUntilFundsLocked():[]
	getInfo(address):[]
	initialize():[]
	fundsLockedtoWithdraw():[]
	lockFunds(uint256):[]
	owner():[]
	transferTokens(address,address,uint256):[]
	setAdmin(address,bool):[]
	changeMinBalance(uint256):[]
	getPartnerInfo(address):[]
	changeOwnerCandidate(address):[]
	setDepositTokens(address[],uint256[]):[]
	takeEth(address,uint256):[]
	getPaymentInfo():[]
	updatePaymentMode(address,uint256):['62']
	withdraw(uint256):[]
	admins(address):[]
	setPartnerContract(address,int256):[]
Function Writes: State variables written
	giveBackEth():['60']
	acceptOwner():['51']
	changeMinBalance(uint256):['53']
	initialize():['0', '54', '55', '53', '56', '51', '61']
	lockFunds(uint256):['63', '64']
	changeOwnerCandidate(address):['52']
	changeIndividualVMRCup(address,uint256):['59']
	setAdmin(address,bool):['58']
	updatePaymentMode(address,uint256):['61', '62']
	setPartnerContract(address,int256):['60']
	takeEth(address,uint256):['60']
	fallback:['56', '57']
============================
iteration:3
targets:['fallback', 'getInfo(address)', 'withdraw(uint256)', 'takeEth(address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'acceptOwner()', 'setPartnerContract(address,int256)', 'setDepositTokens(address[],uint256[])', 'lockFunds(uint256)', 'setAdmin(address,bool)', 'changeIndividualVMRCup(address,uint256)', 'changeOwnerCandidate(address)', 'giveBackEth()', 'changeMinBalance(uint256)', 'initialize()']
['giveBackEth()']:writes at the last depth:[]
['initialize()']:writes at the last depth:['54', '53', '55', '61', '0', '51', '56']
contract coverage: 58.61%
============================
iteration:4
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.61%
============================
iteration:5
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.61%
============================
iteration:6
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.61%
============================
iteration:7
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.61%
============================
iteration:8
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 76.04%
============================
iteration:9
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'giveBackEth()']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'takeEth(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'takeEth(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'takeEth(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'takeEth(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)', 'getInfo(address)']:writes at the last depth:[]
contract coverage: 76.04%
============================
iteration:10
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 78.25%
============================
iteration:11
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'setDepositTokens(address[],uint256[])']:writes at the last depth:['']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'getInfo(address)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'setDepositTokens(address[],uint256[])']:writes at the last depth:['']
contract coverage: 78.25%
============================
iteration:12
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'getInfo(address)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'getInfo(address)']:writes at the last depth:[]
contract coverage: 78.95%
============================
iteration:13
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'acceptOwner()']:writes at the last depth:['51']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:14
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:15
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:16
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:17
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'giveBackEth()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:18
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:19
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:20
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:21
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:22
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'updatePaymentMode(address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['62', '61']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 80.78%
============================
iteration:23
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'giveBackEth()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'setPartnerContract(address,int256)']:writes at the last depth:['60']
contract coverage: 80.78%
============================
iteration:24
contract coverage: 80.78%
============================
iteration:25
contract coverage: 80.78%
============================
iteration:26
contract coverage: 80.78%
============================
iteration:27
contract coverage: 80.78%
============================
iteration:28
contract coverage: 80.78%
============================
iteration:29
contract coverage: 80.78%
============================
iteration:30
contract coverage: 80.78%
============================
iteration:31
contract coverage: 80.78%
============================
iteration:32
contract coverage: 80.78%
============================
iteration:33
contract coverage: 80.78%
============================
iteration:34
contract coverage: 80.78%
============================
iteration:35
contract coverage: 80.78%
============================
iteration:36
contract coverage: 80.78%
============================
iteration:37
contract coverage: 80.78%
============================
iteration:38
contract coverage: 80.78%
============================
iteration:39
contract coverage: 80.78%
============================
iteration:40
contract coverage: 80.78%
============================
iteration:41
contract coverage: 80.78%
============================
iteration:42
contract coverage: 80.78%
============================
iteration:43
contract coverage: 80.78%
============================
iteration:44
contract coverage: 80.78%
============================
iteration:45
contract coverage: 80.78%
============================
iteration:46
contract coverage: 80.78%
============================
iteration:47
contract coverage: 80.78%
============================
iteration:48
contract coverage: 80.78%
============================
iteration:49
contract coverage: 80.78%
============================
iteration:50
contract coverage: 80.78%
============================
iteration:51
contract coverage: 80.78%
============================
iteration:52
contract coverage: 80.78%
============================
iteration:53
contract coverage: 80.78%
============================
iteration:54
contract coverage: 80.78%
#@statespace
7319 nodes, 7318 edges, 91900 total states
#@coverage
Achieved 0.40% coverage for code: 608060405234801561001057600080fd5b506128b2806100206000396000f3fe6080604052600436106101355760003560e01c80638129fc1c116100ab578063ab7c63f11161006f578063ab7c63f114610e1e578063d091b55014610e28578063ebbc496514610e7f578063eef793d914610e96578063f8800fae14610ef1578063ffdd5cf114610f1c57610135565b80638129fc1c14610ccf57806389c3ef6c14610ce65780638c8f95fb14610d115780638da5cb5b14610d4c578063a64b6e5f14610da357610135565b80634b0bddd2116100fd5780634b0bddd214610a445780634ea18fab14610aa157806354f79cf314610adc578063561a01b814610b485780635b14319c14610b995780636d89ffb014610c7457610135565b806304da3f191461088c578063155e0814146108ea5780632e1a7d4d14610945578063429b62e514610980578063446d5b4e146109e9575b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016d57600080fd5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101c85761088a565b6101d23333610fa4565b6000603960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061025261023f606461023160463461131d90919063ffffffff16565b6113a390919063ffffffff16565b826000015461143290919063ffffffff16565b81600201541061026157600080fd5b6000603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156102b45760355490505b80826003015410156102c557600080fd5b600034111561054e57671bc16d674ec80000341015806102fd575060008260000154141580156102fc5750662386f26fc100003410155b5b61030657600080fd5b6014600036905014156104a05760006103636000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506114ba565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6103df60646103d160193461131d90919063ffffffff16565b6113a390919063ffffffff16565b9081150290604051600060405180830381858888f1935050505015801561040a573d6000803e3d6000fd5b50603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61046e606461046060053461131d90919063ffffffff16565b6113a390919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015610499573d6000803e3d6000fd5b505061054d565b600080369050141561054057603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61050f6064610501601e3461131d90919063ffffffff16565b6113a390919063ffffffff16565b9081150290604051600060405180830381858888f1935050505015801561053a573d6000803e3d6000fd5b5061054c565b600061054b57600080fd5b5b5b5b60008260000154146108395760006105b462278d006105a685600101544203610598606461058a60148a6000015461131d90919063ffffffff16565b6113a390919063ffffffff16565b61131d90919063ffffffff16565b6113a390919063ffffffff16565b905082600001546105d284600201548361143290919063ffffffff16565b11156106105782600201548360000154111561060a57610603836002015484600001546114c890919063ffffffff16565b905061060f565b600090505b5b61062781846002015461143290919063ffffffff16565b8360020181905550600073ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d85760003390508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106d1573d6000803e3d6000fd5b5050610837565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561082a57603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336107a4603e548561155190919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561080d57600080fd5b505af1158015610821573d6000803e3d6000fd5b50505050610836565b600061083557600080fd5b5b5b505b42826001018190555061087f61086c606461085e60463461131d90919063ffffffff16565b6113a390919063ffffffff16565b836000015461143290919063ffffffff16565b826000018190555050505b005b34801561089857600080fd5b506108a1611591565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156108f657600080fd5b506109436004803603604081101561090d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c2565b005b34801561095157600080fd5b5061097e6004803603602081101561096857600080fd5b810190808035906020019092919050505061170f565b005b34801561098c57600080fd5b506109cf600480360360208110156109a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117fd565b604051808215151515815260200191505060405180910390f35b3480156109f557600080fd5b50610a4260048036036040811015610a0c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061181d565b005b348015610a5057600080fd5b50610a9f60048036036040811015610a6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118d3565b005b348015610aad57600080fd5b50610ada60048036036020811015610ac457600080fd5b8101908080359060200190929190505050611985565b005b348015610ae857600080fd5b50610b2b60048036036020811015610aff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f0565b604051808381526020018281526020019250505060405180910390f35b348015610b5457600080fd5b50610b9760048036036020811015610b6b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a82565b005b348015610ba557600080fd5b50610c7260048036036040811015610bbc57600080fd5b8101908080359060200190640100000000811115610bd957600080fd5b820183602082011115610beb57600080fd5b80359060200191846020830284011164010000000083111715610c0d57600080fd5b909192939192939080359060200190640100000000811115610c2e57600080fd5b820183602082011115610c4057600080fd5b80359060200191846020830284011164010000000083111715610c6257600080fd5b9091929391929390505050611b1d565b005b348015610c8057600080fd5b50610ccd60048036036040811015610c9757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c37565b005b348015610cdb57600080fd5b50610ce4611d67565b005b348015610cf257600080fd5b50610cfb61207b565b6040518082815260200191505060405180910390f35b348015610d1d57600080fd5b50610d4a60048036036020811015610d3457600080fd5b8101908080359060200190929190505050612081565b005b348015610d5857600080fd5b50610d61612107565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610daf57600080fd5b50610e1c60048036036060811015610dc657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061212d565b005b610e26612228565b005b348015610e3457600080fd5b50610e3d6122dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e8b57600080fd5b50610e94612302565b005b348015610ea257600080fd5b50610eef60048036036040811015610eb957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506123c1565b005b348015610efd57600080fd5b50610f0661246a565b6040518082815260200191505060405180910390f35b348015610f2857600080fd5b50610f6b60048036036020811015610f3f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612470565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611319576000806000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b15801561109957600080fd5b505afa1580156110ad573d6000803e3d6000fd5b505050506040513d60808110156110c357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050505080935081945082955050505060008311156112315760006111588461114a601461113c606461112e62278d008a61131d90919063ffffffff16565b61131d90919063ffffffff16565b6113a390919063ffffffff16565b6113a390919063ffffffff16565b420390506000603960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050604051806080016040528086815260200183815260200184815260200182815250603960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015590505050505b6001603860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611315576001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050505b5050565b600080831415611330576000905061139d565b600082840290508284828161134157fe5b0414611398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061282f6021913960400191505060405180910390fd5b809150505b92915050565b600080821161141a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161142557fe5b0490508091505092915050565b6000808284019050838110156114b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060148201519050919050565b600082821115611540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000670de0b6b3a7640000611581611569858561131d565b6002670de0b6b3a76400008161157b57fe5b04611432565b8161158857fe5b04905092915050565b600080603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150603e5490509091565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461161957fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806116a15750603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6116aa57600080fd5b81603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081146116fb5780603e819055505b6000603e54141561170b57600080fd5b5050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461176657fe5b42604054111561179157603f5461178682476114c890919063ffffffff16565b1161179057600080fd5b5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156117f9573d6000803e3d6000fd5b5050565b603a6020528060005260406000206000915054906101000a900460ff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461187457fe5b600081121561188257600080fd5b6000603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000181905550505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461192a57fe5b80603a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119dc57fe5b670de0b6b3a7640000810260358190555050565b600080603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549150603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ad957fe5b80603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611b7057fe5b6000848490509050828290508114611b8757600080fd5b60008090505b818161ffff161015611c2f5783838261ffff16818110611ba957fe5b905060200201356039600088888561ffff16818110611bc457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055508080600101915050611b8d565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c70573391505b6000603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001015482600001540113611cca57600080fd5b8181600101548260000154011015611ce157600080fd5b818160010160008282540392505081905550611cfd8383612771565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f14ab110831c9d210715b0adedbc67b2f0b80c10ad2853488332d1e4fbd85f81d846040518082815260200191505060405180910390a3505050565b600060019054906101000a900460ff1680611d865750611d856127ef565b5b80611d9d57506000809054906101000a900460ff16155b611df2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612850602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611e42576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b73063b98a414eaa1d4a5d4fc235a22db1427199024603660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739c235ac2c33077a30593a3fd27a0087c687a80a3603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea000006035819055506001603860007312a09763ec6e5b7cbc4feb7178db8c91a79e456a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016038600073b7722517f410914fff62df357a0c14b88efb936973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156120785760008060016101000a81548160ff0219169083151502179055505b50565b603f5481565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120d857fe5b4260405411156120f157603f5481116120f057600080fd5b5b80603f8190555062278d00420160408190555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461218457fe5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561220b57600080fd5b505af115801561221f573d6000803e3d6000fd5b50505050505050565b6000603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154131561228b573481600101600082825401925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fac51d2759ef9a0c22072ba515685b302d83fa6ff1d5ec2948396ac46e82d864c346040518082815260200191505060405180910390a250565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461235c57600080fd5b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461241857fe5b670de0b6b3a76400008102603b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405481565b600080600080600080479250603b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156124cd5760355490505b603860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661266d57603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b1580156125bd57600080fd5b505afa1580156125d1573d6000803e3d6000fd5b505050506040513d60808110156125e757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505050809650819750829850505050603960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549150612768565b612675612806565b603960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015196506000816000015111156127585761275562278d0061274783602001514203612739606461272b6014886000015161131d90919063ffffffff16565b6113a390919063ffffffff16565b61131d90919063ffffffff16565b6113a390919063ffffffff16565b95505b8060400151945080606001519250505b91939550919395565b600082905060008173ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d80600081146127d6576040519150601f19603f3d011682016040523d82523d6000602084013e6127db565b606091505b50509050806127e957600080fd5b50505050565b6000803090506000813b9050600081149250505090565b604051806080016040528060008152602001600081526020016000815260200160008152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a723158207e19f9c7a3b0f88ad4c149ac31280bda53e75c1bd17fe88af00393192a2a928d64736f6c63430005100032
#@coverage
Achieved 80.78% coverage for code: 6080604052600436106101355760003560e01c80638129fc1c116100ab578063ab7c63f11161006f578063ab7c63f114610e1e578063d091b55014610e28578063ebbc496514610e7f578063eef793d914610e96578063f8800fae14610ef1578063ffdd5cf114610f1c57610135565b80638129fc1c14610ccf57806389c3ef6c14610ce65780638c8f95fb14610d115780638da5cb5b14610d4c578063a64b6e5f14610da357610135565b80634b0bddd2116100fd5780634b0bddd214610a445780634ea18fab14610aa157806354f79cf314610adc578063561a01b814610b485780635b14319c14610b995780636d89ffb014610c7457610135565b806304da3f191461088c578063155e0814146108ea5780632e1a7d4d14610945578063429b62e514610980578063446d5b4e146109e9575b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016d57600080fd5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101c85761088a565b6101d23333610fa4565b6000603960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061025261023f606461023160463461131d90919063ffffffff16565b6113a390919063ffffffff16565b826000015461143290919063ffffffff16565b81600201541061026157600080fd5b6000603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156102b45760355490505b80826003015410156102c557600080fd5b600034111561054e57671bc16d674ec80000341015806102fd575060008260000154141580156102fc5750662386f26fc100003410155b5b61030657600080fd5b6014600036905014156104a05760006103636000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506114ba565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6103df60646103d160193461131d90919063ffffffff16565b6113a390919063ffffffff16565b9081150290604051600060405180830381858888f1935050505015801561040a573d6000803e3d6000fd5b50603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61046e606461046060053461131d90919063ffffffff16565b6113a390919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015610499573d6000803e3d6000fd5b505061054d565b600080369050141561054057603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61050f6064610501601e3461131d90919063ffffffff16565b6113a390919063ffffffff16565b9081150290604051600060405180830381858888f1935050505015801561053a573d6000803e3d6000fd5b5061054c565b600061054b57600080fd5b5b5b5b60008260000154146108395760006105b462278d006105a685600101544203610598606461058a60148a6000015461131d90919063ffffffff16565b6113a390919063ffffffff16565b61131d90919063ffffffff16565b6113a390919063ffffffff16565b905082600001546105d284600201548361143290919063ffffffff16565b11156106105782600201548360000154111561060a57610603836002015484600001546114c890919063ffffffff16565b905061060f565b600090505b5b61062781846002015461143290919063ffffffff16565b8360020181905550600073ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d85760003390508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106d1573d6000803e3d6000fd5b5050610837565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561082a57603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336107a4603e548561155190919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561080d57600080fd5b505af1158015610821573d6000803e3d6000fd5b50505050610836565b600061083557600080fd5b5b5b505b42826001018190555061087f61086c606461085e60463461131d90919063ffffffff16565b6113a390919063ffffffff16565b836000015461143290919063ffffffff16565b826000018190555050505b005b34801561089857600080fd5b506108a1611591565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156108f657600080fd5b506109436004803603604081101561090d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c2565b005b34801561095157600080fd5b5061097e6004803603602081101561096857600080fd5b810190808035906020019092919050505061170f565b005b34801561098c57600080fd5b506109cf600480360360208110156109a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117fd565b604051808215151515815260200191505060405180910390f35b3480156109f557600080fd5b50610a4260048036036040811015610a0c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061181d565b005b348015610a5057600080fd5b50610a9f60048036036040811015610a6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118d3565b005b348015610aad57600080fd5b50610ada60048036036020811015610ac457600080fd5b8101908080359060200190929190505050611985565b005b348015610ae857600080fd5b50610b2b60048036036020811015610aff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f0565b604051808381526020018281526020019250505060405180910390f35b348015610b5457600080fd5b50610b9760048036036020811015610b6b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a82565b005b348015610ba557600080fd5b50610c7260048036036040811015610bbc57600080fd5b8101908080359060200190640100000000811115610bd957600080fd5b820183602082011115610beb57600080fd5b80359060200191846020830284011164010000000083111715610c0d57600080fd5b909192939192939080359060200190640100000000811115610c2e57600080fd5b820183602082011115610c4057600080fd5b80359060200191846020830284011164010000000083111715610c6257600080fd5b9091929391929390505050611b1d565b005b348015610c8057600080fd5b50610ccd60048036036040811015610c9757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c37565b005b348015610cdb57600080fd5b50610ce4611d67565b005b348015610cf257600080fd5b50610cfb61207b565b6040518082815260200191505060405180910390f35b348015610d1d57600080fd5b50610d4a60048036036020811015610d3457600080fd5b8101908080359060200190929190505050612081565b005b348015610d5857600080fd5b50610d61612107565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610daf57600080fd5b50610e1c60048036036060811015610dc657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061212d565b005b610e26612228565b005b348015610e3457600080fd5b50610e3d6122dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e8b57600080fd5b50610e94612302565b005b348015610ea257600080fd5b50610eef60048036036040811015610eb957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506123c1565b005b348015610efd57600080fd5b50610f0661246a565b6040518082815260200191505060405180910390f35b348015610f2857600080fd5b50610f6b60048036036020811015610f3f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612470565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611319576000806000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b15801561109957600080fd5b505afa1580156110ad573d6000803e3d6000fd5b505050506040513d60808110156110c357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050505080935081945082955050505060008311156112315760006111588461114a601461113c606461112e62278d008a61131d90919063ffffffff16565b61131d90919063ffffffff16565b6113a390919063ffffffff16565b6113a390919063ffffffff16565b420390506000603960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050604051806080016040528086815260200183815260200184815260200182815250603960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015590505050505b6001603860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611315576001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050505b5050565b600080831415611330576000905061139d565b600082840290508284828161134157fe5b0414611398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061282f6021913960400191505060405180910390fd5b809150505b92915050565b600080821161141a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161142557fe5b0490508091505092915050565b6000808284019050838110156114b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060148201519050919050565b600082821115611540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000670de0b6b3a7640000611581611569858561131d565b6002670de0b6b3a76400008161157b57fe5b04611432565b8161158857fe5b04905092915050565b600080603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150603e5490509091565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461161957fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806116a15750603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6116aa57600080fd5b81603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081146116fb5780603e819055505b6000603e54141561170b57600080fd5b5050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461176657fe5b42604054111561179157603f5461178682476114c890919063ffffffff16565b1161179057600080fd5b5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156117f9573d6000803e3d6000fd5b5050565b603a6020528060005260406000206000915054906101000a900460ff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461187457fe5b600081121561188257600080fd5b6000603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000181905550505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461192a57fe5b80603a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119dc57fe5b670de0b6b3a7640000810260358190555050565b600080603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549150603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ad957fe5b80603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611b7057fe5b6000848490509050828290508114611b8757600080fd5b60008090505b818161ffff161015611c2f5783838261ffff16818110611ba957fe5b905060200201356039600088888561ffff16818110611bc457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055508080600101915050611b8d565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c70573391505b6000603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001015482600001540113611cca57600080fd5b8181600101548260000154011015611ce157600080fd5b818160010160008282540392505081905550611cfd8383612771565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f14ab110831c9d210715b0adedbc67b2f0b80c10ad2853488332d1e4fbd85f81d846040518082815260200191505060405180910390a3505050565b600060019054906101000a900460ff1680611d865750611d856127ef565b5b80611d9d57506000809054906101000a900460ff16155b611df2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612850602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611e42576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b73063b98a414eaa1d4a5d4fc235a22db1427199024603660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739c235ac2c33077a30593a3fd27a0087c687a80a3603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea000006035819055506001603860007312a09763ec6e5b7cbc4feb7178db8c91a79e456a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016038600073b7722517f410914fff62df357a0c14b88efb936973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156120785760008060016101000a81548160ff0219169083151502179055505b50565b603f5481565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120d857fe5b4260405411156120f157603f5481116120f057600080fd5b5b80603f8190555062278d00420160408190555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461218457fe5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561220b57600080fd5b505af115801561221f573d6000803e3d6000fd5b50505050505050565b6000603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154131561228b573481600101600082825401925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fac51d2759ef9a0c22072ba515685b302d83fa6ff1d5ec2948396ac46e82d864c346040518082815260200191505060405180910390a250565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461235c57600080fd5b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461241857fe5b670de0b6b3a76400008102603b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405481565b600080600080600080479250603b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156124cd5760355490505b603860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661266d57603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b1580156125bd57600080fd5b505afa1580156125d1573d6000803e3d6000fd5b505050506040513d60808110156125e757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505050809650819750829850505050603960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549150612768565b612675612806565b603960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015196506000816000015111156127585761275562278d0061274783602001514203612739606461272b6014886000015161131d90919063ffffffff16565b6113a390919063ffffffff16565b61131d90919063ffffffff16565b6113a390919063ffffffff16565b95505b8060400151945080606001519250505b91939550919395565b600082905060008173ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d80600081146127d6576040519150601f19603f3d011682016040523d82523d6000602084013e6127db565b606091505b50509050806127e957600080fd5b50505050565b6000803090506000813b9050600081149250505090565b604051806080016040528060008152602001600081526020016000815260200160008152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a723158207e19f9c7a3b0f88ad4c149ac31280bda53e75c1bd17fe88af00393192a2a928d64736f6c63430005100032
==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 360
Estimated Gas Usage: 62 - 157
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:346

require(msg.sender == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 451
Estimated Gas Usage: 935 - 1360
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:348

if (msg.sender == owner) return;

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000002000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4360
Estimated Gas Usage: 4544 - 40660
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:306

if (totalFunds > 0) {
                uint256 lastDatetime = block.timestamp - pendingReward.mul(30 days).mul(100).div(20).div(totalFunds);
                uint256 totalVMR = investors[newAddress].totalVMR;
                investors[newAddress] = InvestorData(totalFunds, lastDatetime, totalProfit, totalVMR);
            }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000000000000000040000000000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [SOMEGUY], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b00000000000000002000000000000000000000000880004000040101200220080102010102012002081008100401000140080000, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4796
Estimated Gas Usage: 10536 - 67172
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:312

if (oldAddress != newAddress) migrateDone[newAddress] = true

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000008000000000000000000000000000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b00000000000000000000000000000000000000010202004000010002000100100408010802022004010800802020010002404002, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4903
Estimated Gas Usage: 4629 - 40745
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:87

if (a == 0) {
            return 0;
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000000000000000000000010000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [CREATOR], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b00000000000000010000000100000000000000000104000240001002000102024000048000010001040202010101108004048000, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4927
Estimated Gas Usage: 4674 - 40790
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:92

c / a

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0108010104040000000800000004000800002004fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b00000000000000800000000000000000000000000240010208010020000000208000000000000140200101100202014000400401, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4935
Estimated Gas Usage: 4696 - 40812
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:92

require(c / a == b, "SafeMath: multiplication overflow")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0208040410020400000000000000000001000001fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b00100000000000000000000000000000000000000180200004040000000000000000008008000000020101000000010000000000, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 5036
Estimated Gas Usage: 4932 - 41048
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:100

require(b > 0, "SafeMath: division by zero")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc8000000000000000000000000000000000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b00000000000000000000000000000000100000001004204020000010000440000400001008000001000420040004011001011000, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 5155
Estimated Gas Usage: 4958 - 41074
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:101

a / b

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000801080400404000008000104400080fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4b20400000000000000000000000000000000000000400100020000000000001100000000101000000000000000000000000000080, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: updatePaymentMode(address,uint256)
PC address: 5655
Estimated Gas Usage: 1155 - 1580
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: updatePaymentMode(address,uint256), txdata: 0x155e081400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: updatePaymentMode(address,uint256)
PC address: 5656
Estimated Gas Usage: 1165 - 1590
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:203

function updatePaymentMode(address newPaymantMode, uint256 newRate) onlyOwner public {
        require(newPaymantMode == address(0) || newPaymantMode == address(VMR_Token));
        paymentToken = newPaymantMode;
        if (newRate != 0) VMR_ETH_RATE = newRate;
        require(VMR_ETH_RATE != 0);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: updatePaymentMode(address,uint256), txdata: 0x155e081400000000000000000000000080080010008004202002000020000400800008200000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x8008001000800420200200002000040080000820', 0), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 5988
Estimated Gas Usage: 1144 - 1569
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000004080000280404000100000100080080801202020, decoded_data: (368229905569177171693496561903864812061761478688,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 5989
Estimated Gas Usage: 1154 - 1579
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:261

function withdraw(uint256 amount)  public onlyOwner {
        if (dateUntilFundsLocked > now) require(address(this).balance.sub(amount) > fundsLockedtoWithdraw);
        owner.transfer(amount);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d4040404040404040404040404080000108080010044020100820020404104040, decoded_data: (29061543965444064733758992315907406367108708053710600771848184050240753516608,), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 6000
Estimated Gas Usage: 1969 - 2394
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:262

if (dateUntilFundsLocked > now) require(address(this).balance.sub(amount) > fundsLockedtoWithdraw)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000000000000000000000000100000000000000000000, decoded_data: (1208925819614629174706176,), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 6115
Estimated Gas Usage: 3634 - 38575
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:263

owner.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x51c38507207010484, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000040000000000000000002000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000400000000000000000020000000400', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4dd0006800004410102053b162b64dec36cada9b30ed8345d97ba0177438cbde9a, decoded_data: (94081790286967474389994768852288239455346816361162504380414219216784477380250,), value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d0c0000000800187024cd1811000000000000000000000000200600b040010c88, decoded_data: (5427754183841734264279165529908132237895028838740357130091128169602519993480,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: setPartnerContract(address,int256)
PC address: 6258
Estimated Gas Usage: 1221 - 1646
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setPartnerContract(address,int256), txdata: 0x446d5b4e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: setPartnerContract(address,int256)
PC address: 6259
Estimated Gas Usage: 1231 - 1656
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:243

function setPartnerContract(address addr, int256 maxCredit) onlyOwner public {
        require(maxCredit >= 0);
        Partner storage data = partners[addr];
        data.maxCredit = maxCredit;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: setPartnerContract(address,int256), txdata: 0x446d5b4e08080808080808080808080880014008200401400004040008080208208000080808080808080808080808080808080808080808080808080808080808080808, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: setAdmin(address,bool)
PC address: 6440
Estimated Gas Usage: 1138 - 1563
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: setAdmin(address,bool), txdata: 0x4b0bddd200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', False), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: setAdmin(address,bool)
PC address: 6441
Estimated Gas Usage: 1148 - 1573
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:249

function setAdmin(address newAdmin, bool activate) onlyOwner public {
        admins[newAdmin] = activate;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: setAdmin(address,bool), txdata: 0x4b0bddd200000000000000000000000000080401001000020080010000100440024004020000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0008040100100002008001000010044002400402', False), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: changeMinBalance(uint256)
PC address: 6618
Estimated Gas Usage: 1121 - 1546
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: changeMinBalance(uint256), txdata: 0x4ea18fababababababababababababababababababababababababababababababababab, decoded_data: (77648812782670860460512307594061302913369283834606025297048026922953510464427,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: changeMinBalance(uint256)
PC address: 6619
Estimated Gas Usage: 1131 - 1556
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:284

function changeMinBalance(uint256 newMinBalance) public onlyOwner {
        MinBalanceVMR = newMinBalance * 10**18;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: changeMinBalance(uint256), txdata: 0x4ea18fababababababababababababababababababababababababababababababababab, decoded_data: (77648812782670860460512307594061302913369283834606025297048026922953510464427,), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ShareholderVomer
Function name: changeMinBalance(uint256)
PC address: 6631
Estimated Gas Usage: 6165 - 26590
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:285

newMinBalance * 10**18

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: changeMinBalance(uint256), txdata: 0x4ea18fab000000000010a00c80800090a2f000000000004404004a3c8040010620069e42, decoded_data: (6839206792398130659587708850368133548474304003821921650073837122,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: changeOwnerCandidate(address)
PC address: 6871
Estimated Gas Usage: 1171 - 1596
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeOwnerCandidate(address), txdata: 0x561a01b80000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000',), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: changeOwnerCandidate(address)
PC address: 6872
Estimated Gas Usage: 1181 - 1606
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:275

function changeOwnerCandidate(address payable newOwner) public onlyOwner {
        newOwnerCandidate = newOwner;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeOwnerCandidate(address), txdata: 0x561a01b88080808080808080808080800000008000404040808001804020048080808080, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: setDepositTokens(address[],uint256[])
PC address: 7023
Estimated Gas Usage: 1594 - 2209
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:335

function setDepositTokens(address[] calldata userAddress, uint256[] calldata amountTokens) onlyAdmin external {
        uint256 len = userAddress.length;
        require(len == amountTokens.length);

        for(uint16 i = 0;i < len; i++) {
            investors[userAddress[i]].totalVMR = amountTokens[i];
        }
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setDepositTokens(address[],uint256[]), txdata: 0x5b14319c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a, decoded_data: ([], []), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ShareholderVomer
Function name: takeEth(address,uint256)
PC address: 7404
Estimated Gas Usage: 12197 - 67488
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:224

data.balance -= int256(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfcdeadbeefdeadbeefdeadbeefdeadbeefdeadbeeffcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [CREATOR], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef2004c3931c10090402224020400140030200002a402410042050044020d28a21, value: 0x0
Caller: [ATTACKER], function: takeEth(address,uint256), txdata: 0x6d89ffb02424242424242424242424240000000000000000000000000000000000000000080151b246024110082882088002200a0408022ba50410110211880120e21001, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 8406
Estimated Gas Usage: 1143 - 1568
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: lockFunds(uint256), txdata: 0x8c8f95fb0000000000000000000000000000000280000020010480010880021040404008, decoded_data: (850705919837962284309964168364690522120,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 8407
Estimated Gas Usage: 1153 - 1578
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:266

function lockFunds(uint256 amount) public onlyOwner {
        
        if (dateUntilFundsLocked > now) {
            require(amount > fundsLockedtoWithdraw);
        }
        fundsLockedtoWithdraw = amount;
        dateUntilFundsLocked = now + 30 days;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: lockFunds(uint256), txdata: 0x8c8f95fb2020202020202020202020208000108004202000022002080020104010102010, decoded_data: (14530771982722032366879496158500340487043459384599545275585426399696557973520,), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 8418
Estimated Gas Usage: 1968 - 2393
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:268

if (dateUntilFundsLocked > now) {
            require(amount > fundsLockedtoWithdraw);
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: lockFunds(uint256), txdata: 0x8c8f95fb0000000000000000000000000000000000000000000000000000000000000010, decoded_data: (16,), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 8446
Estimated Gas Usage: 12023 - 52448
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:272

now + 30 days

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: lockFunds(uint256), txdata: 0x8c8f95fb0000000000000000000000000000000000000000000000000000000000000100, decoded_data: (256,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 8578
Estimated Gas Usage: 1253 - 1678
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 8579
Estimated Gas Usage: 1263 - 1688
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:294

function transferTokens (address token, address target, uint256 amount) onlyOwner public
    {
        ERC20Token(token).transfer(target, amount);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f080808080808080808080808800110000808400240200408088040100100004008080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 8718
Estimated Gas Usage: 2884 - 37780
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:296

ERC20Token(token).transfer(target, amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5fefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 8718
Estimated Gas Usage: 2884 - 37780
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:296

ERC20Token(token).transfer(target, amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000020000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000200000000000100000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d10108020010001001010000000c0000040000000000000480000000001040020, decoded_data: (7266159416724712803232237200844743930375755513122141039469341457153953890336,), value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000002', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: acceptOwner()
PC address: 9047
Estimated Gas Usage: 1060 - 1485
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:280

require(msg.sender == newOwnerCandidate)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: acceptOwner(), txdata: 0xebbc4965, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: changeIndividualVMRCup(address,uint256)
PC address: 9238
Estimated Gas Usage: 1197 - 1622
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:178

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: changeIndividualVMRCup(address,uint256), txdata: 0xeef793d900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: changeIndividualVMRCup(address,uint256)
PC address: 9239
Estimated Gas Usage: 1207 - 1632
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:254

function changeIndividualVMRCup(address userAddress, uint256 minAmount) onlyOwner public {
        individualVMRCup[userAddress] = minAmount * 10**18;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: changeIndividualVMRCup(address,uint256), txdata: 0xeef793d900000000000000000000000000200040010000200180100000008010404004200000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0020004001000020018010000000801040400420', 0), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ShareholderVomer
Function name: changeIndividualVMRCup(address,uint256)
PC address: 9251
Estimated Gas Usage: 6333 - 26948
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:255

minAmount * 10**18

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: changeIndividualVMRCup(address,uint256), txdata: 0xeef793d90000000000000000000000000000000000000000000000000000000000000000000000004030004104d70387f874000000000000004000000000000000000142, decoded_data: ('0x0000000000000000000000000000000000000000', 6759733129605801165907060427153709773104067189151874550373067784514), value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ShareholderVomer
Function name: takeEth(address,uint256)
PC address: 10150
Estimated Gas Usage: 12197 - 67488
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:212

payableTarget.call.value(amount)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000000102000000000000000000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef4042880401081a10011080010010040020200b042008020b0080400120152021, value: 0x0
Caller: [ATTACKER], function: takeEth(address,uint256), txdata: 0x6d89ffb0808080808080808080808080000000000000000000000000000000000000000040408801100502020112101001040540404108042008041c4080400401012004, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ShareholderVomer
Function name: takeEth(address,uint256)
PC address: 10150
Estimated Gas Usage: 12190 - 67481
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:212

payableTarget.call.value(amount)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000001012000000000000001000080000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setPartnerContract(address,int256), txdata: 0x446d5b4e4b4b4b4b4b4b4b4b4b4b4b4bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef20409112013c0204040000004000800010188040022004062008800200000000, value: 0x0
Caller: [ATTACKER], function: takeEth(address,uint256), txdata: 0x6d89ffb05b5b5b5b5b5b5b5b5b5b5b5bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001, value: 0x0


time_used: 36050.36315250397 seconds
#@contract_info_time
0x5e2b3a8b13acd0d5068c40618a4d56de32518f36.sol:0.5.16:ShareholderVomer:36050.36315250397:36100:60:36000
