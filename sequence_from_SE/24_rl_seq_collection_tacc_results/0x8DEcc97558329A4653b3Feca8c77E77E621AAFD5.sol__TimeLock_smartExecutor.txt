++++ 0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol  :  0.4.24  :  TimeLock ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 9316
['constructor']:writes at the last depth:['106605114080364359579522388881656407901251981291752319576997573973948972095390']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 62.09% coverage.
dynamic svars:['69', '5', '4']
static svars:['1', '0', '2', '3', '106605114080364359579522388881656407901251981291752319576997573973948972095390', '29603418823659377402517424791837662213071105721787245324259490738465228198779', '96860829410266183739968109275744835355652829419177135718944944339455505294235']
Ending preprocessing.
preprocessing time(s): 101.4962854385376
contract coverage: 42.44%
transferToVault(address) is not reachable
forwardFee() is not reachable
initialize(address,uint256,uint256,uint256) is not reachable
getSpamPenalty(address) is not reachable
getEVMScriptExecutor(bytes) is not reachable
getRecoveryVault() is not reachable
changeLockDuration(uint256) is not reachable
getEVMScriptRegistry() is not reachable
changeSpamPenaltyFactor(uint256) is not reachable
changeLockAmount(uint256) is not reachable
canPerform(address,bytes32,uint256[]) is not reachable
Function Reads: State variables read in conditions
	lockDuration():[]
	hasInitialized():['106605114080364359579522388881656407901251981291752319576997573973948972095390']
	CHANGE_DURATION_ROLE():[]
	changeLockDuration(uint256):['106605114080364359579522388881656407901251981291752319576997573973948972095390']
	withdrawAllTokens():['4']
	getEVMScriptExecutor(bytes):[]
	LOCK_TOKENS_ROLE():[]
	withdrawTokens(uint256):['4']
	getRecoveryVault():[]
	addressesWithdrawLocks(address,uint256):['4']
	spamPenaltyFactor():[]
	initialize(address,uint256,uint256,uint256):['106605114080364359579522388881656407901251981291752319576997573973948972095390']
	allowRecoverability(address):[]
	appId():[]
	getWithdrawLocksCount(address):[]
	getInitializationBlock():[]
	changeSpamPenaltyFactor(uint256):['106605114080364359579522388881656407901251981291752319576997573973948972095390']
	transferToVault(address):[]
	canPerform(address,bytes32,uint256[]):['106605114080364359579522388881656407901251981291752319576997573973948972095390']
	getEVMScriptRegistry():[]
	CHANGE_SPAM_PENALTY_ROLE():[]
	getSpamPenalty(address):['2']
	canForward(address,bytes):[]
	changeLockAmount(uint256):['106605114080364359579522388881656407901251981291752319576997573973948972095390']
	forwardFee():['2']
	CHANGE_AMOUNT_ROLE():[]
	kernel():[]
	lockAmount():[]
	forward(bytes):[]
	isPetrified():[]
	token():[]
	PCT_BASE():[]
	isForwarder():[]
Function Writes: State variables written
	changeLockDuration(uint256):['1']
	withdrawAllTokens():['4']
	withdrawTokens(uint256):['4']
	initialize(address,uint256,uint256,uint256):['0', '1', '2', '3', '5']
	changeSpamPenaltyFactor(uint256):['3']
	changeLockAmount(uint256):['2']
============================
iteration:3
targets:['transferToVault(address)', 'forwardFee()', 'initialize(address,uint256,uint256,uint256)', 'getSpamPenalty(address)', 'getEVMScriptExecutor(bytes)', 'getRecoveryVault()', 'addressesWithdrawLocks(address,uint256)', 'withdrawAllTokens()', 'changeLockDuration(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'changeSpamPenaltyFactor(uint256)', 'changeLockAmount(uint256)', 'canPerform(address,bytes32,uint256[])']
['withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)']:writes at the last depth:['4']
contract coverage: 53.15%
============================
iteration:4
['withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:5
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:6
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:7
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:8
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:9
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:10
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:11
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:12
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:13
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:14
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:15
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:16
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:17
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:18
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:19
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:20
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:21
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:22
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:23
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:24
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:25
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:26
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:27
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:28
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:29
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:30
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:31
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:32
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'withdrawAllTokens()', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:33
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:34
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:35
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:36
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:37
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:38
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:39
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getEVMScriptRegistry()', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:40
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:41
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:42
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:43
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:44
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:45
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:46
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawTokens(uint256)', 'getRecoveryVault()', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:47
['withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:48
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:49
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:50
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:51
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:52
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:53
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:54
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:55
['withdrawAllTokens()', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:56
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getEVMScriptRegistry()']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'withdrawAllTokens()']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'withdrawTokens(uint256)']:writes at the last depth:['4']
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'transferToVault(address)']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:57
['withdrawAllTokens()', 'transferToVault(address)', 'transferToVault(address)', 'getRecoveryVault()']:writes at the last depth:[]
contract coverage: 53.15%
============================
iteration:58
contract coverage: 53.15%
============================
iteration:59
contract coverage: 53.15%
============================
iteration:60
contract coverage: 53.15%
============================
iteration:61
contract coverage: 53.15%
============================
iteration:62
contract coverage: 53.15%
============================
iteration:63
contract coverage: 53.15%
============================
iteration:64
contract coverage: 53.15%
============================
iteration:65
contract coverage: 53.15%
#@statespace
33177 nodes, 33176 edges, 450881 total states
#@coverage
Achieved 1.75% coverage for code: 60806040526200001d62000023640100000000026401000000009004565b62000309565b60006200003e6200015e640100000000026401000000009004565b146040805190810160405280601881526020017f494e49545f414c52454144595f494e495449414c495a4544000000000000000081525090151562000121576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620000e5578082015181840152602081019050620000c8565b50505050905090810190601f168015620001135780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506200015c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff620001ab640100000000026401000000009004565b565b6000620001a67febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e60010260001916620002f76401000000000262002b99176401000000009004565b905090565b6000620001c66200015e640100000000026401000000009004565b146040805190810160405280601881526020017f494e49545f414c52454144595f494e495449414c495a45440000000000000000815250901515620002a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200026d57808201518184015260208101905062000250565b50505050905090810190601f1680156200029b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50620002f4817febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e60010260001916620003026401000000000262003e4a179091906401000000009004565b50565b600081549050919050565b8082555050565b61404280620003196000396000f3006080604052600436106101a1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806304554443146101a65780630803fac0146101d15780630c8b9aa71461020057806327a59fb814610233578063280da6fa146102605780632914b9bd146102775780632cd50f8c14610320578063315a095d1461035357806332f0a3b51461038057806345012748146103d757806345c7f83c1461043f5780634ec81af11461046a5780637e7db6e1146104cb57806380afdea81461052657806387a8ed2f146105595780638b3dd749146105b05780639c046a2e146105db5780639d4941d814610608578063a1658fad1461064b578063a479e508146106f7578063ae63e9931461074e578063bc7eef9014610781578063c0774df3146107df578063c187385014610880578063cbfa03d2146108ad578063d25482cd1461090b578063d4aae0c41461093e578063d8df5dc114610995578063d948d468146109c0578063de4796ed14610a29578063fc0c546a14610a58578063fc157cb414610aaf578063fd64eccb14610ada575b600080fd5b3480156101b257600080fd5b506101bb610b09565b6040518082815260200191505060405180910390f35b3480156101dd57600080fd5b506101e6610b0f565b604051808215151515815260200191505060405180910390f35b34801561020c57600080fd5b50610215610b3a565b60405180826000191660001916815260200191505060405180910390f35b34801561023f57600080fd5b5061025e60048036038101908080359060200190929190505050610b73565b005b34801561026c57600080fd5b50610275610d07565b005b34801561028357600080fd5b506102de600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610d5a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032c57600080fd5b50610335610e79565b60405180826000191660001916815260200191505060405180910390f35b34801561035f57600080fd5b5061037e60048036038101908080359060200190929190505050610eb2565b005b34801561038c57600080fd5b50610395610ebe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e357600080fd5b50610422600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6b565b604051808381526020018281526020019250505060405180910390f35b34801561044b57600080fd5b50610454610fab565b6040518082815260200191505060405180910390f35b34801561047657600080fd5b506104c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610fb1565b005b3480156104d757600080fd5b5061050c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112d3565b604051808215151515815260200191505060405180910390f35b34801561053257600080fd5b5061053b6112de565b60405180826000191660001916815260200191505060405180910390f35b34801561056557600080fd5b5061059a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611315565b6040518082815260200191505060405180910390f35b3480156105bc57600080fd5b506105c5611361565b6040518082815260200191505060405180910390f35b3480156105e757600080fd5b5061060660048036038101908080359060200190929190505050611398565b005b34801561061457600080fd5b50610649600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061152a565b005b34801561065757600080fd5b506106dd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611948565b604051808215151515815260200191505060405180910390f35b34801561070357600080fd5b5061070c611b44565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561075a57600080fd5b50610763611c5f565b60405180826000191660001916815260200191505060405180910390f35b34801561078d57600080fd5b506107c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c98565b604051808381526020018281526020019250505060405180910390f35b3480156107eb57600080fd5b50610866600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611e38565b604051808215151515815260200191505060405180910390f35b34801561088c57600080fd5b506108ab60048036038101908080359060200190929190505050611e8a565b005b3480156108b957600080fd5b506108c261201e565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561091757600080fd5b50610920612074565b60405180826000191660001916815260200191505060405180910390f35b34801561094a57600080fd5b506109536120ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a157600080fd5b506109aa6120e4565b6040518082815260200191505060405180910390f35b3480156109cc57600080fd5b50610a27600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506120ea565b005b348015610a3557600080fd5b50610a3e612544565b604051808215151515815260200191505060405180910390f35b348015610a6457600080fd5b50610a6d612575565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610abb57600080fd5b50610ac461259a565b6040518082815260200191505060405180910390f35b348015610ae657600080fd5b50610aef6125a6565b604051808215151515815260200191505060405180910390f35b60015481565b600080610b1a611361565b905060008114158015610b34575080610b316125af565b10155b91505090565b60405180807f4348414e47455f4455524154494f4e5f524f4c450000000000000000000000008152506014019050604051809103902081565b60405180807f4348414e47455f4455524154494f4e5f524f4c4500000000000000000000000081525060140190506040518091039020610be433826000604051908082528060200260200182016040528015610bde5781602001602082028038833980820191505090505b50611948565b6040805190810160405280600f81526020017f4150505f415554485f4641494c45440000000000000000000000000000000000815250901515610cc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c87578082015181840152602081019050610c6c565b50505050905090810190601f168015610cb45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816001819055507f2416e279d018f03f6e6e190f55a4363348eca1c39db39c5e2019249d761423236001546040518082815260200191505060405180910390a15050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610d5781805490506125b7565b50565b6000610d64611b44565b73ffffffffffffffffffffffffffffffffffffffff166304bf2a7f836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610deb578082015181840152602081019050610dd0565b50505050905090810190601f168015610e185780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e3757600080fd5b505af1158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b81019080805190602001909291905050509050919050565b60405180807f4c4f434b5f544f4b454e535f524f4c45000000000000000000000000000000008152506010019050604051809103902081565b610ebb816125b7565b50565b6000610ec86120ad565b73ffffffffffffffffffffffffffffffffffffffff166332f0a3b56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050506040513d6020811015610f5557600080fd5b8101908080519060200190929190505050905090565b600460205281600052604060002081815481101515610f8657fe5b9060005260206000209060020201600091509150508060000154908060010154905082565b60035481565b6000610fbb611361565b146040805190810160405280601881526020017f494e49545f414c52454144595f494e495449414c495a4544000000000000000081525090151561109a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561105f578082015181840152602081019050611044565b50505050905090810190601f16801561108c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506110a484612a0f565b6040805190810160405280601681526020017f54494d455f4c4f434b5f4e4f545f434f4e545241435400000000000000000000815250901515611182576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114757808201518184015260208101905061112c565b50505050905090810190601f1680156111745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600181905550816002819055508060038190555060053090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060056000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506112cd612a61565b50505050565b600060019050919050565b60006113107fd625496217aa6a3453eecb9c3489dc5a53e6c67b444329ea2b2cbc9ff547639b60010260001916612b8e565b905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006113937febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e60010260001916612b99565b905090565b60405180807f4348414e47455f5350414d5f50454e414c54595f524f4c45000000000000000081525060180190506040518091039020611409338260006040519080825280602002602001820160405280156114035781602001602082028038833980820191505090505b50611948565b6040805190810160405280600f81526020017f4150505f415554485f4641494c454400000000000000000000000000000000008152509015156114e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114ac578082015181840152602081019050611491565b50505050905090810190601f1680156114d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816003819055507f101b31c692609591b406381d7ca79d94dc8b46a91e62e436cdc1cf5f2d90a35f826040518082815260200191505060405180910390a15050565b6000806000611538846112d3565b6040805190810160405280601281526020017f5245434f5645525f444953414c4c4f5745440000000000000000000000000000815250901515611616576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115db5780820151818401526020810190506115c0565b50505050905090810190601f1680156116085780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061161f610ebe565b925061162a83612a0f565b6040805190810160405280601a81526020017f5245434f5645525f5641554c545f4e4f545f434f4e5452414354000000000000815250901515611708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116cd5780820151818401526020810190506116b2565b50505050905090810190601f1680156116fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156117a4573073ffffffffffffffffffffffffffffffffffffffff163191508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561179e573d6000803e3d6000fd5b506118dd565b8390506117d0308273ffffffffffffffffffffffffffffffffffffffff16612ba490919063ffffffff16565b91506117fd83838373ffffffffffffffffffffffffffffffffffffffff16612d7e9092919063ffffffff16565b6040805190810160405280601d81526020017f5245434f5645525f544f4b454e5f5452414e534645525f4641494c45440000008152509015156118db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118a0578082015181840152602081019050611885565b50505050905090810190601f1680156118cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f596caf56044b55fb8c4ca640089bbc2b63cae3e978b851f5745cbb7c5b288e02846040518082815260200191505060405180910390a350505050565b600080611953610b0f565b15156119625760009150611b3c565b61196a6120ad565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119aa5760009150611b3c565b8073ffffffffffffffffffffffffffffffffffffffff1663fdef91068630876119d288612e5e565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611aaf578082015181840152602081019050611a94565b50505050905090810190601f168015611adc5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611afe57600080fd5b505af1158015611b12573d6000803e3d6000fd5b505050506040513d6020811015611b2857600080fd5b810190808051906020019092919050505091505b509392505050565b600080611b4f6120ad565b73ffffffffffffffffffffffffffffffffffffffff1663be00bbd87fd6f028ca0e8edb4a8c9757ca4fdccab25fa1e0317da1188108f7d2dee14902fb6001027fddbcfd564f642ab5627cf68b9b7d374fb4f8a36e941a75d89c87998cef03bd616001026040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808360001916600019168152602001826000191660001916815260200192505050602060405180830381600087803b158015611c1b57600080fd5b505af1158015611c2f573d6000803e3d6000fd5b505050506040513d6020811015611c4557600080fd5b810190808051906020019092919050505090508091505090565b60405180807f4348414e47455f5350414d5f50454e414c54595f524f4c4500000000000000008152506018019050604051809103902081565b6000806060600080600080600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611d4857838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190611d02565b50505050945060009350600092505b8451831015611d9e578483815181101515611d6e57fe5b9060200190602002015160000151611d84612e75565b1015611d91576001840193505b8280600101935050611d57565b611de1670de0b6b3a7640000611dd3600354611dc588600254612e7d90919063ffffffff16565b612e7d90919063ffffffff16565b612f8f90919063ffffffff16565b9150611e26670de0b6b3a7640000611e18600354611e0a88600154612e7d90919063ffffffff16565b612e7d90919063ffffffff16565b612f8f90919063ffffffff16565b90508181965096505050505050915091565b6000611e828360405180807f4c4f434b5f544f4b454e535f524f4c450000000000000000000000000000000081525060100190506040518091039020611e7d8661308d565b611948565b905092915050565b60405180807f4348414e47455f414d4f554e545f524f4c45000000000000000000000000000081525060120190506040518091039020611efb33826000604051908082528060200260200182016040528015611ef55781602001602082028038833980820191505090505b50611948565b6040805190810160405280600f81526020017f4150505f415554485f4641494c45440000000000000000000000000000000000815250901515611fd9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f9e578082015181840152602081019050611f83565b50505050905090810190601f168015611fcb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816002819055507faf61ecd393f0e8122db75b71e0150bbaa2827b8ae85e593674f6d0b0fe9a23936002546040518082815260200191505060405180910390a15050565b60008060008061202d33611c98565b509150612045826002546130b590919063ffffffff16565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16819350935050509091565b60405180807f4348414e47455f414d4f554e545f524f4c4500000000000000000000000000008152506012019050604051809103902081565b60006120df7f4172f0f7d2289153072b0a6ca36959e0cbe2efc3afe50fc81636caa96338137b600102600019166131aa565b905090565b60025481565b6000806000806000806120fd3388611e38565b6040805190810160405280601981526020017f54494d455f4c4f434b5f43414e5f4e4f545f464f5257415244000000000000008152509015156121db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121a0578082015181840152602081019050612185565b50505050905090810190601f1680156121cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506121e5876131b5565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020955061222f33611c98565b94509450612248856002546130b590919063ffffffff16565b925061225f846001546130b590919063ffffffff16565b915061227b8261226d612e75565b6130b590919063ffffffff16565b9050856040805190810160405280838152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506123233330856000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166134e5909392919063ffffffff16565b6040805190810160405280601b81526020017f54494d455f4c4f434b5f5452414e534645525f52455645525445440000000000815250901515612401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156123c65780820151818401526020810190506123ab565b50505050905090810190601f1680156123f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b507f7879fe07a34927cf93a00574a8c2e55740a44179eb359ed6850e486df16c5222338285604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a161253a8760006040519080825280601f01601f1916602001820160405280156124ad5781602001602082028038833980820191505090505b50600580548060200260200160405190810160405280929190818152602001828054801561253057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124e6575b5050505050613613565b5050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61256f611361565b14905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a764000081565b60006001905090565b600043905090565b6000806000806000806125c8613f9b565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020985088805490508a1115606060405190810160405280602181526020017f54494d455f4c4f434b5f544f4f5f4d414e595f57495448445241575f4c4f434b81526020017f5300000000000000000000000000000000000000000000000000000000000000815250901515612719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126de5780820151818401526020810190506126c3565b50505050905090810190601f16801561270b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000975060009650888054905095508994505b60008511156127e957600185039350888481548110151561274a57fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505092508260000151612786612e75565b11156127db576127a38360200151896130b590919063ffffffff16565b975060018701965088848154811015156127b957fe5b9060005260206000209060020201600080820160009055600182016000905550505b84806001900395505061272d565b8686039150600090505b8181101561288a578887820181548110151561280b57fe5b9060005260206000209060020201898281548110151561282757fe5b906000526020600020906002020160008201548160000155600182015481600101559050508887820181548110151561285c57fe5b90600052602060002090600202016000808201600090556001820160009055505080806001019150506127f3565b8189816128979190613fb5565b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338a6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561295c57600080fd5b505af1158015612970573d6000803e3d6000fd5b505050506040513d602081101561298657600080fd5b8101908080519060200190929190505050507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b653388604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150505050505050505050565b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612a505760009150612a5b565b823b90506000811191505b50919050565b6000612a6b611361565b146040805190810160405280601881526020017f494e49545f414c52454144595f494e495449414c495a45440000000000000000815250901515612b4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b0f578082015181840152602081019050612af4565b50505050905090810190601f168015612b3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612b8c612b566125af565b7febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e60010260001916613e4a90919063ffffffff16565b565b600081549050919050565b600081549050919050565b600060606000808573ffffffffffffffffffffffffffffffffffffffff166370a0823190507c01000000000000000000000000000000000000000000000000000000000285604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509250612c8e8684613e51565b91509150816040805190810160405280601c81526020017f534146455f4552435f32305f42414c414e43455f524556455254454400000000815250901515612d71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d36578082015181840152602081019050612d1b565b50505050905090810190601f168015612d635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5080935050505092915050565b6000606063a9059cbb7c0100000000000000000000000000000000000000000000000000000000028484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050612e548582613e86565b9150509392505050565b606060006020835102905082915080825250919050565b600042905090565b6000806000841415612e925760009150612f88565b8284029050828482811515612ea357fe5b04146040805190810160405280601181526020017f4d4154485f4d554c5f4f564552464c4f57000000000000000000000000000000815250901515612f83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f48578082015181840152602081019050612f2d565b50505050905090810190601f168015612f755780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508091505b5092915050565b600080600083116040805190810160405280600d81526020017f4d4154485f4449565f5a45524f00000000000000000000000000000000000000815250901515613074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561303957808201518184015260208101905061301e565b50505050905090810190601f1680156130665780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50828481151561308057fe5b0490508091505092915050565b60606130ae8273ffffffffffffffffffffffffffffffffffffffff16613ed8565b9050919050565b6000808284019050838110156040805190810160405280601181526020017f4d4154485f4144445f4f564552464c4f5700000000000000000000000000000081525090151561319f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613164578082015181840152602081019050613149565b50505050905090810190601f1680156131915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508091505092915050565b600081549050919050565b6000806000806000806000600496506014955060049450601893506131d988610d5a565b92507f2dc858a00f3e417be1394b87c07158e989ec681ce8cc68a9093680ac1a870302600102600019168373ffffffffffffffffffffffffffffffffffffffff16638333d9b26040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561326757600080fd5b505af115801561327b573d6000803e3d6000fd5b505050506040513d602081101561329157600080fd5b81019080805190602001909291905050506000191614606060405190810160405280602381526020017f54494d455f4c4f434b5f5553455f43414c4c535f5343524950545f455845435581526020017f544f5200000000000000000000000000000000000000000000000000000000008152509015156133ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613371578082015181840152602081019050613356565b50505050905090810190601f16801561339e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506133c08489613f3090919063ffffffff16565b63ffffffff16915081858789010101905087518114606060405190810160405280602181526020017f54494d455f4c4f434b5f5343524950545f494e434f52524543545f4c454e475481526020017f48000000000000000000000000000000000000000000000000000000000000008152509015156134da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561349f578082015181840152602081019050613484565b50505050905090810190601f1680156134cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505050505050565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd90507c010000000000000000000000000000000000000000000000000000000002858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506136088682613e86565b915050949350505050565b6060600080606080613623610b0f565b6040805190810160405280601481526020017f494e49545f4e4f545f494e495449414c495a4544000000000000000000000000815250901515613701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136c65780820151818401526020810190506136ab565b50505050905090810190601f1680156136f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008061370d6120ad565b91506137176112de565b90506137228a610d5a565b9550600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601b81526020017f45564d52554e5f4558454355544f525f554e415641494c41424c450000000000815250901515613833576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156137f85780820151818401526020810190506137dd565b50505050905090810190601f1680156138255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508573ffffffffffffffffffffffffffffffffffffffff1663279cea3590507c0100000000000000000000000000000000000000000000000000000000029450848a8a8a60405160240180806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156138c25780820151818401526020810190506138a7565b50505050905090810190601f1680156138ef5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561392857808201518184015260208101905061390d565b50505050905090810190601f1680156139555780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019060200280838360005b83811015613991578082015181840152602081019050613976565b505050509050019650505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509350600080855160208701895af460405193508060008114613a9c57603f3d1160008114613a3a5760203d03806020883e80870160405250613a96565b7f08c379a000000000000000000000000000000000000000000000000000000000865260206004870152601e60248701527f45564d52554e5f4558454355544f525f494e56414c49445f52455455524e00006044870152606486fd5b50613aa5565b3d6000863e3d85fd5b50508573ffffffffffffffffffffffffffffffffffffffff167f5229a5dba83a54ae8cb5b51bdd6de9474cacbe9dd332f5185f3a4f4f2e3f4ad98b8b8660405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015613b2a578082015181840152602081019050613b0f565b50505050905090810190601f168015613b575780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015613b90578082015181840152602081019050613b75565b50505050905090810190601f168015613bbd5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015613bf6578082015181840152602081019050613bdb565b50505050905090810190601f168015613c235780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a28296508173ffffffffffffffffffffffffffffffffffffffff16613c566120ad565b73ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601f81526020017f45564d52554e5f50524f5445435445445f53544154455f4d4f44494649454400815250901515613d4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613d10578082015181840152602081019050613cf5565b50505050905090810190601f168015613d3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508060001916613d596112de565b60001916146040805190810160405280601f81526020017f45564d52554e5f50524f5445435445445f53544154455f4d4f44494649454400815250901515613e3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613e01578082015181840152602081019050613de6565b50505050905090810190601f168015613e2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505050509392505050565b8082555050565b6000806000806040516020818751602089018a5afa92506000831115613e7657805191505b5081819350935050509250929050565b6000806040516020818551602087016000895af16000811115613ecc573d60008114613eb95760208114613ec257613eca565b60019350613eca565b600183511493505b505b50508091505092915050565b60606001604051908082528060200260200182016040528015613f0a5781602001602082028038833980820191505090505b50905081816000815181101515613f1d57fe5b9060200190602002018181525050919050565b600080613f3d8484613f8a565b90507c01000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082160491505092915050565b600081602001830151905092915050565b604080519081016040528060008152602001600081525090565b815481835581811115613fe257600202816002028360005260206000209182019101613fe19190613fe7565b5b505050565b61401391905b8082111561400f57600080820160009055600182016000905550600201613fed565b5090565b905600a165627a7a7230582059a61c9ed6b026fcc3754537bc5f0e4605800b31475a6fc88571ba855656117e0029
#@coverage
Achieved 53.15% coverage for code: 6080604052600436106101a1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806304554443146101a65780630803fac0146101d15780630c8b9aa71461020057806327a59fb814610233578063280da6fa146102605780632914b9bd146102775780632cd50f8c14610320578063315a095d1461035357806332f0a3b51461038057806345012748146103d757806345c7f83c1461043f5780634ec81af11461046a5780637e7db6e1146104cb57806380afdea81461052657806387a8ed2f146105595780638b3dd749146105b05780639c046a2e146105db5780639d4941d814610608578063a1658fad1461064b578063a479e508146106f7578063ae63e9931461074e578063bc7eef9014610781578063c0774df3146107df578063c187385014610880578063cbfa03d2146108ad578063d25482cd1461090b578063d4aae0c41461093e578063d8df5dc114610995578063d948d468146109c0578063de4796ed14610a29578063fc0c546a14610a58578063fc157cb414610aaf578063fd64eccb14610ada575b600080fd5b3480156101b257600080fd5b506101bb610b09565b6040518082815260200191505060405180910390f35b3480156101dd57600080fd5b506101e6610b0f565b604051808215151515815260200191505060405180910390f35b34801561020c57600080fd5b50610215610b3a565b60405180826000191660001916815260200191505060405180910390f35b34801561023f57600080fd5b5061025e60048036038101908080359060200190929190505050610b73565b005b34801561026c57600080fd5b50610275610d07565b005b34801561028357600080fd5b506102de600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610d5a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032c57600080fd5b50610335610e79565b60405180826000191660001916815260200191505060405180910390f35b34801561035f57600080fd5b5061037e60048036038101908080359060200190929190505050610eb2565b005b34801561038c57600080fd5b50610395610ebe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e357600080fd5b50610422600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6b565b604051808381526020018281526020019250505060405180910390f35b34801561044b57600080fd5b50610454610fab565b6040518082815260200191505060405180910390f35b34801561047657600080fd5b506104c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610fb1565b005b3480156104d757600080fd5b5061050c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112d3565b604051808215151515815260200191505060405180910390f35b34801561053257600080fd5b5061053b6112de565b60405180826000191660001916815260200191505060405180910390f35b34801561056557600080fd5b5061059a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611315565b6040518082815260200191505060405180910390f35b3480156105bc57600080fd5b506105c5611361565b6040518082815260200191505060405180910390f35b3480156105e757600080fd5b5061060660048036038101908080359060200190929190505050611398565b005b34801561061457600080fd5b50610649600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061152a565b005b34801561065757600080fd5b506106dd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611948565b604051808215151515815260200191505060405180910390f35b34801561070357600080fd5b5061070c611b44565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561075a57600080fd5b50610763611c5f565b60405180826000191660001916815260200191505060405180910390f35b34801561078d57600080fd5b506107c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c98565b604051808381526020018281526020019250505060405180910390f35b3480156107eb57600080fd5b50610866600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611e38565b604051808215151515815260200191505060405180910390f35b34801561088c57600080fd5b506108ab60048036038101908080359060200190929190505050611e8a565b005b3480156108b957600080fd5b506108c261201e565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561091757600080fd5b50610920612074565b60405180826000191660001916815260200191505060405180910390f35b34801561094a57600080fd5b506109536120ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a157600080fd5b506109aa6120e4565b6040518082815260200191505060405180910390f35b3480156109cc57600080fd5b50610a27600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506120ea565b005b348015610a3557600080fd5b50610a3e612544565b604051808215151515815260200191505060405180910390f35b348015610a6457600080fd5b50610a6d612575565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610abb57600080fd5b50610ac461259a565b6040518082815260200191505060405180910390f35b348015610ae657600080fd5b50610aef6125a6565b604051808215151515815260200191505060405180910390f35b60015481565b600080610b1a611361565b905060008114158015610b34575080610b316125af565b10155b91505090565b60405180807f4348414e47455f4455524154494f4e5f524f4c450000000000000000000000008152506014019050604051809103902081565b60405180807f4348414e47455f4455524154494f4e5f524f4c4500000000000000000000000081525060140190506040518091039020610be433826000604051908082528060200260200182016040528015610bde5781602001602082028038833980820191505090505b50611948565b6040805190810160405280600f81526020017f4150505f415554485f4641494c45440000000000000000000000000000000000815250901515610cc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c87578082015181840152602081019050610c6c565b50505050905090810190601f168015610cb45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816001819055507f2416e279d018f03f6e6e190f55a4363348eca1c39db39c5e2019249d761423236001546040518082815260200191505060405180910390a15050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610d5781805490506125b7565b50565b6000610d64611b44565b73ffffffffffffffffffffffffffffffffffffffff166304bf2a7f836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610deb578082015181840152602081019050610dd0565b50505050905090810190601f168015610e185780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e3757600080fd5b505af1158015610e4b573d6000803e3d6000fd5b505050506040513d6020811015610e6157600080fd5b81019080805190602001909291905050509050919050565b60405180807f4c4f434b5f544f4b454e535f524f4c45000000000000000000000000000000008152506010019050604051809103902081565b610ebb816125b7565b50565b6000610ec86120ad565b73ffffffffffffffffffffffffffffffffffffffff166332f0a3b56040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050506040513d6020811015610f5557600080fd5b8101908080519060200190929190505050905090565b600460205281600052604060002081815481101515610f8657fe5b9060005260206000209060020201600091509150508060000154908060010154905082565b60035481565b6000610fbb611361565b146040805190810160405280601881526020017f494e49545f414c52454144595f494e495449414c495a4544000000000000000081525090151561109a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561105f578082015181840152602081019050611044565b50505050905090810190601f16801561108c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506110a484612a0f565b6040805190810160405280601681526020017f54494d455f4c4f434b5f4e4f545f434f4e545241435400000000000000000000815250901515611182576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561114757808201518184015260208101905061112c565b50505050905090810190601f1680156111745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600181905550816002819055508060038190555060053090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060056000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506112cd612a61565b50505050565b600060019050919050565b60006113107fd625496217aa6a3453eecb9c3489dc5a53e6c67b444329ea2b2cbc9ff547639b60010260001916612b8e565b905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006113937febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e60010260001916612b99565b905090565b60405180807f4348414e47455f5350414d5f50454e414c54595f524f4c45000000000000000081525060180190506040518091039020611409338260006040519080825280602002602001820160405280156114035781602001602082028038833980820191505090505b50611948565b6040805190810160405280600f81526020017f4150505f415554485f4641494c454400000000000000000000000000000000008152509015156114e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114ac578082015181840152602081019050611491565b50505050905090810190601f1680156114d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816003819055507f101b31c692609591b406381d7ca79d94dc8b46a91e62e436cdc1cf5f2d90a35f826040518082815260200191505060405180910390a15050565b6000806000611538846112d3565b6040805190810160405280601281526020017f5245434f5645525f444953414c4c4f5745440000000000000000000000000000815250901515611616576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115db5780820151818401526020810190506115c0565b50505050905090810190601f1680156116085780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061161f610ebe565b925061162a83612a0f565b6040805190810160405280601a81526020017f5245434f5645525f5641554c545f4e4f545f434f4e5452414354000000000000815250901515611708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116cd5780820151818401526020810190506116b2565b50505050905090810190601f1680156116fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156117a4573073ffffffffffffffffffffffffffffffffffffffff163191508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561179e573d6000803e3d6000fd5b506118dd565b8390506117d0308273ffffffffffffffffffffffffffffffffffffffff16612ba490919063ffffffff16565b91506117fd83838373ffffffffffffffffffffffffffffffffffffffff16612d7e9092919063ffffffff16565b6040805190810160405280601d81526020017f5245434f5645525f544f4b454e5f5452414e534645525f4641494c45440000008152509015156118db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118a0578082015181840152602081019050611885565b50505050905090810190601f1680156118cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505b8373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f596caf56044b55fb8c4ca640089bbc2b63cae3e978b851f5745cbb7c5b288e02846040518082815260200191505060405180910390a350505050565b600080611953610b0f565b15156119625760009150611b3c565b61196a6120ad565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119aa5760009150611b3c565b8073ffffffffffffffffffffffffffffffffffffffff1663fdef91068630876119d288612e5e565b6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611aaf578082015181840152602081019050611a94565b50505050905090810190601f168015611adc5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611afe57600080fd5b505af1158015611b12573d6000803e3d6000fd5b505050506040513d6020811015611b2857600080fd5b810190808051906020019092919050505091505b509392505050565b600080611b4f6120ad565b73ffffffffffffffffffffffffffffffffffffffff1663be00bbd87fd6f028ca0e8edb4a8c9757ca4fdccab25fa1e0317da1188108f7d2dee14902fb6001027fddbcfd564f642ab5627cf68b9b7d374fb4f8a36e941a75d89c87998cef03bd616001026040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808360001916600019168152602001826000191660001916815260200192505050602060405180830381600087803b158015611c1b57600080fd5b505af1158015611c2f573d6000803e3d6000fd5b505050506040513d6020811015611c4557600080fd5b810190808051906020019092919050505090508091505090565b60405180807f4348414e47455f5350414d5f50454e414c54595f524f4c4500000000000000008152506018019050604051809103902081565b6000806060600080600080600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611d4857838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190611d02565b50505050945060009350600092505b8451831015611d9e578483815181101515611d6e57fe5b9060200190602002015160000151611d84612e75565b1015611d91576001840193505b8280600101935050611d57565b611de1670de0b6b3a7640000611dd3600354611dc588600254612e7d90919063ffffffff16565b612e7d90919063ffffffff16565b612f8f90919063ffffffff16565b9150611e26670de0b6b3a7640000611e18600354611e0a88600154612e7d90919063ffffffff16565b612e7d90919063ffffffff16565b612f8f90919063ffffffff16565b90508181965096505050505050915091565b6000611e828360405180807f4c4f434b5f544f4b454e535f524f4c450000000000000000000000000000000081525060100190506040518091039020611e7d8661308d565b611948565b905092915050565b60405180807f4348414e47455f414d4f554e545f524f4c45000000000000000000000000000081525060120190506040518091039020611efb33826000604051908082528060200260200182016040528015611ef55781602001602082028038833980820191505090505b50611948565b6040805190810160405280600f81526020017f4150505f415554485f4641494c45440000000000000000000000000000000000815250901515611fd9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f9e578082015181840152602081019050611f83565b50505050905090810190601f168015611fcb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816002819055507faf61ecd393f0e8122db75b71e0150bbaa2827b8ae85e593674f6d0b0fe9a23936002546040518082815260200191505060405180910390a15050565b60008060008061202d33611c98565b509150612045826002546130b590919063ffffffff16565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16819350935050509091565b60405180807f4348414e47455f414d4f554e545f524f4c4500000000000000000000000000008152506012019050604051809103902081565b60006120df7f4172f0f7d2289153072b0a6ca36959e0cbe2efc3afe50fc81636caa96338137b600102600019166131aa565b905090565b60025481565b6000806000806000806120fd3388611e38565b6040805190810160405280601981526020017f54494d455f4c4f434b5f43414e5f4e4f545f464f5257415244000000000000008152509015156121db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121a0578082015181840152602081019050612185565b50505050905090810190601f1680156121cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506121e5876131b5565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020955061222f33611c98565b94509450612248856002546130b590919063ffffffff16565b925061225f846001546130b590919063ffffffff16565b915061227b8261226d612e75565b6130b590919063ffffffff16565b9050856040805190810160405280838152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506123233330856000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166134e5909392919063ffffffff16565b6040805190810160405280601b81526020017f54494d455f4c4f434b5f5452414e534645525f52455645525445440000000000815250901515612401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156123c65780820151818401526020810190506123ab565b50505050905090810190601f1680156123f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b507f7879fe07a34927cf93a00574a8c2e55740a44179eb359ed6850e486df16c5222338285604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a161253a8760006040519080825280601f01601f1916602001820160405280156124ad5781602001602082028038833980820191505090505b50600580548060200260200160405190810160405280929190818152602001828054801561253057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124e6575b5050505050613613565b5050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61256f611361565b14905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a764000081565b60006001905090565b600043905090565b6000806000806000806125c8613f9b565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020985088805490508a1115606060405190810160405280602181526020017f54494d455f4c4f434b5f544f4f5f4d414e595f57495448445241575f4c4f434b81526020017f5300000000000000000000000000000000000000000000000000000000000000815250901515612719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126de5780820151818401526020810190506126c3565b50505050905090810190601f16801561270b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000975060009650888054905095508994505b60008511156127e957600185039350888481548110151561274a57fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505092508260000151612786612e75565b11156127db576127a38360200151896130b590919063ffffffff16565b975060018701965088848154811015156127b957fe5b9060005260206000209060020201600080820160009055600182016000905550505b84806001900395505061272d565b8686039150600090505b8181101561288a578887820181548110151561280b57fe5b9060005260206000209060020201898281548110151561282757fe5b906000526020600020906002020160008201548160000155600182015481600101559050508887820181548110151561285c57fe5b90600052602060002090600202016000808201600090556001820160009055505080806001019150506127f3565b8189816128979190613fb5565b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338a6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561295c57600080fd5b505af1158015612970573d6000803e3d6000fd5b505050506040513d602081101561298657600080fd5b8101908080519060200190929190505050507f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b653388604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150505050505050505050565b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612a505760009150612a5b565b823b90506000811191505b50919050565b6000612a6b611361565b146040805190810160405280601881526020017f494e49545f414c52454144595f494e495449414c495a45440000000000000000815250901515612b4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b0f578082015181840152602081019050612af4565b50505050905090810190601f168015612b3c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612b8c612b566125af565b7febb05b386a8d34882b8711d156f463690983dc47815980fb82aeeff1aa43579e60010260001916613e4a90919063ffffffff16565b565b600081549050919050565b600081549050919050565b600060606000808573ffffffffffffffffffffffffffffffffffffffff166370a0823190507c01000000000000000000000000000000000000000000000000000000000285604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509250612c8e8684613e51565b91509150816040805190810160405280601c81526020017f534146455f4552435f32305f42414c414e43455f524556455254454400000000815250901515612d71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d36578082015181840152602081019050612d1b565b50505050905090810190601f168015612d635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5080935050505092915050565b6000606063a9059cbb7c0100000000000000000000000000000000000000000000000000000000028484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050612e548582613e86565b9150509392505050565b606060006020835102905082915080825250919050565b600042905090565b6000806000841415612e925760009150612f88565b8284029050828482811515612ea357fe5b04146040805190810160405280601181526020017f4d4154485f4d554c5f4f564552464c4f57000000000000000000000000000000815250901515612f83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f48578082015181840152602081019050612f2d565b50505050905090810190601f168015612f755780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508091505b5092915050565b600080600083116040805190810160405280600d81526020017f4d4154485f4449565f5a45524f00000000000000000000000000000000000000815250901515613074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561303957808201518184015260208101905061301e565b50505050905090810190601f1680156130665780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50828481151561308057fe5b0490508091505092915050565b60606130ae8273ffffffffffffffffffffffffffffffffffffffff16613ed8565b9050919050565b6000808284019050838110156040805190810160405280601181526020017f4d4154485f4144445f4f564552464c4f5700000000000000000000000000000081525090151561319f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613164578082015181840152602081019050613149565b50505050905090810190601f1680156131915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508091505092915050565b600081549050919050565b6000806000806000806000600496506014955060049450601893506131d988610d5a565b92507f2dc858a00f3e417be1394b87c07158e989ec681ce8cc68a9093680ac1a870302600102600019168373ffffffffffffffffffffffffffffffffffffffff16638333d9b26040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561326757600080fd5b505af115801561327b573d6000803e3d6000fd5b505050506040513d602081101561329157600080fd5b81019080805190602001909291905050506000191614606060405190810160405280602381526020017f54494d455f4c4f434b5f5553455f43414c4c535f5343524950545f455845435581526020017f544f5200000000000000000000000000000000000000000000000000000000008152509015156133ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613371578082015181840152602081019050613356565b50505050905090810190601f16801561339e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506133c08489613f3090919063ffffffff16565b63ffffffff16915081858789010101905087518114606060405190810160405280602181526020017f54494d455f4c4f434b5f5343524950545f494e434f52524543545f4c454e475481526020017f48000000000000000000000000000000000000000000000000000000000000008152509015156134da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561349f578082015181840152602081019050613484565b50505050905090810190601f1680156134cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505050505050565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd90507c010000000000000000000000000000000000000000000000000000000002858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506136088682613e86565b915050949350505050565b6060600080606080613623610b0f565b6040805190810160405280601481526020017f494e49545f4e4f545f494e495449414c495a4544000000000000000000000000815250901515613701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136c65780820151818401526020810190506136ab565b50505050905090810190601f1680156136f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008061370d6120ad565b91506137176112de565b90506137228a610d5a565b9550600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040805190810160405280601b81526020017f45564d52554e5f4558454355544f525f554e415641494c41424c450000000000815250901515613833576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156137f85780820151818401526020810190506137dd565b50505050905090810190601f1680156138255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508573ffffffffffffffffffffffffffffffffffffffff1663279cea3590507c0100000000000000000000000000000000000000000000000000000000029450848a8a8a60405160240180806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156138c25780820151818401526020810190506138a7565b50505050905090810190601f1680156138ef5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561392857808201518184015260208101905061390d565b50505050905090810190601f1680156139555780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019060200280838360005b83811015613991578082015181840152602081019050613976565b505050509050019650505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509350600080855160208701895af460405193508060008114613a9c57603f3d1160008114613a3a5760203d03806020883e80870160405250613a96565b7f08c379a000000000000000000000000000000000000000000000000000000000865260206004870152601e60248701527f45564d52554e5f4558454355544f525f494e56414c49445f52455455524e00006044870152606486fd5b50613aa5565b3d6000863e3d85fd5b50508573ffffffffffffffffffffffffffffffffffffffff167f5229a5dba83a54ae8cb5b51bdd6de9474cacbe9dd332f5185f3a4f4f2e3f4ad98b8b8660405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015613b2a578082015181840152602081019050613b0f565b50505050905090810190601f168015613b575780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015613b90578082015181840152602081019050613b75565b50505050905090810190601f168015613bbd5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015613bf6578082015181840152602081019050613bdb565b50505050905090810190601f168015613c235780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a28296508173ffffffffffffffffffffffffffffffffffffffff16613c566120ad565b73ffffffffffffffffffffffffffffffffffffffff16146040805190810160405280601f81526020017f45564d52554e5f50524f5445435445445f53544154455f4d4f44494649454400815250901515613d4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613d10578082015181840152602081019050613cf5565b50505050905090810190601f168015613d3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508060001916613d596112de565b60001916146040805190810160405280601f81526020017f45564d52554e5f50524f5445435445445f53544154455f4d4f44494649454400815250901515613e3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613e01578082015181840152602081019050613de6565b50505050905090810190601f168015613e2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050505050509392505050565b8082555050565b6000806000806040516020818751602089018a5afa92506000831115613e7657805191505b5081819350935050509250929050565b6000806040516020818551602087016000895af16000811115613ecc573d60008114613eb95760208114613ec257613eca565b60019350613eca565b600183511493505b505b50508091505092915050565b60606001604051908082528060200260200182016040528015613f0a5781602001602082028038833980820191505090505b50905081816000815181101515613f1d57fe5b9060200190602002018181525050919050565b600080613f3d8484613f8a565b90507c01000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000082160491505092915050565b600081602001830151905092915050565b604080519081016040528060008152602001600081525090565b815481835581811115613fe257600202816002028360005260206000209182019101613fe19190613fe7565b5b505050565b61401391905b8082111561400f57600080820160009055600182016000905550600201613fed565b5090565b905600a165627a7a7230582059a61c9ed6b026fcc3754537bc5f0e4605800b31475a6fc88571ba855656117e0029
==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: getRecoveryVault()
PC address: 3886
Estimated Gas Usage: 2896 - 37739
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:917

kernel().getRecoveryVault()

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0004000000002a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [ATTACKER], function: getRecoveryVault(), txdata: 0x32f0a3b5, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: transferToVault(address)
PC address: 3886
Estimated Gas Usage: 7298 - 77339
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:917

kernel().getRecoveryVault()

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: TimeLock
Function name: addressesWithdrawLocks(address,uint256)
PC address: 3973
Estimated Gas Usage: 1308 - 1593
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:1109

mapping(address => WithdrawLock[]) public addressesWithdrawLocks

--------------------
Initial State:

Account: [CREATOR], balance: 0x242880939a6abb82, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: addressesWithdrawLocks(address,uint256), txdata: 0x45012748, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TimeLock
Function name: transferToVault(address)
PC address: 6024
Estimated Gas Usage: 7298 - 77339
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:681

vault.transfer(balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: TimeLock
Function name: transferToVault(address)
PC address: 6024
Estimated Gas Usage: 8250 - 114832
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:681

vault.transfer(balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: transferToVault(address), txdata: 0x9d4941d800000000000000000000000008, decoded_data: ('0x0800000000000000000000000000000000000000',), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: transferToVault(address)
PC address: 6024
Estimated Gas Usage: 7298 - 77339
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:681

vault.transfer(balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000100001b4000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3dc1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: withdrawAllTokens(), txdata: 0x280da6fa, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: TimeLock
Function name: changeLockDuration(uint256)
PC address: 6489
Estimated Gas Usage: 1470 - 2129
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:897

if (!hasInitialized()) {
            return false;
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeLockDuration(uint256), txdata: 0x27a59fb8, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: getEVMScriptRegistry()
PC address: 7198
Estimated Gas Usage: 3257 - 38290
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:782

kernel().getApp(KERNEL_APP_ADDR_NAMESPACE, EVMSCRIPT_REGISTRY_APP_ID)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [ATTACKER], function: getEVMScriptRegistry(), txdata: 0xa479e508, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: withdrawAllTokens()
PC address: 10591
Estimated Gas Usage: 12464 - 69409
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:1249

token.transfer(msg.sender, amountOwed)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [ATTACKER], function: withdrawAllTokens(), txdata: 0x280da6fa, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: withdrawTokens(uint256)
PC address: 10591
Estimated Gas Usage: 11678 - 68433
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:1249

token.transfer(msg.sender, amountOwed)

--------------------
Initial State:

Account: [CREATOR], balance: 0x94980000000001e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x6001000000002, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [CREATOR], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TimeLock
Function name: transferToVault(address)
PC address: 15974
Estimated Gas Usage: 8250 - 114832
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:568

staticcall(
                gas,                  
                _addr,                
                add(_calldata, 0x20), 
                mload(_calldata),     
                ptr,                  
                0x20                  
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: transferToVault(address), txdata: 0x9d4941d800000000000000000000000040, decoded_data: ('0x4000000000000000000000000000000000000000',), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: transferToVault(address)
PC address: 15974
Estimated Gas Usage: 8250 - 114832
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:568

staticcall(
                gas,                  
                _addr,                
                add(_calldata, 0x20), 
                mload(_calldata),     
                ptr,                  
                0x20                  
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [CREATOR], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [SOMEGUY], function: getRecoveryVault(), txdata: 0x32f0a3b5, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d832323232323232323232323210, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TimeLock
Function name: transferToVault(address)
PC address: 16026
Estimated Gas Usage: 8250 - 114832
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:525

call(
                gas,                  
                _addr,                
                0,                    
                add(_calldata, 0x20), 
                mload(_calldata),     
                ptr,                  
                0x20                  
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: transferToVault(address), txdata: 0x9d4941d8efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TimeLock
Function name: transferToVault(address)
PC address: 16026
Estimated Gas Usage: 8250 - 114832
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:525

call(
                gas,                  
                _addr,                
                0,                    
                add(_calldata, 0x20), 
                mload(_calldata),     
                ptr,                  
                0x20                  
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [SOMEGUY], function: transferToVault(address), txdata: 0x9d4941d800000000000000000000000080, decoded_data: ('0x8000000000000000000000000000000000000000',), value: 0x0
Caller: [CREATOR], function: transferToVault(address), txdata: 0x9d4941d800000000000000000000000010, decoded_data: ('0x1000000000000000000000000000000000000000',), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: TimeLock
Function name: transferToVault(address)
PC address: 16026
Estimated Gas Usage: 8250 - 114832
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:525

call(
                gas,                  
                _addr,                
                0,                    
                add(_calldata, 0x20), 
                mload(_calldata),     
                ptr,                  
                0x20                  
            )

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4a1680149840006c0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(uint256), txdata: 0x315a095d, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d8, value: 0x0
Caller: [ATTACKER], function: getRecoveryVault(), txdata: 0x32f0a3b5, value: 0x0
Caller: [ATTACKER], function: transferToVault(address), txdata: 0x9d4941d83232323232323232323232325e, value: 0x0


time_used: 36134.14114975929 seconds
#@contract_info_time
0x8DEcc97558329A4653b3Feca8c77E77E621AAFD5.sol:0.4.24:TimeLock:36134.14114975929:36100:60:36000
