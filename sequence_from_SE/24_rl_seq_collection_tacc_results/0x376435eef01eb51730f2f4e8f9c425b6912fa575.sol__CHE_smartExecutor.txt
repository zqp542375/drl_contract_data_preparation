++++ 0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol  :  0.4.23  :  CHE ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 8370
['constructor']:writes at the last depth:['2', '2', '3', '4', '5', '7', '8', '1', '6', '9']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 49.99% coverage.
dynamic svars:['2', '3', '9', '10', '11', '12']
static svars:['8', '6', '7', '1', '4', '5']
Ending preprocessing.
preprocessing time(s): 102.90262603759766
in sha3_() of instructions.py: get empty keccak hash
in sha3_() of instructions.py: get empty keccak hash
contract coverage: 71.88%
fallback is not reachable
symbol() is not reachable
name() is not reachable
distributeAirdrop(address[],uint256) is not reachable
Function Reads: State variables read in conditions
	mintingFinished():[]
	name():[]
	approve(address,uint256):[]
	totalSupply():[]
	transferFrom(address,address,uint256):['9', '10', '11', '12']
	decimals():[]
	initialSupply():[]
	mint(address,uint256):['1', '8', '6']
	distributeAmount():[]
	lockupAccounts(address[],uint256[]):['1']
	balanceOf(address):[]
	finishMinting():['1', '8']
	owner():[]
	distributeAirdrop(address[],uint256):['11', '12']
	symbol():[]
	burn(address,uint256):['1', '9']
	autoDistribute():['7', '9', '11', '12']
	transfer(address,uint256):['11', '12', '9']
	frozenAccount(address):[]
	transfer(address,uint256,bytes):[]
	freezeAccounts(address[],bool):['1']
	unlockUnixTime(address):[]
	setDistributeAmount(uint256):['1']
	allowance(address,address):[]
	distributeAirdrop(address[],uint256[]):[]
	collectTokens(address[],uint256[]):[]
	transferOwnership(address):['1']
	transfer(address,uint256,bytes,string):[]
Function Writes: State variables written
	approve(address,uint256):['10']
	fallback:['9']
	finishMinting():['8']
	mint(address,uint256):['6']
	setDistributeAmount(uint256):['7']
	transferFrom(address,address,uint256):['9']
	autoDistribute():['9']
	burn(address,uint256):['9']
============================
iteration:3
targets:['autoDistribute()', 'fallback', 'transferFrom(address,address,uint256)', 'symbol()', 'name()', 'finishMinting()', 'distributeAirdrop(address[],uint256)']
['approve(address,uint256)']:writes at the last depth:['10']
['finishMinting()']:writes at the last depth:['8']
['setDistributeAmount(uint256)']:writes at the last depth:['7']
['transferOwnership(address)']:writes at the last depth:['1']
['burn(address,uint256)']:writes at the last depth:['6', '9']
['mint(address,uint256)']:writes at the last depth:['6', '9']
['freezeAccounts(address[],bool)']:writes at the last depth:['']
['freezeAccounts(address[],bool)']:writes at the last depth:['']
['transfer(address,uint256)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
['transfer(address,uint256,bytes,string)']:writes at the last depth:['9']
contract coverage: 71.88%
============================
iteration:4
['transfer(address,uint256,bytes,string)', 'approve(address,uint256)']:writes at the last depth:['10']
['transfer(address,uint256,bytes,string)', 'finishMinting()']:writes at the last depth:['8']
['transfer(address,uint256,bytes,string)', 'setDistributeAmount(uint256)']:writes at the last depth:['7']
['transfer(address,uint256,bytes,string)', 'transferOwnership(address)']:writes at the last depth:['1']
['transfer(address,uint256,bytes,string)', 'burn(address,uint256)']:writes at the last depth:['6', '9']
['transfer(address,uint256,bytes,string)', 'mint(address,uint256)']:writes at the last depth:['6', '9']
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)']:writes at the last depth:['']
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)']:writes at the last depth:['']
contract coverage: 71.88%
============================
iteration:5
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)', 'approve(address,uint256)']:writes at the last depth:['10']
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)', 'finishMinting()']:writes at the last depth:['8']
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)', 'setDistributeAmount(uint256)']:writes at the last depth:['7']
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)', 'transferOwnership(address)']:writes at the last depth:['1']
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)']:writes at the last depth:['']
contract coverage: 71.88%
============================
iteration:6
contract coverage: 71.88%
============================
iteration:7
contract coverage: 72.28%
============================
iteration:8
['transfer(address,uint256,bytes,string)', 'freezeAccounts(address[],bool)', 'setDistributeAmount(uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
contract coverage: 72.28%
============================
iteration:9
contract coverage: 72.28%
============================
iteration:10
contract coverage: 72.28%
============================
iteration:11
contract coverage: 72.28%
============================
iteration:12
contract coverage: 72.28%
============================
iteration:13
contract coverage: 72.28%
============================
iteration:14
contract coverage: 72.28%
============================
iteration:15
contract coverage: 72.28%
============================
iteration:16
contract coverage: 72.28%
============================
iteration:17
contract coverage: 72.28%
============================
iteration:18
contract coverage: 72.28%
============================
iteration:19
contract coverage: 72.28%
============================
iteration:20
contract coverage: 72.28%
============================
iteration:21
contract coverage: 72.28%
============================
iteration:22
['transfer(address,uint256,bytes)', 'approve(address,uint256)']:writes at the last depth:['10']
['transfer(address,uint256,bytes)', 'finishMinting()']:writes at the last depth:['8']
contract coverage: 72.32%
============================
iteration:23
['transfer(address,uint256,bytes)', 'finishMinting()', 'setDistributeAmount(uint256)']:writes at the last depth:['7']
contract coverage: 72.32%
============================
iteration:24
contract coverage: 72.32%
============================
iteration:25
['transfer(address,uint256,bytes)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['10']
['transfer(address,uint256,bytes)', 'approve(address,uint256)', 'finishMinting()']:writes at the last depth:['8']
['transfer(address,uint256,bytes)', 'approve(address,uint256)', 'setDistributeAmount(uint256)']:writes at the last depth:['7']
contract coverage: 72.32%
============================
iteration:26
contract coverage: 72.32%
============================
iteration:27
contract coverage: 72.32%
============================
iteration:28
['transfer(address,uint256,bytes)', 'approve(address,uint256)', 'approve(address,uint256)', 'approve(address,uint256)']:writes at the last depth:['10']
contract coverage: 72.32%
============================
iteration:29
contract coverage: 72.32%
============================
iteration:30
contract coverage: 72.32%
============================
iteration:31
contract coverage: 72.32%
============================
iteration:32
['transfer(address,uint256,bytes,string)', 'approve(address,uint256)']:writes at the last depth:['10']
['transfer(address,uint256,bytes,string)', 'transferOwnership(address)']:writes at the last depth:['1']
contract coverage: 72.32%
============================
iteration:33
contract coverage: 72.32%
============================
iteration:34
contract coverage: 72.32%
============================
iteration:35
contract coverage: 72.32%
============================
iteration:36
contract coverage: 72.32%
============================
iteration:37
contract coverage: 72.32%
============================
iteration:38
contract coverage: 72.32%
============================
iteration:39
contract coverage: 72.32%
============================
iteration:40
contract coverage: 72.32%
============================
iteration:41
contract coverage: 72.32%
============================
iteration:42
['transfer(address,uint256)', 'transferOwnership(address)']:writes at the last depth:['1']
contract coverage: 72.32%
============================
iteration:43
in sha3_() of instructions.py: get empty keccak hash
contract coverage: 72.32%
============================
iteration:44
['freezeAccounts(address[],bool)', 'approve(address,uint256)']:writes at the last depth:['10']
['freezeAccounts(address[],bool)', 'finishMinting()']:writes at the last depth:['8']
['freezeAccounts(address[],bool)', 'setDistributeAmount(uint256)']:writes at the last depth:['7']
['freezeAccounts(address[],bool)', 'transferOwnership(address)']:writes at the last depth:['1']
['freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)']:writes at the last depth:['']
['freezeAccounts(address[],bool)', 'transfer(address,uint256)']:writes at the last depth:['9']
contract coverage: 72.32%
============================
iteration:45
contract coverage: 72.32%
============================
iteration:46
['freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)', 'approve(address,uint256)']:writes at the last depth:['10']
['freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)', 'finishMinting()']:writes at the last depth:['8']
['freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)', 'transferOwnership(address)']:writes at the last depth:['1']
['freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)', 'mint(address,uint256)']:writes at the last depth:['6', '9']
contract coverage: 72.32%
============================
iteration:47
contract coverage: 72.32%
============================
iteration:48
contract coverage: 72.32%
============================
iteration:49
contract coverage: 72.32%
============================
iteration:50
['freezeAccounts(address[],bool)', 'freezeAccounts(address[],bool)', 'approve(address,uint256)', 'setDistributeAmount(uint256)']:writes at the last depth:['7']
contract coverage: 72.32%
============================
iteration:51
['freezeAccounts(address[],bool)', 'transferOwnership(address)', 'approve(address,uint256)']:writes at the last depth:['10']
contract coverage: 72.32%
============================
iteration:52
contract coverage: 72.32%
============================
iteration:53
contract coverage: 72.32%
============================
iteration:54
contract coverage: 72.32%
============================
iteration:55
contract coverage: 72.32%
============================
iteration:56
contract coverage: 72.32%
============================
iteration:57
contract coverage: 72.32%
============================
iteration:58
contract coverage: 72.32%
============================
iteration:59
contract coverage: 72.32%
============================
iteration:60
contract coverage: 72.32%
============================
iteration:61
contract coverage: 72.32%
============================
iteration:62
contract coverage: 72.32%
#@statespace
3030 nodes, 3029 edges, 44505 total states
#@coverage
Achieved 3.54% coverage for code: 60806040526040805190810160405280602081526020017f43727970746f686172626f722065786368616e6765205665722e322e3230323081525060029080519060200190620000519291906200018c565b506040805190810160405280600381526020017f4348450000000000000000000000000000000000000000000000000000000000815250600390805190602001906200009f9291906200018c565b506008600460006101000a81548160ff021916908360ff1602179055506730927f74c9de000060055560006007556000600860006101000a81548160ff021916908315150217905550348015620000f557600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600554600681905550600654600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200023b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001cf57805160ff191683800117855562000200565b8280016001018555821562000200579182015b82811115620001ff578251825591602001919060010190620001e2565b5b5090506200020f919062000213565b5090565b6200023891905b80821115620002345760008160009055506001016200021a565b5090565b90565b614182806200024b6000396000f30060806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461017457806306fdde03146101a3578063095ea7b31461023357806318160ddd1461029857806323b872dd146102c3578063313ce56714610348578063378dc3dc1461037957806340c10f19146103a45780634f25eced1461040957806364ddc6051461043457806370a08231146104dd5780637d64bcb4146105345780638da5cb5b1461056357806394594625146105ba57806395d89b41146106425780639dc29fac146106d2578063a8f11eb91461071f578063a9059cbb14610729578063b414d4b61461078e578063be45fd62146107e9578063c341b9f614610894578063cbbe974b14610906578063d39b1d481461095d578063dd62ed3e1461098a578063dd92459414610a01578063f0dc417114610ac2578063f2fde38b14610b83578063f6368f8a14610bc6575b610172610cb7565b005b34801561018057600080fd5b5061018961104d565b604051808215151515815260200191505060405180910390f35b3480156101af57600080fd5b506101b8611060565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f85780820151818401526020810190506101dd565b50505050905090810190601f1680156102255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023f57600080fd5b5061027e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611102565b604051808215151515815260200191505060405180910390f35b3480156102a457600080fd5b506102ad6111f4565b6040518082815260200191505060405180910390f35b3480156102cf57600080fd5b5061032e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111fe565b604051808215151515815260200191505060405180910390f35b34801561035457600080fd5b5061035d61170f565b604051808260ff1660ff16815260200191505060405180910390f35b34801561038557600080fd5b5061038e611726565b6040518082815260200191505060405180910390f35b3480156103b057600080fd5b506103ef600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061172c565b604051808215151515815260200191505060405180910390f35b34801561041557600080fd5b5061041e611923565b6040518082815260200191505060405180910390f35b34801561044057600080fd5b506104db6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611929565b005b3480156104e957600080fd5b5061051e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2d565b6040518082815260200191505060405180910390f35b34801561054057600080fd5b50610549611b76565b604051808215151515815260200191505060405180910390f35b34801561056f57600080fd5b50610578611c3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c657600080fd5b506106286004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190929190505050611c64565b604051808215151515815260200191505060405180910390f35b34801561064e57600080fd5b506106576120b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069757808201518184015260208101905061067c565b50505050905090810190601f1680156106c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106de57600080fd5b5061071d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612155565b005b610727610cb7565b005b34801561073557600080fd5b50610774600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061230d565b604051808215151515815260200191505060405180910390f35b34801561079a57600080fd5b506107cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124a1565b604051808215151515815260200191505060405180910390f35b3480156107f557600080fd5b5061087a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506124c1565b604051808215151515815260200191505060405180910390f35b3480156108a057600080fd5b5061090460048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803515159060200190929190505050612652565b005b34801561091257600080fd5b50610947600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127f4565b6040518082815260200191505060405180910390f35b34801561096957600080fd5b506109886004803603810190808035906020019092919050505061280c565b005b34801561099657600080fd5b506109eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612872565b6040518082815260200191505060405180910390f35b348015610a0d57600080fd5b50610aa860048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506128f9565b604051808215151515815260200191505060405180910390f35b348015610ace57600080fd5b50610b696004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050612e00565b604051808215151515815260200191505060405180910390f35b348015610b8f57600080fd5b50610bc4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132d1565b005b348015610bd257600080fd5b50610c9d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613429565b604051808215151515815260200191505060405180910390f35b6000600754118015610d2c575060075460096000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610d88575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015610dd25750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515610ddd57600080fd5b6000341115610e5057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610e4e573d6000803e3d6000fd5b505b610ec660075460096000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b60096000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f7f600754600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6007546040518082815260200191505060405180910390a3565b600860009054906101000a900460ff1681565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b5050505050905090565b600081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561123c5750600082115b8015611287575081600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b801561130f575081600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b801561136b575060001515600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156113c7575060001515600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156114115750600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b801561145b5750600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561146657600080fd5b6114b882600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061154d82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061161f82600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600460009054906101000a900460ff16905090565b60055481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178a57600080fd5b600860009054906101000a900460ff161515156117a657600080fd5b6000821115156117b557600080fd5b6117ca82600654613a5990919063ffffffff16565b60068190555061182282600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561198757600080fd5b60008351118015611999575081518351145b15156119a457600080fd5b600090505b8251811015611b285781818151811015156119c057fe5b90602001906020020151600c600085848151811015156119dc57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515611a2d57600080fd5b8181815181101515611a3b57fe5b90602001906020020151600c60008584815181101515611a5757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508281815181101515611aad57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167f1bd6fb9fa2c39ce5d0d2afa1eaba998963eb5f553fd862c94f131aa9e35c15778383815181101515611afc57fe5b906020019060200201516040518082815260200191505060405180910390a280806001019150506119a9565b505050565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bd457600080fd5b600860009054906101000a900460ff16151515611bf057600080fd5b6001600860006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008084118015611c79575060008551115b8015611cd5575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015611d1f5750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515611d2a57600080fd5b611d416305f5e10085613a7790919063ffffffff16565b9350611d57855185613a7790919063ffffffff16565b915081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611da757600080fd5b600090505b84518110156120125760008582815181101515611dc557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614158015611e5a575060001515600b60008784815181101515611e0457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015611ebb5750600c60008683815181101515611e7357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515611ec657600080fd5b611f2f84600960008885815181101515611edc57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008784815181101515611f4157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508481815181101515611f9757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a38080600101915050611dac565b61206482600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019250505092915050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561214b5780601f106121205761010080835404028352916020019161214b565b820191906000526020600020905b81548152906001019060200180831161212e57829003601f168201915b5050505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121b157600080fd5b600081118015612200575080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b151561220b57600080fd5b61225d81600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122b581600654613a4090919063ffffffff16565b6006819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a25050565b60006060600083118015612371575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156123cd575060001515600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156124175750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b80156124615750600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561246c57600080fd5b61247584613ab2565b1561248c57612485848483613ac5565b915061249a565b612497848483613ea4565b91505b5092915050565b600b6020528060005260406000206000915054906101000a900460ff1681565b60008083118015612522575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b801561257e575060001515600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156125c85750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b80156126125750600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561261d57600080fd5b61262684613ab2565b1561263d57612636848484613ac5565b905061264b565b612648848484613ea4565b90505b9392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156126b057600080fd5b600083511115156126c057600080fd5b600090505b82518110156127ef57600083828151811015156126de57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415151561270b57600080fd5b81600b6000858481518110151561271e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110151561278757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a583604051808215151515815260200191505060405180910390a280806001019150506126c5565b505050565b600c6020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561286857600080fd5b8060078190555050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600080855111801561290f575083518551145b801561296b575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156129b55750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b15156129c057600080fd5b60009150600090505b8451811015612b8957600084828151811015156129e257fe5b90602001906020020151118015612a27575060008582815181101515612a0457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b8015612a9a575060001515600b60008784815181101515612a4457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015612afb5750600c60008683815181101515612ab357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515612b0657600080fd5b612b346305f5e1008583815181101515612b1c57fe5b90602001906020020151613a7790919063ffffffff16565b8482815181101515612b4257fe5b9060200190602002018181525050612b7a8482815181101515612b6157fe5b9060200190602002015183613a5990919063ffffffff16565b915080806001019150506129c9565b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515612bd757600080fd5b600090505b8451811015612d5f57612c658482815181101515612bf657fe5b90602001906020020151600960008885815181101515612c1257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008784815181101515612c7757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508481815181101515612ccd57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8684815181101515612d3357fe5b906020019060200201516040518082815260200191505060405180910390a38080600101915050612bdc565b612db182600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019250505092915050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e6157600080fd5b60008551118015612e73575083518551145b1515612e7e57600080fd5b60009150600090505b84518110156132305760008482815181101515612ea057fe5b90602001906020020151118015612ee5575060008582815181101515612ec257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b8015612f58575060001515600b60008784815181101515612f0257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015612fb95750600c60008683815181101515612f7157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515612fc457600080fd5b612ff26305f5e1008583815181101515612fda57fe5b90602001906020020151613a7790919063ffffffff16565b848281518110151561300057fe5b9060200190602002018181525050838181518110151561301c57fe5b9060200190602002015160096000878481518110151561303857fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561308a57600080fd5b61310a848281518110151561309b57fe5b906020019060200201516009600088858151811015156130b757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b60096000878481518110151561311c57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061318e848281518110151561317557fe5b9060200190602002015183613a5990919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff1685828151811015156131b557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef868481518110151561320457fe5b906020019060200201516040518082815260200191505060405180910390a38080600101915050612e87565b61328282600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561332d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561336957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808411801561348a575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156134e6575060001515600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156135305750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b801561357a5750600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561358557600080fd5b61358e85613ab2565b15613a2a5783600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156135e157600080fd5b61363384600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506136c884600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff166000836040516020018082805190602001908083835b60208310151561375d5780518252602082019150602081019050602083039250613738565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156137c657805182526020820191506020810190506020830392506137a1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207c01000000000000000000000000000000000000000000000000000000009004903387876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828051906020019080838360005b838110156138a757808201518184015260208101905061388c565b50505050905090810190601f1680156138d45780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af1935050505015156138f457fe5b826040518082805190602001908083835b60208310151561392a5780518252602082019150602081019050602083039250613905565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16876040518082815260200191505060405180910390a48473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a360019050613a38565b613a35858585613ea4565b90505b949350505050565b6000828211151515613a4e57fe5b818303905092915050565b6000808284019050838110151515613a6d57fe5b8091505092915050565b6000806000841415613a8c5760009150613aab565b8284029050828482811515613a9d57fe5b04141515613aa757fe5b8091505b5092915050565b600080823b905060008111915050919050565b60008083600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515613b1657600080fd5b613b6884600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613bfd84600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508490508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3386866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613d05578082015181840152602081019050613cea565b50505050905090810190601f168015613d325780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015613d5357600080fd5b505af1158015613d67573d6000803e3d6000fd5b50505050826040518082805190602001908083835b602083101515613da15780518252602082019150602081019050602083039250613d7c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16876040518082815260200191505060405180910390a48473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a360019150509392505050565b600082600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515613ef457600080fd5b613f4683600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613fdb83600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816040518082805190602001908083835b602083101515614054578051825260208201915060208101905060208303925061402f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16866040518082815260200191505060405180910390a48373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36001905093925050505600a165627a7a723058207b5b7948f279840b257783c2d6760ba4c1dbbe4fda7db4410a4ba031235c2ebd0029
#@coverage
Achieved 72.32% coverage for code: 60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b1461017457806306fdde03146101a3578063095ea7b31461023357806318160ddd1461029857806323b872dd146102c3578063313ce56714610348578063378dc3dc1461037957806340c10f19146103a45780634f25eced1461040957806364ddc6051461043457806370a08231146104dd5780637d64bcb4146105345780638da5cb5b1461056357806394594625146105ba57806395d89b41146106425780639dc29fac146106d2578063a8f11eb91461071f578063a9059cbb14610729578063b414d4b61461078e578063be45fd62146107e9578063c341b9f614610894578063cbbe974b14610906578063d39b1d481461095d578063dd62ed3e1461098a578063dd92459414610a01578063f0dc417114610ac2578063f2fde38b14610b83578063f6368f8a14610bc6575b610172610cb7565b005b34801561018057600080fd5b5061018961104d565b604051808215151515815260200191505060405180910390f35b3480156101af57600080fd5b506101b8611060565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f85780820151818401526020810190506101dd565b50505050905090810190601f1680156102255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023f57600080fd5b5061027e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611102565b604051808215151515815260200191505060405180910390f35b3480156102a457600080fd5b506102ad6111f4565b6040518082815260200191505060405180910390f35b3480156102cf57600080fd5b5061032e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111fe565b604051808215151515815260200191505060405180910390f35b34801561035457600080fd5b5061035d61170f565b604051808260ff1660ff16815260200191505060405180910390f35b34801561038557600080fd5b5061038e611726565b6040518082815260200191505060405180910390f35b3480156103b057600080fd5b506103ef600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061172c565b604051808215151515815260200191505060405180910390f35b34801561041557600080fd5b5061041e611923565b6040518082815260200191505060405180910390f35b34801561044057600080fd5b506104db6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611929565b005b3480156104e957600080fd5b5061051e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2d565b6040518082815260200191505060405180910390f35b34801561054057600080fd5b50610549611b76565b604051808215151515815260200191505060405180910390f35b34801561056f57600080fd5b50610578611c3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c657600080fd5b506106286004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190929190505050611c64565b604051808215151515815260200191505060405180910390f35b34801561064e57600080fd5b506106576120b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069757808201518184015260208101905061067c565b50505050905090810190601f1680156106c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106de57600080fd5b5061071d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612155565b005b610727610cb7565b005b34801561073557600080fd5b50610774600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061230d565b604051808215151515815260200191505060405180910390f35b34801561079a57600080fd5b506107cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124a1565b604051808215151515815260200191505060405180910390f35b3480156107f557600080fd5b5061087a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506124c1565b604051808215151515815260200191505060405180910390f35b3480156108a057600080fd5b5061090460048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803515159060200190929190505050612652565b005b34801561091257600080fd5b50610947600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127f4565b6040518082815260200191505060405180910390f35b34801561096957600080fd5b506109886004803603810190808035906020019092919050505061280c565b005b34801561099657600080fd5b506109eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612872565b6040518082815260200191505060405180910390f35b348015610a0d57600080fd5b50610aa860048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506128f9565b604051808215151515815260200191505060405180910390f35b348015610ace57600080fd5b50610b696004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050612e00565b604051808215151515815260200191505060405180910390f35b348015610b8f57600080fd5b50610bc4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506132d1565b005b348015610bd257600080fd5b50610c9d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613429565b604051808215151515815260200191505060405180910390f35b6000600754118015610d2c575060075460096000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610d88575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015610dd25750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515610ddd57600080fd5b6000341115610e5057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610e4e573d6000803e3d6000fd5b505b610ec660075460096000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b60096000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f7f600754600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6007546040518082815260200191505060405180910390a3565b600860009054906101000a900460ff1681565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b5050505050905090565b600081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561123c5750600082115b8015611287575081600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b801561130f575081600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b801561136b575060001515600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156113c7575060001515600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156114115750600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b801561145b5750600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561146657600080fd5b6114b882600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061154d82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061161f82600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600460009054906101000a900460ff16905090565b60055481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178a57600080fd5b600860009054906101000a900460ff161515156117a657600080fd5b6000821115156117b557600080fd5b6117ca82600654613a5990919063ffffffff16565b60068190555061182282600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561198757600080fd5b60008351118015611999575081518351145b15156119a457600080fd5b600090505b8251811015611b285781818151811015156119c057fe5b90602001906020020151600c600085848151811015156119dc57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515611a2d57600080fd5b8181815181101515611a3b57fe5b90602001906020020151600c60008584815181101515611a5757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508281815181101515611aad57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167f1bd6fb9fa2c39ce5d0d2afa1eaba998963eb5f553fd862c94f131aa9e35c15778383815181101515611afc57fe5b906020019060200201516040518082815260200191505060405180910390a280806001019150506119a9565b505050565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bd457600080fd5b600860009054906101000a900460ff16151515611bf057600080fd5b6001600860006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008084118015611c79575060008551115b8015611cd5575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015611d1f5750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515611d2a57600080fd5b611d416305f5e10085613a7790919063ffffffff16565b9350611d57855185613a7790919063ffffffff16565b915081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611da757600080fd5b600090505b84518110156120125760008582815181101515611dc557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614158015611e5a575060001515600b60008784815181101515611e0457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015611ebb5750600c60008683815181101515611e7357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515611ec657600080fd5b611f2f84600960008885815181101515611edc57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008784815181101515611f4157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508481815181101515611f9757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a38080600101915050611dac565b61206482600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019250505092915050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561214b5780601f106121205761010080835404028352916020019161214b565b820191906000526020600020905b81548152906001019060200180831161212e57829003601f168201915b5050505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121b157600080fd5b600081118015612200575080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b151561220b57600080fd5b61225d81600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122b581600654613a4090919063ffffffff16565b6006819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a25050565b60006060600083118015612371575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156123cd575060001515600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156124175750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b80156124615750600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561246c57600080fd5b61247584613ab2565b1561248c57612485848483613ac5565b915061249a565b612497848483613ea4565b91505b5092915050565b600b6020528060005260406000206000915054906101000a900460ff1681565b60008083118015612522575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b801561257e575060001515600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156125c85750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b80156126125750600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561261d57600080fd5b61262684613ab2565b1561263d57612636848484613ac5565b905061264b565b612648848484613ea4565b90505b9392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156126b057600080fd5b600083511115156126c057600080fd5b600090505b82518110156127ef57600083828151811015156126de57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415151561270b57600080fd5b81600b6000858481518110151561271e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110151561278757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167f48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a583604051808215151515815260200191505060405180910390a280806001019150506126c5565b505050565b600c6020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561286857600080fd5b8060078190555050565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600080855111801561290f575083518551145b801561296b575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156129b55750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b15156129c057600080fd5b60009150600090505b8451811015612b8957600084828151811015156129e257fe5b90602001906020020151118015612a27575060008582815181101515612a0457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b8015612a9a575060001515600b60008784815181101515612a4457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015612afb5750600c60008683815181101515612ab357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515612b0657600080fd5b612b346305f5e1008583815181101515612b1c57fe5b90602001906020020151613a7790919063ffffffff16565b8482815181101515612b4257fe5b9060200190602002018181525050612b7a8482815181101515612b6157fe5b9060200190602002015183613a5990919063ffffffff16565b915080806001019150506129c9565b81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515612bd757600080fd5b600090505b8451811015612d5f57612c658482815181101515612bf657fe5b90602001906020020151600960008885815181101515612c1257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008784815181101515612c7757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508481815181101515612ccd57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8684815181101515612d3357fe5b906020019060200201516040518082815260200191505060405180910390a38080600101915050612bdc565b612db182600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019250505092915050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e6157600080fd5b60008551118015612e73575083518551145b1515612e7e57600080fd5b60009150600090505b84518110156132305760008482815181101515612ea057fe5b90602001906020020151118015612ee5575060008582815181101515612ec257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b8015612f58575060001515600b60008784815181101515612f0257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b8015612fb95750600c60008683815181101515612f7157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b1515612fc457600080fd5b612ff26305f5e1008583815181101515612fda57fe5b90602001906020020151613a7790919063ffffffff16565b848281518110151561300057fe5b9060200190602002018181525050838181518110151561301c57fe5b9060200190602002015160096000878481518110151561303857fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561308a57600080fd5b61310a848281518110151561309b57fe5b906020019060200201516009600088858151811015156130b757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b60096000878481518110151561311c57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061318e848281518110151561317557fe5b9060200190602002015183613a5990919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff1685828151811015156131b557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef868481518110151561320457fe5b906020019060200201516040518082815260200191505060405180910390a38080600101915050612e87565b61328282600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561332d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561336957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808411801561348a575060001515600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156134e6575060001515600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80156135305750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b801561357a5750600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442115b151561358557600080fd5b61358e85613ab2565b15613a2a5783600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156135e157600080fd5b61363384600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506136c884600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff166000836040516020018082805190602001908083835b60208310151561375d5780518252602082019150602081019050602083039250613738565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156137c657805182526020820191506020810190506020830392506137a1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207c01000000000000000000000000000000000000000000000000000000009004903387876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828051906020019080838360005b838110156138a757808201518184015260208101905061388c565b50505050905090810190601f1680156138d45780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af1935050505015156138f457fe5b826040518082805190602001908083835b60208310151561392a5780518252602082019150602081019050602083039250613905565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16876040518082815260200191505060405180910390a48473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a360019050613a38565b613a35858585613ea4565b90505b949350505050565b6000828211151515613a4e57fe5b818303905092915050565b6000808284019050838110151515613a6d57fe5b8091505092915050565b6000806000841415613a8c5760009150613aab565b8284029050828482811515613a9d57fe5b04141515613aa757fe5b8091505b5092915050565b600080823b905060008111915050919050565b60008083600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515613b1657600080fd5b613b6884600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613bfd84600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508490508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3386866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613d05578082015181840152602081019050613cea565b50505050905090810190601f168015613d325780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015613d5357600080fd5b505af1158015613d67573d6000803e3d6000fd5b50505050826040518082805190602001908083835b602083101515613da15780518252602082019150602081019050602083039250613d7c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16876040518082815260200191505060405180910390a48473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a360019150509392505050565b600082600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515613ef457600080fd5b613f4683600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a4090919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613fdb83600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613a5990919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816040518082805190602001908083835b602083101515614054578051825260208201915060208101905060208303925061402f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16866040518082815260200191505060405180910390a48373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a36001905093925050505600a165627a7a723058207b5b7948f279840b257783c2d6760ba4c1dbbe4fda7db4410a4ba031235c2ebd0029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: CHE
Function name: freezeAccounts(address[],bool)
PC address: 2236
Estimated Gas Usage: 16676 - 63290
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:179

function freezeAccounts(address[] targets, bool isFrozen) onlyOwner public {
        require(targets.length > 0);

        for (uint j = 0; j < targets.length; j++) {
            require(targets[j] != 0x0);
            frozenAccount[targets[j]] = isFrozen;
            emit FrozenFunds(targets[j], isFrozen);
        }
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: freezeAccounts(address[],bool), txdata: 0xc341b9f6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: CHE
Function name: name()
PC address: 4262
Estimated Gas Usage: 3222 - 4540
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:158

return name

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: distributeAirdrop(address[],uint256)
PC address: 7461
Estimated Gas Usage: 2624 - 6109
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:361

require(amount > 0 
                && addresses.length > 0
                && frozenAccount[msg.sender] == false
                && block.timestamp > unlockUnixTime[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: distributeAirdrop(address[],uint256), txdata: 0x945946258000000003e401002bc1b104e44450180413fa750681005907f25c864b44082401, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: transfer(address,uint256)
PC address: 9245
Estimated Gas Usage: 3467 - 4792
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:239

_value > 0
                && frozenAccount[msg.sender] == false 
                && frozenAccount[_to] == false
                && block.timestamp > unlockUnixTime[msg.sender] 
                && block.timestamp > unlockUnixTime[_to]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe01, decoded_data: ('0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe', 452312848583266388373324160190187140051835877600158453279131187530910662656), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: transfer(address,uint256)
PC address: 9319
Estimated Gas Usage: 3487 - 4812
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:239

require(_value > 0
                && frozenAccount[msg.sender] == false 
                && frozenAccount[_to] == false
                && block.timestamp > unlockUnixTime[msg.sender] 
                && block.timestamp > unlockUnixTime[_to])

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb000000000000000000000000000000000000000000000000000000000000000001, decoded_data: ('0x0000000000000000000000000000000000000000', 452312848583266388373324160190187140051835877600158453279131187530910662656), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: transfer(address,uint256,bytes)
PC address: 9678
Estimated Gas Usage: 3727 - 7639
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:224

_value > 0
                && frozenAccount[msg.sender] == false 
                && frozenAccount[_to] == false
                && block.timestamp > unlockUnixTime[msg.sender] 
                && block.timestamp > unlockUnixTime[_to]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256,bytes), txdata: 0xbe45fd62200000000000000000000001000000000000000000000000000000000000000d01, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: transfer(address,uint256,bytes)
PC address: 9752
Estimated Gas Usage: 3747 - 7659
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:224

require(_value > 0
                && frozenAccount[msg.sender] == false 
                && frozenAccount[_to] == false
                && block.timestamp > unlockUnixTime[msg.sender] 
                && block.timestamp > unlockUnixTime[_to])

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256,bytes), txdata: 0xbe45fd62400c8a8c04040280040422850eff03bfffffffffffffffffffffffffffffffe301, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: distributeAirdrop(address[],uint256[])
PC address: 10683
Estimated Gas Usage: 3019 - 9277
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:383

require(addresses.length > 0
                && addresses.length == amounts.length
                && frozenAccount[msg.sender] == false
                && block.timestamp > unlockUnixTime[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: distributeAirdrop(address[],uint256[]), txdata: 0xdd924594ff, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: transfer(address,uint256,bytes,string)
PC address: 13622
Estimated Gas Usage: 4086 - 10585
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:204

_value > 0
                && frozenAccount[msg.sender] == false 
                && frozenAccount[_to] == false
                && block.timestamp > unlockUnixTime[msg.sender] 
                && block.timestamp > unlockUnixTime[_to]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256,bytes,string), txdata: 0xf6368f8a520400000000000000000001000000000000000000000000000000000000001f01, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CHE
Function name: transfer(address,uint256,bytes,string)
PC address: 13696
Estimated Gas Usage: 4106 - 10605
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:204

require(_value > 0
                && frozenAccount[msg.sender] == false 
                && frozenAccount[_to] == false
                && block.timestamp > unlockUnixTime[msg.sender] 
                && block.timestamp > unlockUnixTime[_to])

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256,bytes,string), txdata: 0xf6368f8aecb816668e590040000100000800801000040000000008008000001fe008842d01, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: CHE
Function name: mint(address,uint256)
PC address: 14956
Estimated Gas Usage: 3024 - 3779
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:343

totalSupply.add(_unitAmount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: mint(address,uint256), txdata: 0x40c10f190000000000000000000000000000000000000000000000000000008000004080ffffffffffffffffffffffffffffffffffffffffffffffffd1, decoded_data: ('0x0000000000000000000000000000008000004080', 115792089237316195423570985008687907853269984665640564039454197300993347026944), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: CHE
Function name: distributeAirdrop(address[],uint256)
PC address: 15014
Estimated Gas Usage: 2778 - 6263
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:366

amount.mul(1e8)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: distributeAirdrop(address[],uint256), txdata: 0x94594625802081040020200148000908000000008118ae004118a471000000000000001d81, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CHE
Function name: transfer(address,uint256)
PC address: 15702
Estimated Gas Usage: 23987 - 103544
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:279

receiver.tokenFallback(msg.sender, _value, _data)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transfer(address,uint256), txdata: 0xa9059cbb000000ffffffffffffffffffdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000008, value: 0x0


time_used: 36029.27968096733 seconds
#@contract_info_time
0x376435eef01eb51730f2f4e8f9c425b6912fa575.sol:0.4.23:CHE:36029.27968096733:36100:60:36000
