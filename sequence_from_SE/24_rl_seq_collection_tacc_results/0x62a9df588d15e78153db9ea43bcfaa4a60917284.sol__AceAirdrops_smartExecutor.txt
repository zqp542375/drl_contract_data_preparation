++++ 0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol  :  0.4.19  :  AceAirdrops ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 5264
['constructor']:writes at the last depth:['0', '5', '6', '7', '8', '9']
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 72.85% coverage.
dynamic svars:['2', '3', '1', '4']
static svars:['7', '5', '6', '8', '0', '9']
Ending preprocessing.
preprocessing time(s): 102.3082218170166
contract coverage: 80.60%
getRemainingTrialDrops(address) is not reachable
Function Reads: State variables read in conditions
	maxDropsPerTx():[]
	setBonus(uint256):['0', '7']
	banToken(address):['0', '3']
	tokenHasFreeTrial(address):[]
	grantBonusDrops(address,uint256):['0']
	rate():[]
	setRate(uint256):['0', '5']
	getMaxDropsPerTx():[]
	tokenIsBanned(address):[]
	getTotalDropsOf(address):['2']
	issueRefunds(address[]):['0']
	trialDrops(address):[]
	getRate():[]
	getDropsOf(address):['2']
	multiValueAirdrop(address,address[],uint256[]):[]
	ethBalanceOf(address):[]
	bonus():[]
	owner():[]
	bonusDropsOf(address):[]
	singleValueAirdrop(address,address[],uint256):['3', '4']
	getBonusDropsOf(address):[]
	dropUnitPrice():[]
	getRemainingTrialDrops(address):['4']
	getEthBalanceOf(address):[]
	withdrawERC20Tokens(address,address,uint256):['0']
	maxTrialDrops():[]
	withdrawEth(uint256):['2']
	revokeBonusCreditOf(address,uint256):['0', '1']
	getTokenAllowance(address,address):[]
	setMaxDrops(uint256):['0']
	transferOwnership(address):['0']
	unbanToken(address):['0', '3']
Function Writes: State variables written
	fallback:['2']
	setBonus(uint256):['7']
	setRate(uint256):['5', '6']
	banToken(address):['3']
	grantBonusDrops(address,uint256):['1']
	setMaxDrops(uint256):['8']
	transferOwnership(address):['0']
	withdrawEth(uint256):['2']
============================
iteration:3
targets:['withdrawEth(uint256)', 'unbanToken(address)', 'issueRefunds(address[])', 'getRemainingTrialDrops(address)']
['setBonus(uint256)']:writes at the last depth:['7']
['fallback']:writes at the last depth:['2']
['fallback']:writes at the last depth:['2']
['banToken(address)']:writes at the last depth:['3']
['setRate(uint256)']:writes at the last depth:['5', '6']
['grantBonusDrops(address,uint256)']:writes at the last depth:['1']
['setMaxDrops(uint256)']:writes at the last depth:['8']
['transferOwnership(address)']:writes at the last depth:['0']
['getTokenAllowance(address,address)']:writes at the last depth:[]
['fallback']:writes at the last depth:['2']
['fallback']:writes at the last depth:['2']
['revokeBonusCreditOf(address,uint256)']:writes at the last depth:['1']
['withdrawERC20Tokens(address,address,uint256)']:writes at the last depth:[]
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['singleValueAirdrop(address,address[],uint256)']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
['multiValueAirdrop(address,address[],uint256[])']:writes at the last depth:['4']
contract coverage: 80.60%
============================
iteration:4
contract coverage: 80.60%
============================
iteration:5
contract coverage: 80.60%
============================
iteration:6
contract coverage: 80.60%
============================
iteration:7
contract coverage: 80.60%
============================
iteration:8
contract coverage: 80.60%
============================
iteration:9
contract coverage: 80.60%
============================
iteration:10
contract coverage: 80.60%
============================
iteration:11
contract coverage: 80.60%
============================
iteration:12
contract coverage: 80.60%
============================
iteration:13
contract coverage: 80.60%
============================
iteration:14
contract coverage: 80.60%
============================
iteration:15
contract coverage: 80.60%
============================
iteration:16
contract coverage: 80.60%
============================
iteration:17
contract coverage: 80.60%
============================
iteration:18
contract coverage: 80.60%
============================
iteration:19
contract coverage: 80.60%
============================
iteration:20
contract coverage: 80.60%
============================
iteration:21
contract coverage: 80.60%
============================
iteration:22
contract coverage: 80.60%
============================
iteration:23
contract coverage: 80.60%
============================
iteration:24
contract coverage: 80.60%
============================
iteration:25
contract coverage: 80.60%
============================
iteration:26
contract coverage: 80.60%
============================
iteration:27
contract coverage: 80.60%
============================
iteration:28
contract coverage: 80.60%
============================
iteration:29
contract coverage: 80.60%
============================
iteration:30
contract coverage: 80.60%
============================
iteration:31
contract coverage: 80.60%
============================
iteration:32
contract coverage: 80.60%
============================
iteration:33
contract coverage: 80.60%
============================
iteration:34
contract coverage: 80.60%
============================
iteration:35
contract coverage: 80.60%
============================
iteration:36
contract coverage: 80.60%
============================
iteration:37
contract coverage: 80.60%
============================
iteration:38
contract coverage: 80.60%
============================
iteration:39
contract coverage: 80.60%
============================
iteration:40
contract coverage: 80.60%
============================
iteration:41
contract coverage: 80.60%
============================
iteration:42
contract coverage: 80.60%
============================
iteration:43
contract coverage: 80.60%
============================
iteration:44
contract coverage: 80.60%
============================
iteration:45
contract coverage: 80.60%
============================
iteration:46
contract coverage: 80.60%
============================
iteration:47
contract coverage: 80.60%
============================
iteration:48
contract coverage: 80.60%
============================
iteration:49
contract coverage: 80.60%
============================
iteration:50
contract coverage: 80.60%
============================
iteration:51
contract coverage: 80.60%
============================
iteration:52
contract coverage: 80.60%
============================
iteration:53
contract coverage: 80.60%
============================
iteration:54
contract coverage: 80.60%
============================
iteration:55
contract coverage: 80.60%
============================
iteration:56
contract coverage: 80.60%
============================
iteration:57
contract coverage: 80.60%
============================
iteration:58
contract coverage: 80.60%
============================
iteration:59
contract coverage: 80.60%
============================
iteration:60
contract coverage: 80.60%
============================
iteration:61
contract coverage: 80.60%
============================
iteration:62
contract coverage: 80.60%
============================
iteration:63
contract coverage: 80.60%
============================
iteration:64
contract coverage: 80.60%
============================
iteration:65
contract coverage: 80.60%
============================
iteration:66
contract coverage: 80.60%
============================
iteration:67
contract coverage: 80.60%
============================
iteration:68
contract coverage: 80.60%
============================
iteration:69
contract coverage: 80.60%
============================
iteration:70
contract coverage: 80.60%
============================
iteration:71
contract coverage: 80.60%
============================
iteration:72
contract coverage: 80.60%
============================
iteration:73
contract coverage: 80.60%
============================
iteration:74
contract coverage: 80.60%
============================
iteration:75
contract coverage: 80.60%
============================
iteration:76
contract coverage: 80.60%
============================
iteration:77
contract coverage: 80.60%
============================
iteration:78
contract coverage: 80.60%
============================
iteration:79
contract coverage: 80.60%
============================
iteration:80
contract coverage: 80.60%
============================
iteration:81
contract coverage: 80.60%
============================
iteration:82
contract coverage: 80.60%
============================
iteration:83
contract coverage: 80.60%
============================
iteration:84
contract coverage: 80.60%
============================
iteration:85
contract coverage: 80.60%
============================
iteration:86
contract coverage: 80.60%
============================
iteration:87
contract coverage: 80.60%
============================
iteration:88
contract coverage: 80.60%
============================
iteration:89
contract coverage: 80.60%
============================
iteration:90
contract coverage: 80.60%
============================
iteration:91
contract coverage: 80.60%
============================
iteration:92
contract coverage: 80.60%
============================
iteration:93
contract coverage: 80.60%
============================
iteration:94
contract coverage: 80.60%
============================
iteration:95
contract coverage: 80.60%
============================
iteration:96
contract coverage: 80.60%
============================
iteration:97
contract coverage: 80.60%
============================
iteration:98
contract coverage: 80.60%
============================
iteration:99
contract coverage: 80.60%
============================
iteration:100
contract coverage: 80.60%
============================
iteration:101
contract coverage: 80.60%
============================
iteration:102
contract coverage: 80.60%
============================
iteration:103
contract coverage: 80.60%
============================
iteration:104
contract coverage: 80.60%
============================
iteration:105
contract coverage: 80.60%
============================
iteration:106
contract coverage: 80.60%
============================
iteration:107
contract coverage: 80.60%
============================
iteration:108
contract coverage: 80.60%
============================
iteration:109
contract coverage: 80.60%
============================
iteration:110
contract coverage: 80.60%
#@statespace
8315 nodes, 8314 edges, 112479 total states
#@coverage
Achieved 1.29% coverage for code: 6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612710600581905550655af3107a400060068190555060146007819055506064600881905550620186a0600981905550612c7b8061008e6000396000f300606060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303a19a4f146102975780630b98f975146102c057806318fe1a8d146102fb57806323a0fb021461034c5780632a501a431461039d5780632c4e722e146103f757806334fcf437146104205780633f92edaf1461045b5780634db67caf146104845780634f95e960146104d5578063528976de14610522578063656b6b6b14610594578063679aefce146105e157806371f124c51461060a578063724ef94c146106575780637252bbf21461072857806375b4d78c146107755780638da5cb5b1461079e5780638eb5f58e146107f35780639d06583814610840578063a3792985146108da578063a39a2b7614610927578063adc7612614610950578063b28fc9731461099d578063bcdd1e13146109ea578063c13e285d14610a63578063c311d04914610a8c578063c44412e314610ac7578063ea7ee01014610b21578063eb1cfa8214610b8d578063f2fde38b14610bc8578063f332a24514610c01575b6101e834600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fc4174c525ef524021f6e3727a9bbe7fa797780670e51c9cd76ceb8e5dfe6c97b3461027960055434610c7090919063ffffffff16565b604051808381526020018281526020019250505060405180910390a2005b34156102a257600080fd5b6102aa610ca8565b6040518082815260200191505060405180910390f35b34156102cb57600080fd5b6102e16004808035906020019091905050610cae565b604051808215151515815260200191505060405180910390f35b341561030657600080fd5b610332600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d69565b604051808215151515815260200191505060405180910390f35b341561035757600080fd5b610383600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ec3565b604051808215151515815260200191505060405180910390f35b34156103a857600080fd5b6103dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f10565b604051808215151515815260200191505060405180910390f35b341561040257600080fd5b61040a6110a2565b6040518082815260200191505060405180910390f35b341561042b57600080fd5b61044160048080359060200190919050506110a8565b604051808215151515815260200191505060405180910390f35b341561046657600080fd5b61046e61119b565b6040518082815260200191505060405180910390f35b341561048f57600080fd5b6104bb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a5565b604051808215151515815260200191505060405180910390f35b34156104e057600080fd5b61050c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111c5565b6040518082815260200191505060405180910390f35b341561052d57600080fd5b61057a6004808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506111f1565b604051808215151515815260200191505060405180910390f35b341561059f57600080fd5b6105cb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114a6565b6040518082815260200191505060405180910390f35b34156105ec57600080fd5b6105f46114be565b6040518082815260200191505060405180910390f35b341561061557600080fd5b610641600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114c8565b6040518082815260200191505060405180910390f35b341561066257600080fd5b61070e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190505061153f565b604051808215151515815260200191505060405180910390f35b341561073357600080fd5b61075f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611895565b6040518082815260200191505060405180910390f35b341561078057600080fd5b6107886118ad565b6040518082815260200191505060405180910390f35b34156107a957600080fd5b6107b16118b3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107fe57600080fd5b61082a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118d8565b6040518082815260200191505060405180910390f35b341561084b57600080fd5b6108c0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190919050506118f0565b604051808215151515815260200191505060405180910390f35b34156108e557600080fd5b610911600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611bff565b6040518082815260200191505060405180910390f35b341561093257600080fd5b61093a611c48565b6040518082815260200191505060405180910390f35b341561095b57600080fd5b610987600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c4e565b6040518082815260200191505060405180910390f35b34156109a857600080fd5b6109d4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cc3565b6040518082815260200191505060405180910390f35b34156109f557600080fd5b610a49600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611d0c565b604051808215151515815260200191505060405180910390f35b3415610a6e57600080fd5b610a76611f5f565b6040518082815260200191505060405180910390f35b3415610a9757600080fd5b610aad6004808035906020019091905050611f65565b604051808215151515815260200191505060405180910390f35b3415610ad257600080fd5b610b07600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506120ee565b604051808215151515815260200191505060405180910390f35b3415610b2c57600080fd5b610b77600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506122bf565b6040518082815260200191505060405180910390f35b3415610b9857600080fd5b610bae60048080359060200190919050506123c0565b604051808215151515815260200191505060405180910390f35b3415610bd357600080fd5b610bff600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061247e565b005b3415610c0c57600080fd5b610c38600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061262c565b604051808215151515815260200191505060405180910390f35b6000808284019050838110151515610c6657fe5b8091505092915050565b600080831415610c835760009050610ca2565b8183029050818382811515610c9457fe5b04141515610c9e57fe5b8090505b92915050565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d0b57600080fd5b8160075414151515610d1c57600080fd5b7fc233b8877183b2d7aeb5d3baf2b545240e5c94d7a1f5ed6938ff87a1cf95a2d160075483604051808381526020018281526020019250505060405180910390a181600781905550919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dc657600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610e1f57600080fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5f9fbe3bc9355d7eb80002cf096327839eecbdf5ffc15955fbe7609433b18c5560405160405180910390a260019050919050565b6000600954600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054109050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f6d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610faa5750600082115b1515610fb557600080fd5b61100782600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f17641426a9871fbd505cf22302be09d58b40768a741ae1b9a270bdb46ff72cf6836040518082815260200191505060405180910390a26001905092915050565b60055481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561110657600080fd5b60055483141580156111185750600083115b151561112357600080fd5b7f4ac9052a820bf4f8c02d7588587cae835573b5b99ea7ad4ca002f17f319f718660055484604051808381526020018281526020019250505060405180910390a182600581905550670de0b6b3a7640000905061118b6005548261278590919063ffffffff16565b6006819055506001915050919050565b6000600854905090565b60036020528060005260406000206000915054906101000a900460ff1681565b60006111ea6111d383611bff565b6111dc846114c8565b610c5290919063ffffffff16565b9050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561125157600080fd5b60085484511115151561126357600080fd5b600091505b835182101561149f57600073ffffffffffffffffffffffffffffffffffffffff16848381518110151561129757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415801561131b575060006002600086858151811015156112d457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156114925760026000858481518110151561133257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060026000868581518110151561138d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083828151811015156113e357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561142c57600080fd5b838281518110151561143a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76826040518082815260200191505060405180910390a25b8180600101925050611268565b5050919050565b60046020528060005260406000206000915090505481565b6000600554905090565b6000611538670de0b6b3a764000061152a600554600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7090919063ffffffff16565b61278590919063ffffffff16565b9050919050565b600080600085915060085485511115801561155b575083518551145b80156115805750845161156d336111c5565b10158061157f575061157e86610ec3565b5b5b80156115d65750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15156115e157600080fd5b600090505b845181101561178557600073ffffffffffffffffffffffffffffffffffffffff16858281518110151561161557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415801561165a57506000848281518110151561164e57fe5b90602001906020020151115b15611778578173ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561168a57fe5b9060200190602002015187858151811015156116a257fe5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561176357600080fd5b6102c65a03f1151561177457600080fd5b5050505b80806001019150506115e6565b61178e86610ec3565b1561182e576117e68551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611839565b611838855161279b565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b60026020528060005260406000206000915090505481565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b600080600085915060085485511115801561192457508451611911336111c5565b101580611923575061192286610ec3565b5b5b801561197a5750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b151561198557600080fd5b600090505b8451811015611aef57600073ffffffffffffffffffffffffffffffffffffffff1685828151811015156119b957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141515611ae2578173ffffffffffffffffffffffffffffffffffffffff166323b872dd338784815181101515611a0b57fe5b90602001906020020151876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515611acd57600080fd5b6102c65a03f11515611ade57600080fd5b5050505b808060010191505061198a565b611af886610ec3565b15611b9857611b508551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ba3565b611ba2855161279b565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60065481565b6000611c5982610ec3565b15611cb957611cb2600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600954612c3690919063ffffffff16565b9050611cbe565b600090505b919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d6a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614158015611dd45750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b8015611de05750600083115b1515611deb57600080fd5b8490508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611e9957600080fd5b6102c65a03f11515611eaa57600080fd5b50505060405180519050507ee763f7778b8ceef7270c89b7d1df1008b0e482da39c43831417733af96fb0d858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a160019150509392505050565b60095481565b60008082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611fb75750600083115b1515611fc257600080fd5b82905061201783600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561209a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8455ae6be5d92f1df1c3c1484388e247a36c7e60d72055ae216dbc258f257d4b826040518082815260200191505060405180910390a250919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561214b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156121c7575081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b15156121d257600080fd5b61222482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167fc1bc87fca69dd3948590175e7c7e66a498d583b1bf99540547fc38e7f1005859836040518082815260200191505060405180910390a26001905092915050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561239c57600080fd5b6102c65a03f115156123ad57600080fd5b5050506040518051905091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561241d57600080fd5b6064821015151561242d57600080fd5b7f9b7e3ed6ece2694ef31c25bc941a429a17a30546dd406649a5b7178d76c2159960085483604051808381526020018281526020019250505060405180910390a18160088190555060019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156124d957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561256357506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b151561256e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561268957600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156126e157600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe9c9a473410d8fd0bb91117f70a4b750bce859ab398b18cc49160f5ff41d66e460405160405180910390a260019050919050565b6000818381151561279257fe5b04905092915050565b60006127a6336114c8565b8211151561298d576128276127d960646127cb60075486610c7090919063ffffffff16565b61278590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506128d061288260065484610c7090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61296360065485610c7090919063ffffffff16565b9081150290604051600060405180830381858888f19350505050151561298857600080fd5b612c32565b6129a8612999336114c8565b83612c3690919063ffffffff16565b90506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115612b9c57612a73612a256064612a17600754612a09336114c8565b610c7090919063ffffffff16565b61278590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515612b5657600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b612bee81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b6000828211151515612c4457fe5b8183039050929150505600a165627a7a72305820afc718f53c4486fade8fd097bc8a0251ed102e80acf74465b457dbf903508acb0029
#@coverage
Achieved 80.60% coverage for code: 606060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303a19a4f146102975780630b98f975146102c057806318fe1a8d146102fb57806323a0fb021461034c5780632a501a431461039d5780632c4e722e146103f757806334fcf437146104205780633f92edaf1461045b5780634db67caf146104845780634f95e960146104d5578063528976de14610522578063656b6b6b14610594578063679aefce146105e157806371f124c51461060a578063724ef94c146106575780637252bbf21461072857806375b4d78c146107755780638da5cb5b1461079e5780638eb5f58e146107f35780639d06583814610840578063a3792985146108da578063a39a2b7614610927578063adc7612614610950578063b28fc9731461099d578063bcdd1e13146109ea578063c13e285d14610a63578063c311d04914610a8c578063c44412e314610ac7578063ea7ee01014610b21578063eb1cfa8214610b8d578063f2fde38b14610bc8578063f332a24514610c01575b6101e834600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fc4174c525ef524021f6e3727a9bbe7fa797780670e51c9cd76ceb8e5dfe6c97b3461027960055434610c7090919063ffffffff16565b604051808381526020018281526020019250505060405180910390a2005b34156102a257600080fd5b6102aa610ca8565b6040518082815260200191505060405180910390f35b34156102cb57600080fd5b6102e16004808035906020019091905050610cae565b604051808215151515815260200191505060405180910390f35b341561030657600080fd5b610332600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d69565b604051808215151515815260200191505060405180910390f35b341561035757600080fd5b610383600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ec3565b604051808215151515815260200191505060405180910390f35b34156103a857600080fd5b6103dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f10565b604051808215151515815260200191505060405180910390f35b341561040257600080fd5b61040a6110a2565b6040518082815260200191505060405180910390f35b341561042b57600080fd5b61044160048080359060200190919050506110a8565b604051808215151515815260200191505060405180910390f35b341561046657600080fd5b61046e61119b565b6040518082815260200191505060405180910390f35b341561048f57600080fd5b6104bb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a5565b604051808215151515815260200191505060405180910390f35b34156104e057600080fd5b61050c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111c5565b6040518082815260200191505060405180910390f35b341561052d57600080fd5b61057a6004808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506111f1565b604051808215151515815260200191505060405180910390f35b341561059f57600080fd5b6105cb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114a6565b6040518082815260200191505060405180910390f35b34156105ec57600080fd5b6105f46114be565b6040518082815260200191505060405180910390f35b341561061557600080fd5b610641600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114c8565b6040518082815260200191505060405180910390f35b341561066257600080fd5b61070e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190505061153f565b604051808215151515815260200191505060405180910390f35b341561073357600080fd5b61075f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611895565b6040518082815260200191505060405180910390f35b341561078057600080fd5b6107886118ad565b6040518082815260200191505060405180910390f35b34156107a957600080fd5b6107b16118b3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107fe57600080fd5b61082a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118d8565b6040518082815260200191505060405180910390f35b341561084b57600080fd5b6108c0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190919050506118f0565b604051808215151515815260200191505060405180910390f35b34156108e557600080fd5b610911600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611bff565b6040518082815260200191505060405180910390f35b341561093257600080fd5b61093a611c48565b6040518082815260200191505060405180910390f35b341561095b57600080fd5b610987600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c4e565b6040518082815260200191505060405180910390f35b34156109a857600080fd5b6109d4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cc3565b6040518082815260200191505060405180910390f35b34156109f557600080fd5b610a49600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611d0c565b604051808215151515815260200191505060405180910390f35b3415610a6e57600080fd5b610a76611f5f565b6040518082815260200191505060405180910390f35b3415610a9757600080fd5b610aad6004808035906020019091905050611f65565b604051808215151515815260200191505060405180910390f35b3415610ad257600080fd5b610b07600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506120ee565b604051808215151515815260200191505060405180910390f35b3415610b2c57600080fd5b610b77600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506122bf565b6040518082815260200191505060405180910390f35b3415610b9857600080fd5b610bae60048080359060200190919050506123c0565b604051808215151515815260200191505060405180910390f35b3415610bd357600080fd5b610bff600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061247e565b005b3415610c0c57600080fd5b610c38600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061262c565b604051808215151515815260200191505060405180910390f35b6000808284019050838110151515610c6657fe5b8091505092915050565b600080831415610c835760009050610ca2565b8183029050818382811515610c9457fe5b04141515610c9e57fe5b8090505b92915050565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d0b57600080fd5b8160075414151515610d1c57600080fd5b7fc233b8877183b2d7aeb5d3baf2b545240e5c94d7a1f5ed6938ff87a1cf95a2d160075483604051808381526020018281526020019250505060405180910390a181600781905550919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dc657600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610e1f57600080fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f5f9fbe3bc9355d7eb80002cf096327839eecbdf5ffc15955fbe7609433b18c5560405160405180910390a260019050919050565b6000600954600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054109050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f6d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610faa5750600082115b1515610fb557600080fd5b61100782600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f17641426a9871fbd505cf22302be09d58b40768a741ae1b9a270bdb46ff72cf6836040518082815260200191505060405180910390a26001905092915050565b60055481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561110657600080fd5b60055483141580156111185750600083115b151561112357600080fd5b7f4ac9052a820bf4f8c02d7588587cae835573b5b99ea7ad4ca002f17f319f718660055484604051808381526020018281526020019250505060405180910390a182600581905550670de0b6b3a7640000905061118b6005548261278590919063ffffffff16565b6006819055506001915050919050565b6000600854905090565b60036020528060005260406000206000915054906101000a900460ff1681565b60006111ea6111d383611bff565b6111dc846114c8565b610c5290919063ffffffff16565b9050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561125157600080fd5b60085484511115151561126357600080fd5b600091505b835182101561149f57600073ffffffffffffffffffffffffffffffffffffffff16848381518110151561129757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415801561131b575060006002600086858151811015156112d457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156114925760026000858481518110151561133257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060026000868581518110151561138d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083828151811015156113e357fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561142c57600080fd5b838281518110151561143a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff167fa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76826040518082815260200191505060405180910390a25b8180600101925050611268565b5050919050565b60046020528060005260406000206000915090505481565b6000600554905090565b6000611538670de0b6b3a764000061152a600554600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7090919063ffffffff16565b61278590919063ffffffff16565b9050919050565b600080600085915060085485511115801561155b575083518551145b80156115805750845161156d336111c5565b10158061157f575061157e86610ec3565b5b5b80156115d65750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15156115e157600080fd5b600090505b845181101561178557600073ffffffffffffffffffffffffffffffffffffffff16858281518110151561161557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415801561165a57506000848281518110151561164e57fe5b90602001906020020151115b15611778578173ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561168a57fe5b9060200190602002015187858151811015156116a257fe5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561176357600080fd5b6102c65a03f1151561177457600080fd5b5050505b80806001019150506115e6565b61178e86610ec3565b1561182e576117e68551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611839565b611838855161279b565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b60026020528060005260406000206000915090505481565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b600080600085915060085485511115801561192457508451611911336111c5565b101580611923575061192286610ec3565b5b5b801561197a5750600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b151561198557600080fd5b600090505b8451811015611aef57600073ffffffffffffffffffffffffffffffffffffffff1685828151811015156119b957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141515611ae2578173ffffffffffffffffffffffffffffffffffffffff166323b872dd338784815181101515611a0b57fe5b90602001906020020151876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515611acd57600080fd5b6102c65a03f11515611ade57600080fd5b5050505b808060010191505061198a565b611af886610ec3565b15611b9857611b508551600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ba3565b611ba2855161279b565b5b3373ffffffffffffffffffffffffffffffffffffffff167f22a4421eda5c487da9a0a4a06f0c582468448c11c1d02478e2442686d8de589a86516040518082815260200191505060405180910390a26001925050509392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60065481565b6000611c5982610ec3565b15611cb957611cb2600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600954612c3690919063ffffffff16565b9050611cbe565b600090505b919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d6a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614158015611dd45750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b8015611de05750600083115b1515611deb57600080fd5b8490508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611e9957600080fd5b6102c65a03f11515611eaa57600080fd5b50505060405180519050507ee763f7778b8ceef7270c89b7d1df1008b0e482da39c43831417733af96fb0d858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a160019150509392505050565b60095481565b60008082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611fb75750600083115b1515611fc257600080fd5b82905061201783600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561209a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8455ae6be5d92f1df1c3c1484388e247a36c7e60d72055ae216dbc258f257d4b826040518082815260200191505060405180910390a250919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561214b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156121c7575081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b15156121d257600080fd5b61222482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167fc1bc87fca69dd3948590175e7c7e66a498d583b1bf99540547fc38e7f1005859836040518082815260200191505060405180910390a26001905092915050565b6000808290508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561239c57600080fd5b6102c65a03f115156123ad57600080fd5b5050506040518051905091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561241d57600080fd5b6064821015151561242d57600080fd5b7f9b7e3ed6ece2694ef31c25bc941a429a17a30546dd406649a5b7178d76c2159960085483604051808381526020018281526020019250505060405180910390a18160088190555060019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156124d957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561256357506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b151561256e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561268957600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156126e157600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe9c9a473410d8fd0bb91117f70a4b750bce859ab398b18cc49160f5ff41d66e460405160405180910390a260019050919050565b6000818381151561279257fe5b04905092915050565b60006127a6336114c8565b8211151561298d576128276127d960646127cb60075486610c7090919063ffffffff16565b61278590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506128d061288260065484610c7090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc61296360065485610c7090919063ffffffff16565b9081150290604051600060405180830381858888f19350505050151561298857600080fd5b612c32565b6129a8612999336114c8565b83612c3690919063ffffffff16565b90506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115612b9c57612a73612a256064612a17600754612a09336114c8565b610c7090919063ffffffff16565b61278590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501515612b5657600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b612bee81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c3690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b6000828211151515612c4457fe5b8183039050929150505600a165627a7a72305820afc718f53c4486fade8fd097bc8a0251ed102e80acf74465b457dbf903508acb0029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AceAirdrops
Function name: issueRefunds(address[])
PC address: 1346
Estimated Gas Usage: 11115 - 20295
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:278

function issueRefunds(address[] _addrs) public onlyOwner returns(bool) {
        require(_addrs.length <= maxDropsPerTx);
        for(uint i = 0; i < _addrs.length; i++) {
            if(_addrs[i] != address(0) && ethBalanceOf[_addrs[i]] > 0) {
                uint256 toRefund = ethBalanceOf[_addrs[i]];
                ethBalanceOf[_addrs[i]] = 0;
                _addrs[i].transfer(toRefund);
                RefundIssued(_addrs[i], toRefund);
            }
        }
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: issueRefunds(address[]), txdata: 0x528976deffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000102080000040010140000010018000800100000000000000000000000001000010208000004001014000001001800080010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024001040d0202020c100180088008040801041000000000000000000000000004, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AceAirdrops
Function name: multiValueAirdrop(address,address[],uint256[])
PC address: 1686
Estimated Gas Usage: 17487 - 47187
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:318

function multiValueAirdrop(address _addressOfToken,  address[] _recipients, uint256[] _values) public returns(bool) {
        ERCInterface token = ERCInterface(_addressOfToken);
        require(
            _recipients.length <= maxDropsPerTx 
            && _recipients.length == _values.length 
            && (
                getTotalDropsOf(msg.sender) >= _recipients.length
                || tokenHasFreeTrial(_addressOfToken)
            )
            && !tokenIsBanned[_addressOfToken]
        );
        for(uint i = 0; i < _recipients.length; i++) {
            if(_recipients[i] != address(0) && _values[i] > 0) {
                token.transferFrom(msg.sender, _recipients[i], _values[i]);
            }
        }
        if(tokenHasFreeTrial(_addressOfToken)) {
            trialDrops[_addressOfToken] = trialDrops[_addressOfToken].add(_recipients.length);
        } else {
            updateMsgSenderBonusDrops(_recipients.length);
        }
        AirdropInvoked(msg.sender, _recipients.length);
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: multiValueAirdrop(address,address[],uint256[]), txdata: 0x724ef94c0000000000000000000000000000000000000000000000000000000000000004ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AceAirdrops
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 2175
Estimated Gas Usage: 20633 - 116878
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:292

function singleValueAirdrop(address _addressOfToken,  address[] _recipients, uint256 _value) public returns(bool) {
        ERCInterface token = ERCInterface(_addressOfToken);
        require(
            _recipients.length <= maxDropsPerTx 
            && (
                getTotalDropsOf(msg.sender)>= _recipients.length 
                || tokenHasFreeTrial(_addressOfToken) 
            )
            && !tokenIsBanned[_addressOfToken]
        );
        for(uint i = 0; i < _recipients.length; i++) {
            if(_recipients[i] != address(0)) {
                token.transferFrom(msg.sender, _recipients[i], _value);
            }
        }
        if(tokenHasFreeTrial(_addressOfToken)) {
            trialDrops[_addressOfToken] = trialDrops[_addressOfToken].add(_recipients.length);
        } else {
            updateMsgSenderBonusDrops(_recipients.length);
        }
        AirdropInvoked(msg.sender, _recipients.length);
        return true;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d0658388000000000000000000000000000000000000000000000000000000100000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AceAirdrops
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 3784
Estimated Gas Usage: 20794 - 117318
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:130

maxTrialDrops

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AceAirdrops
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 3848
Estimated Gas Usage: 20794 - 117318
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:130

trialDrops[_addressOfToken]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AceAirdrops
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 6867
Estimated Gas Usage: 20794 - 117318
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:304

token.transferFrom(msg.sender, _recipients[i], _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefa3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AceAirdrops
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 6978
Estimated Gas Usage: 20794 - 117318
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:308

trialDrops[_addressOfToken]

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AceAirdrops
Function name: singleValueAirdrop(address,address[],uint256)
PC address: 7058
Estimated Gas Usage: 20794 - 117318
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:308

trialDrops[_addressOfToken] = trialDrops[_addressOfToken].add(_recipients.length)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: singleValueAirdrop(address,address[],uint256), txdata: 0x9d065838800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefe9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AceAirdrops
Function name: withdrawERC20Tokens(address,address,uint256)
PC address: 7839
Estimated Gas Usage: 4350 - 40628
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:370

token.transfer(_recipient, _value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address,address,uint256), txdata: 0xbcdd1e13000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef010101010101010101010101010101010101010201014001010208400101020101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AceAirdrops
Function name: getTokenAllowance(address,address)
PC address: 9122
Estimated Gas Usage: 2540 - 37761
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:253

token.allowance(_addr, address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: getTokenAllowance(address,address), txdata: 0xea7ee01040000000000000000000000000000000000000080000007fffffffffffffffcb000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


time_used: 36080.59203338623 seconds
#@contract_info_time
0x62a9df588d15e78153db9ea43bcfaa4a60917284.sol:0.4.19:AceAirdrops:36080.59203338623:36100:60:36000
