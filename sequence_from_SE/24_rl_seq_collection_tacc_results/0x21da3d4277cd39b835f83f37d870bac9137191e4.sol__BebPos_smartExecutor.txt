++++ 0x21da3d4277cd39b835f83f37d870bac9137191e4.sol  :  0.4.20  :  BebPos ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 2239
['constructor']:writes at the last depth:['0', '3', '5', '6', '1', '2', '4', '8', '8']
preprocessing: Achieved 99.96% coverage.
dynamic svars:['8', '7']
static svars:['0', '1', '3', '2', '5', '4', '6']
Ending preprocessing.
preprocessing time(s): 19.369986295700073
contract coverage: 64.40%
unfreeze(address) is not reachable
getUserProfit(address) is not reachable
checkinterests() is not reachable
freeze(uint256,address) is not reachable
Function Reads: State variables read in conditions
	freeze(uint256,address):[]
	getBebAmountzl():[]
	checkinterests():[]
	totalSupply():[]
	bebTokenTransfer():[]
	myfrozentokens():[]
	unfreeze(address):[]
	getUserProfit(address):[]
	BebUsers(address):[]
	getTokenBalance():[]
	owner():[]
	earningrate():[]
	getLength():[]
	myBalance():[]
	transferOwnership(address):[]
	getSumAmount():[]
	getBebAmount():[]
Function Writes: State variables written
	transferOwnership(address):['0']
	unfreeze(address):['1', '7', '3']
	freeze(uint256,address):['7', '3']
============================
iteration:3
targets:['unfreeze(address)', 'getUserProfit(address)', 'checkinterests()', 'freeze(uint256,address)']
['fallback']:writes at the last depth:[]
['fallback']:writes at the last depth:[]
['transferOwnership(address)']:writes at the last depth:['0']
['getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:4
['freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:5
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:6
['freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:7
['freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:8
['freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'transferOwnership(address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:9
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:10
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'freeze(uint256,address)', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:11
['freeze(uint256,address)', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:12
['freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'freeze(uint256,address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:13
['freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'getTokenBalance()', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:14
['freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'transferOwnership(address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:15
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:16
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'getTokenBalance()', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:17
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:18
['freeze(uint256,address)', 'transferOwnership(address)', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'freeze(uint256,address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'transferOwnership(address)', 'freeze(uint256,address)', 'getTokenBalance()']:writes at the last depth:[]
contract coverage: 83.92%
============================
iteration:19
['freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'getTokenBalance()', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:20
['freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'transferOwnership(address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:21
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:22
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'transferOwnership(address)', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
contract coverage: 83.92%
============================
iteration:23
['freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:24
contract coverage: 83.92%
============================
iteration:25
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:26
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:27
['freeze(uint256,address)', 'fallback', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:28
['freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'fallback', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:29
['freeze(uint256,address)', 'fallback', 'freeze(uint256,address)', 'fallback']:writes at the last depth:[]
contract coverage: 83.92%
============================
iteration:30
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'fallback']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'transferOwnership(address)']:writes at the last depth:['0']
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'getTokenBalance()']:writes at the last depth:[]
['freeze(uint256,address)', 'fallback', 'getTokenBalance()', 'freeze(uint256,address)']:writes at the last depth:['3', '7']
contract coverage: 83.92%
============================
iteration:31
['freeze(uint256,address)', 'fallback', 'transferOwnership(address)', 'transferOwnership(address)']:writes at the last depth:['0']
contract coverage: 83.92%
============================
iteration:32
contract coverage: 83.92%
============================
iteration:33
contract coverage: 83.92%
============================
iteration:34
contract coverage: 83.92%
============================
iteration:35
contract coverage: 83.92%
============================
iteration:36
contract coverage: 83.92%
============================
iteration:37
contract coverage: 83.92%
#@statespace
3499 nodes, 3498 edges, 44947 total states
#@coverage
Achieved 11.24% coverage for code: 606060405260008060146101000a81548160ff02191690831515021790555060006003556012600560146101000a81548160ff021916908360ff160217905550603c600655341561004f57600080fd5b6040516080806115be83398101604052808051906020019091908051906020019091908051906020019091908051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400008302600181905550670de0b6b3a76400008202600281905550670de0b6b3a764000081026004819055506008805480600101828161014e91906101a6565b9160005260206000209001600086909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506101f7565b8154818355818115116101cd578183600052602060002091820191016101cc91906101d2565b5b505050565b6101f491905b808211156101f05760008160009055506001016101d8565b5090565b90565b6113b8806102066000396000f3006060604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063036429e0146100f35780630ae628c114610135578063141a3cff1461015e57806318160ddd146101875780631dae6529146101b057806337d094211461020557806345c8b1a61461022e578063520ab54d146102675780635efe3047146102f557806382b2e2571461037c5780638da5cb5b146103a5578063a6cea2fb146103fa578063be1c766b14610423578063c9116b691461044c578063f2fde38b14610475578063f843d7fd146104ae578063fe3a1bf1146104d7575b005b34156100fe57600080fd5b610133600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610500565b005b341561014057600080fd5b6101486109d8565b6040518082815260200191505060405180910390f35b341561016957600080fd5b6101716109eb565b6040518082815260200191505060405180910390f35b341561019257600080fd5b61019a610a85565b6040518082815260200191505060405180910390f35b34156101bb57600080fd5b6101c3610a8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561021057600080fd5b610218610ab5565b6040518082815260200191505060405180910390f35b341561023957600080fd5b610265600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610abf565b005b341561027257600080fd5b61029e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061102e565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b341561030057600080fd5b61032c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110e7565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b341561038757600080fd5b61038f611131565b6040518082815260200191505060405180910390f35b34156103b057600080fd5b6103b8611218565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040557600080fd5b61040d61123d565b6040518082815260200191505060405180910390f35b341561042e57600080fd5b610436611247565b6040518082815260200191505060405180910390f35b341561045757600080fd5b61045f611254565b6040518082815260200191505060405180910390f35b341561048057600080fd5b6104ac600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112a3565b005b34156104b957600080fd5b6104c1611378565b6040518082815260200191505060405180910390f35b34156104e257600080fd5b6104ea611382565b6040518082815260200191505060405180910390f35b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561090457600454600154111561083057600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561064f57600080fd5b6102c65a03f1151561066057600080fd5b50505080600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555042600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550816003600082825401925050819055507f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252600c8152602001807fe8bdace585a5e68890e58a9f0000000000000000000000000000000000000000815250602001935050505060405180910390a16109d4565b7f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252602e8152602001807fe8bdace585a5e5a4b1e8b4a52c424542e680bbe9878fe5b7b2e7bb8fe585a8e981526020017f83a8e58f91e8a18ce5ae8ce6af95000000000000000000000000000000000000815250604001935050505060405180910390a16109d4565b7f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252602b8152602001807fe8bdace585a5e5a4b1e8b4a52ce8afb7e58588e58f96e587bae59088e7baa6e481526020017fb8ade79a84e4bd99e9a29d000000000000000000000000000000000000000000815250604001935050505060405180910390a15b5050565b6000806001546002540390508091505090565b6000806000806000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020935060008460010154111515610a4457fe5b60045460065485600201544203811515610a5a57fe5b040292506001546002540391508183856001015402811515610a7857fe5b0490508094505050505090565b6000600154905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600354905090565b6000806000806000806000339650600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020955060008660010154111515610b2157600080fd5b8560020154945085600101549350600454600654864203811515610b4157fe5b0402925060015460025403915081838502811515610b5b57fe5b0490506004546001541115610b8457806001600082825403925050819055504286600201819055505b6004546001541115610dcc578060016000828254039250508190555083600360008282540392505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886001015484016040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1515610c7a57600080fd5b6102c65a03f11515610c8b57600080fd5b5050506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8876001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252601b8152602001807fe69cace98791e5928ce588a9e681afe68890e58a9fe58f96e6acbe0000000000815250602001935050505060405180910390a1611024565b8060016000828254039250508190555083600360008282540392505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1515610eb057600080fd5b6102c65a03f11515610ec157600080fd5b5050506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8876001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252602a8152602001807f424542e680bbe9878fe5b7b2e7bb8fe58f91e8a18ce5ae8ce6af95efbc8ce58f81526020017f96e59b9ee69cace9879100000000000000000000000000000000000000000000815250604001935050505060405180910390a15b5050505050505050565b6000806000806000806000806000899450600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093506000846001015411151561109057fe5b600454600654856002015442038115156110a657fe5b0402925060015460025403915081838560010154028115156110c457fe5b049050848460020154856001015483985098509850985050505050509193509193565b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156111f857600080fd5b6102c65a03f1151561120957600080fd5b50505060405180519050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000600880549050905090565b600080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015491505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112fe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561137557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000600354905090565b60006001549050905600a165627a7a72305820e332dbbb899b7828d4b81265e8b7b394284daf150fcdc80127903f3ca83578aa0029
#@coverage
Achieved 83.92% coverage for code: 6060604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063036429e0146100f35780630ae628c114610135578063141a3cff1461015e57806318160ddd146101875780631dae6529146101b057806337d094211461020557806345c8b1a61461022e578063520ab54d146102675780635efe3047146102f557806382b2e2571461037c5780638da5cb5b146103a5578063a6cea2fb146103fa578063be1c766b14610423578063c9116b691461044c578063f2fde38b14610475578063f843d7fd146104ae578063fe3a1bf1146104d7575b005b34156100fe57600080fd5b610133600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610500565b005b341561014057600080fd5b6101486109d8565b6040518082815260200191505060405180910390f35b341561016957600080fd5b6101716109eb565b6040518082815260200191505060405180910390f35b341561019257600080fd5b61019a610a85565b6040518082815260200191505060405180910390f35b34156101bb57600080fd5b6101c3610a8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561021057600080fd5b610218610ab5565b6040518082815260200191505060405180910390f35b341561023957600080fd5b610265600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610abf565b005b341561027257600080fd5b61029e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061102e565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b341561030057600080fd5b61032c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110e7565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b341561038757600080fd5b61038f611131565b6040518082815260200191505060405180910390f35b34156103b057600080fd5b6103b8611218565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040557600080fd5b61040d61123d565b6040518082815260200191505060405180910390f35b341561042e57600080fd5b610436611247565b6040518082815260200191505060405180910390f35b341561045757600080fd5b61045f611254565b6040518082815260200191505060405180910390f35b341561048057600080fd5b6104ac600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112a3565b005b34156104b957600080fd5b6104c1611378565b6040518082815260200191505060405180910390f35b34156104e257600080fd5b6104ea611382565b6040518082815260200191505060405180910390f35b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561090457600454600154111561083057600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561064f57600080fd5b6102c65a03f1151561066057600080fd5b50505080600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555042600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550816003600082825401925050819055507f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252600c8152602001807fe8bdace585a5e68890e58a9f0000000000000000000000000000000000000000815250602001935050505060405180910390a16109d4565b7f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252602e8152602001807fe8bdace585a5e5a4b1e8b4a52c424542e680bbe9878fe5b7b2e7bb8fe585a8e981526020017f83a8e58f91e8a18ce5ae8ce6af95000000000000000000000000000000000000815250604001935050505060405180910390a16109d4565b7f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8336001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252602b8152602001807fe8bdace585a5e5a4b1e8b4a52ce8afb7e58588e58f96e587bae59088e7baa6e481526020017fb8ade79a84e4bd99e9a29d000000000000000000000000000000000000000000815250604001935050505060405180910390a15b5050565b6000806001546002540390508091505090565b6000806000806000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020935060008460010154111515610a4457fe5b60045460065485600201544203811515610a5a57fe5b040292506001546002540391508183856001015402811515610a7857fe5b0490508094505050505090565b6000600154905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600354905090565b6000806000806000806000339650600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020955060008660010154111515610b2157600080fd5b8560020154945085600101549350600454600654864203811515610b4157fe5b0402925060015460025403915081838502811515610b5b57fe5b0490506004546001541115610b8457806001600082825403925050819055504286600201819055505b6004546001541115610dcc578060016000828254039250508190555083600360008282540392505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886001015484016040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1515610c7a57600080fd5b6102c65a03f11515610c8b57600080fd5b5050506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8876001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252601b8152602001807fe69cace98791e5928ce588a9e681afe68890e58a9fe58f96e6acbe0000000000815250602001935050505060405180910390a1611024565b8060016000828254039250508190555083600360008282540392505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1515610eb057600080fd5b6102c65a03f11515610ec157600080fd5b5050506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507f2251facc7f9ab4ddc0bb6c48432c41c898ef9c97d360bfa64266b6127a7e0ac8876001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001806020018281038252602a8152602001807f424542e680bbe9878fe5b7b2e7bb8fe58f91e8a18ce5ae8ce6af95efbc8ce58f81526020017f96e59b9ee69cace9879100000000000000000000000000000000000000000000815250604001935050505060405180910390a15b5050505050505050565b6000806000806000806000806000899450600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093506000846001015411151561109057fe5b600454600654856002015442038115156110a657fe5b0402925060015460025403915081838560010154028115156110c457fe5b049050848460020154856001015483985098509850985050505050509193509193565b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156111f857600080fd5b6102c65a03f1151561120957600080fd5b50505060405180519050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000600880549050905090565b600080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015491505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112fe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561137557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000600354905090565b60006001549050905600a165627a7a72305820e332dbbb899b7828d4b81265e8b7b394284daf150fcdc80127903f3ca83578aa0029
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BebPos
Function name: constructor
PC address: 274
Estimated Gas Usage: 62046 - 289149
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:57

_Bebamount*10**18

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000000000000000000000000000000002, decoded_data: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BebPos
Function name: constructor
PC address: 291
Estimated Gas Usage: 62046 - 289149
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:58

_bebTotalAmount*10**18

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, decoded_data: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BebPos
Function name: constructor
PC address: 308
Estimated Gas Usage: 62046 - 289149
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:59

_OneMinuteBEB*10**18

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004, decoded_data: , value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1621
Estimated Gas Usage: 28150 - 145148
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:68

bebTokenTransfer.transferFrom(_addr,address(address(this)),_value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef028026, decoded_data: , value: 0x0
Caller: [CREATOR], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1710
Estimated Gas Usage: 28150 - 145148
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:69

BebUsers[_addr].customerAddr=_addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef004026, decoded_data: , value: 0x0
Caller: [ATTACKER], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1763
Estimated Gas Usage: 28150 - 145148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:69

BebUsers[_addr].customerAddr=_addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef004026, decoded_data: , value: 0x0
Caller: [ATTACKER], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1834
Estimated Gas Usage: 28150 - 145148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:70

BebUsers[_addr].amount=_value

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef004026, decoded_data: , value: 0x0
Caller: [ATTACKER], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1905
Estimated Gas Usage: 28150 - 145148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:71

BebUsers[_addr].bebtime=now

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef004026, decoded_data: , value: 0x0
Caller: [ATTACKER], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1914
Estimated Gas Usage: 28150 - 145148
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:72

sumAmount+=_value

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef004026, decoded_data: , value: 0x0
Caller: [ATTACKER], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BebPos
Function name: freeze(uint256,address)
PC address: 1921
Estimated Gas Usage: 28150 - 145148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:72

sumAmount+=_value

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef004026, decoded_data: , value: 0x0
Caller: [ATTACKER], function: freeze(uint256,address), txdata: 0x036429e0, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BebPos
Function name: getBebAmountzl()
PC address: 2530
Estimated Gas Usage: 1835 - 2211
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:139

bebTotalAmount-Bebamount

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000210, decoded_data: , value: 0x0
Caller: [ATTACKER], function: getBebAmountzl(), txdata: 0x0ae628c1, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: BebPos
Function name: checkinterests()
PC address: 2627
Estimated Gas Usage: 1109 - 1394
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:159

function checkinterests() public view returns(uint) {
       BebUser storage user = BebUsers[msg.sender];
       assert(user.amount > 0);
       uint256 A=(now-user.bebtime)/OneMinute*OneMinuteBEB;
       uint256 B=bebTotalAmount-Bebamount;
       uint256 C=user.amount*A/B;
       return C;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: checkinterests(), txdata: 0x141a3cff, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: BebPos
Function name: getUserProfit(address)
PC address: 4239
Estimated Gas Usage: 1280 - 1565
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:172

function getUserProfit(address _form) public view returns(address,uint256,uint256,uint256){
       address _address = _form;
       BebUser storage user = BebUsers[_address];
       assert(user.amount > 0);
       uint256 A=(now-user.bebtime)/OneMinute*OneMinuteBEB;
       uint256 B=bebTotalAmount-Bebamount;
       uint256 C=user.amount*A/B;
        return (_address,user.bebtime,user.amount,C);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: getUserProfit(address), txdata: 0x520ab54d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BebPos
Function name: getTokenBalance()
PC address: 4606
Estimated Gas Usage: 2833 - 38289
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:130

bebTokenTransfer.balanceOf(address(this))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, decoded_data: , value: 0x0
Caller: [ATTACKER], function: getTokenBalance(), txdata: 0x82b2e257, value: 0x0


time_used: 36033.00267934799 seconds
#@contract_info_time
0x21da3d4277cd39b835f83f37d870bac9137191e4.sol:0.4.20:BebPos:36033.00267934799:36100:60:36000
