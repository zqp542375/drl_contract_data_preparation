++++ 0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol  :  0.5.16  :  ShareholderVomer ++++
Starting preprocessing.
number of genesis states: 1
total instructions: 4677
['constructor']:writes at the last depth:[]
hit the exec_preprocessing excution time, return.
preprocessing: Achieved 87.41% coverage.
dynamic svars:['56', '60', '59', '58', '57']
static svars:['53', '51', '63', '64', '52', '0', '54', '55', '61', '62']
Ending preprocessing.
preprocessing time(s): 100.64970707893372
contract coverage: 44.58%
fallback is not reachable
getCredit(address,uint256) is not reachable
getInfo(address) is not reachable
withdraw(uint256) is not reachable
updatePaymentMode(address,uint256) is not reachable
transferTokens(address,address,uint256) is not reachable
acceptOwner() is not reachable
addDepositTokens(address[],uint256[]) is not reachable
lockFunds(uint256) is not reachable
setAdmin(address,bool) is not reachable
changeIndividualVMRCup(address,uint256) is not reachable
changeOwnerCandidate(address) is not reachable
setAddressAllowance(address,uint256) is not reachable
changeMinBalance(uint256) is not reachable
initialize() is not reachable
Function Reads: State variables read in conditions
	returnCredit():[]
	newOwnerCandidate():[]
	acceptOwner():[]
	changeIndividualVMRCup(address,uint256):[]
	dateUntilFundsLocked():[]
	getInfo(address):[]
	addDepositTokens(address[],uint256[]):[]
	fundsLockedtoWithdraw():[]
	lockFunds(uint256):[]
	owner():[]
	transferTokens(address,address,uint256):[]
	changeMinBalance(uint256):[]
	changeOwnerCandidate(address):[]
	setAddressAllowance(address,uint256):[]
	getCredit(address,uint256):[]
	initialize():[]
	getPaymentInfo():[]
	updatePaymentMode(address,uint256):['62']
	withdraw(uint256):[]
	admins(address):[]
	setAdmin(address,bool):[]
Function Writes: State variables written
	changeMinBalance(uint256):['53']
	acceptOwner():['51']
	lockFunds(uint256):['63', '64']
	changeOwnerCandidate(address):['52']
	initialize():['0', '54', '55', '53', '56', '51', '61']
	setAddressAllowance(address,uint256):['60']
	changeIndividualVMRCup(address,uint256):['59']
	updatePaymentMode(address,uint256):['61', '62']
	setAdmin(address,bool):['58']
	fallback:['57', '56']
	getCredit(address,uint256):['60']
============================
iteration:3
targets:['fallback', 'getCredit(address,uint256)', 'getInfo(address)', 'withdraw(uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'acceptOwner()', 'addDepositTokens(address[],uint256[])', 'lockFunds(uint256)', 'setAdmin(address,bool)', 'changeIndividualVMRCup(address,uint256)', 'changeOwnerCandidate(address)', 'setAddressAllowance(address,uint256)', 'changeMinBalance(uint256)', 'initialize()']
['returnCredit()']:writes at the last depth:[]
['initialize()']:writes at the last depth:['61', '0', '51', '54', '55', '56', '53']
contract coverage: 58.65%
============================
iteration:4
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'fallback']:writes at the last depth:[]
['initialize()', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.65%
============================
iteration:5
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.65%
============================
iteration:6
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.65%
============================
iteration:7
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 58.65%
============================
iteration:8
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 73.25%
============================
iteration:9
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'addDepositTokens(address[],uint256[])']:writes at the last depth:['']
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'getInfo(address)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)', 'addDepositTokens(address[],uint256[])']:writes at the last depth:['']
contract coverage: 73.25%
============================
iteration:10
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'withdraw(uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 73.25%
============================
iteration:11
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)', 'getInfo(address)']:writes at the last depth:[]
contract coverage: 78.06%
============================
iteration:12
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'getCredit(address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'getCredit(address,uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'getCredit(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'getCredit(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)', 'getInfo(address)']:writes at the last depth:[]
contract coverage: 78.70%
============================
iteration:13
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:14
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'acceptOwner()']:writes at the last depth:['51']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:15
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:16
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:17
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:18
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:19
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:20
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'returnCredit()', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:21
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'fallback']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'transferTokens(address,address,uint256)', 'fallback', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:22
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:23
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:24
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:25
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:26
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'returnCredit()']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeMinBalance(uint256)']:writes at the last depth:['53']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeOwnerCandidate(address)']:writes at the last depth:['52']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'lockFunds(uint256)']:writes at the last depth:['63', '64']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'setAddressAllowance(address,uint256)']:writes at the last depth:['60']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'changeIndividualVMRCup(address,uint256)']:writes at the last depth:['59']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'withdraw(uint256)']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)']:writes at the last depth:['58']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)']:writes at the last depth:['61', '62']
['initialize()', 'updatePaymentMode(address,uint256)', 'updatePaymentMode(address,uint256)', 'transferTokens(address,address,uint256)']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:27
['initialize()', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)', 'fallback']:writes at the last depth:[]
['initialize()', 'updatePaymentMode(address,uint256)', 'setAdmin(address,bool)', 'returnCredit()']:writes at the last depth:[]
contract coverage: 79.45%
============================
iteration:28
contract coverage: 79.45%
============================
iteration:29
contract coverage: 79.45%
============================
iteration:30
contract coverage: 79.45%
============================
iteration:31
contract coverage: 79.45%
============================
iteration:32
contract coverage: 79.45%
============================
iteration:33
contract coverage: 79.45%
============================
iteration:34
contract coverage: 79.45%
============================
iteration:35
contract coverage: 79.45%
============================
iteration:36
contract coverage: 79.45%
============================
iteration:37
contract coverage: 79.45%
============================
iteration:38
contract coverage: 79.45%
============================
iteration:39
contract coverage: 79.45%
============================
iteration:40
contract coverage: 79.45%
============================
iteration:41
contract coverage: 79.45%
============================
iteration:42
contract coverage: 79.45%
============================
iteration:43
contract coverage: 79.45%
============================
iteration:44
contract coverage: 79.45%
============================
iteration:45
contract coverage: 79.45%
============================
iteration:46
contract coverage: 79.45%
============================
iteration:47
contract coverage: 79.45%
============================
iteration:48
contract coverage: 79.45%
============================
iteration:49
contract coverage: 79.45%
============================
iteration:50
contract coverage: 79.45%
============================
iteration:51
contract coverage: 79.45%
============================
iteration:52
contract coverage: 79.45%
============================
iteration:53
contract coverage: 79.45%
============================
iteration:54
contract coverage: 79.45%
============================
iteration:55
contract coverage: 79.45%
#@statespace
7149 nodes, 7148 edges, 89360 total states
#@coverage
Achieved 0.43% coverage for code: 608060405234801561001057600080fd5b5061264b806100206000396000f3fe60806040526004361061012a5760003560e01c806384843265116100ab578063cb59e5c01161006f578063cb59e5c014610d02578063d091b55014610d0c578063ebbc496514610d63578063eef793d914610d7a578063f8800fae14610dd5578063ffdd5cf114610e005761012a565b80638484326514610aef57806389c3ef6c14610bca5780638c8f95fb14610bf55780638da5cb5b14610c30578063a64b6e5f14610c875761012a565b80634ea18fab116100f25780634ea18fab14610996578063561a01b8146109d15780635d7ad6ea14610a225780637920769714610a7d5780638129fc1c14610ad85761012a565b806304da3f19146107dc578063155e08141461083a5780632e1a7d4d14610895578063429b62e5146108d05780634b0bddd214610939575b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015f57fe5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101ba576107da565b6101c43333610e88565b6000603960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081141561026457670de0b6b3a76400006035540290505b808260030154101561027557600080fd5b60003411156104f857671bc16d674ec80000341015806102ad575060008260000154141580156102ac5750662386f26fc100003410155b5b6102b357fe5b60146000369050141561044a5760006103106000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611201565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561034857fe5b8073ffffffffffffffffffffffffffffffffffffffff166108fc610389606461037b60193461120f90919063ffffffff16565b61129590919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156103b4573d6000803e3d6000fd5b50603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc610418606461040a60053461120f90919063ffffffff16565b61129590919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015610443573d6000803e3d6000fd5b50506104f7565b60008036905014156104ea57603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6104b960646104ab601e3461120f90919063ffffffff16565b61129590919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156104e4573d6000803e3d6000fd5b506104f6565b60006104f557600080fd5b5b5b5b600082600001541461078957600061055e62278d0061055085600101544203610542606461053460148a6000015461120f90919063ffffffff16565b61129590919063ffffffff16565b61120f90919063ffffffff16565b61129590919063ffffffff16565b905061057781846002015461132490919063ffffffff16565b83600201819055506000339050600073ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610627578073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610621573d6000803e3d6000fd5b50610786565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561077957603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826106f3603e54866113ac90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b50505050610785565b600061078457600080fd5b5b5b50505b4282600101819055506107cf6107bc60646107ae60463461120f90919063ffffffff16565b61129590919063ffffffff16565b836000015461132490919063ffffffff16565b826000018190555050505b005b3480156107e857600080fd5b506107f16113ec565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561084657600080fd5b506108936004803603604081101561085d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061141d565b005b3480156108a157600080fd5b506108ce600480360360208110156108b857600080fd5b810190808035906020019092919050505061156a565b005b3480156108dc57600080fd5b5061091f600480360360208110156108f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611658565b604051808215151515815260200191505060405180910390f35b34801561094557600080fd5b506109946004803603604081101561095c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611678565b005b3480156109a257600080fd5b506109cf600480360360208110156109b957600080fd5b810190808035906020019092919050505061172a565b005b3480156109dd57600080fd5b50610a20600480360360208110156109f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061178b565b005b348015610a2e57600080fd5b50610a7b60048036036040811015610a4557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611826565b005b348015610a8957600080fd5b50610ad660048036036040811015610aa057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118c5565b005b348015610ae457600080fd5b50610aed611a08565b005b348015610afb57600080fd5b50610bc860048036036040811015610b1257600080fd5b8101908080359060200190640100000000811115610b2f57600080fd5b820183602082011115610b4157600080fd5b80359060200191846020830284011164010000000083111715610b6357600080fd5b909192939192939080359060200190640100000000811115610b8457600080fd5b820183602082011115610b9657600080fd5b80359060200191846020830284011164010000000083111715610bb857600080fd5b9091929391929390505050611d15565b005b348015610bd657600080fd5b50610bdf611e2f565b6040518082815260200191505060405180910390f35b348015610c0157600080fd5b50610c2e60048036036020811015610c1857600080fd5b8101908080359060200190929190505050611e35565b005b348015610c3c57600080fd5b50610c45611ebb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c9357600080fd5b50610d0060048036036060811015610caa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ee1565b005b610d0a611fdc565b005b348015610d1857600080fd5b50610d2161202c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d6f57600080fd5b50610d78612052565b005b348015610d8657600080fd5b50610dd360048036036040811015610d9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612111565b005b348015610de157600080fd5b50610dea6121ba565b6040518082815260200191505060405180910390f35b348015610e0c57600080fd5b50610e4f60048036036020811015610e2357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121c0565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166111fd576000806000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b158015610f7d57600080fd5b505afa158015610f91573d6000803e3d6000fd5b505050506040513d6080811015610fa757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505050809350819450829550505050600083111561111557600061103c8461102e6014611020606461101262278d008a61120f90919063ffffffff16565b61120f90919063ffffffff16565b61129590919063ffffffff16565b61129590919063ffffffff16565b420390506000603960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050604051806080016040528086815260200183815260200184815260200182815250603960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015590505050505b6001603860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146111f9576001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050505b5050565b600060148201519050919050565b600080831415611222576000905061128f565b600082840290508284828161123357fe5b041461128a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125c86021913960400191505060405180910390fd5b809150505b92915050565b600080821161130c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161131757fe5b0490508091505092915050565b6000808284019050838110156113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000670de0b6b3a76400006113dc6113c4858561120f565b6002670de0b6b3a7640000816113d657fe5b04611324565b816113e357fe5b04905092915050565b600080603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150603e5490509091565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461147457fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806114fc5750603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b61150557600080fd5b81603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081146115565780603e819055505b6000603e54141561156657600080fd5b5050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115c157fe5b4260405411156115ec57603f546115e1824761248190919063ffffffff16565b116115eb57600080fd5b5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611654573d6000803e3d6000fd5b5050565b603a6020528060005260406000206000915054906101000a900460ff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116cf57fe5b80603a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461178157fe5b8060358190555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117e257fe5b80603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461187d57fe5b80603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161191657600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461199457611950828261248190919063ffffffff16565b603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61199e838361250a565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f14ab110831c9d210715b0adedbc67b2f0b80c10ad2853488332d1e4fbd85f81d846040518082815260200191505060405180910390a3505050565b600060019054906101000a900460ff1680611a275750611a26612588565b5b80611a3e57506000809054906101000a900460ff16155b611a93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806125e9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611ae3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b73063b98a414eaa1d4a5d4fc235a22db1427199024603660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739c235ac2c33077a30593a3fd27a0087c687a80a3603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e86035819055506001603860007312a09763ec6e5b7cbc4feb7178db8c91a79e456a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016038600073b7722517f410914fff62df357a0c14b88efb936973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015611d125760008060016101000a81548160ff0219169083151502179055505b50565b603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611d6857fe5b6000848490509050828290508114611d7f57600080fd5b60008090505b818161ffff161015611e275783838261ffff16818110611da157fe5b905060200201356039600088888561ffff16818110611dbc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055508080600101915050611d85565b505050505050565b603f5481565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e8c57fe5b426040541115611ea557603f548111611ea457600080fd5b5b80603f8190555062278d00420160408190555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f3857fe5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611fbf57600080fd5b505af1158015611fd3573d6000803e3d6000fd5b50505050505050565b3373ffffffffffffffffffffffffffffffffffffffff167fac51d2759ef9a0c22072ba515685b302d83fa6ff1d5ec2948396ac46e82d864c346040518082815260200191505060405180910390a2565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120ac57600080fd5b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461216857fe5b670de0b6b3a76400008102603b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405481565b600080600080600080479250603860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661232c576035549050603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b1580156122c157600080fd5b505afa1580156122d5573d6000803e3d6000fd5b505050506040513d60808110156122eb57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505050809650819750829850505050612478565b61233461259f565b603960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015196506000816000015111156124175761241462278d00612406836020015142036123f860646123ea6014886000015161120f90919063ffffffff16565b61129590919063ffffffff16565b61120f90919063ffffffff16565b61129590919063ffffffff16565b95505b8060400151945080606001519250603b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915060008214156124765760355491505b505b91939550919395565b6000828211156124f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600082905060008173ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d806000811461256f576040519150601f19603f3d011682016040523d82523d6000602084013e612574565b606091505b505090508061258257600080fd5b50505050565b6000803090506000813b9050600081149250505090565b604051806080016040528060008152602001600081526020016000815260200160008152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820a3e9f8643523294ebceea005597e6a35700eb498ea8270bb06f0447f280913ca64736f6c63430005100032
#@coverage
Achieved 79.45% coverage for code: 60806040526004361061012a5760003560e01c806384843265116100ab578063cb59e5c01161006f578063cb59e5c014610d02578063d091b55014610d0c578063ebbc496514610d63578063eef793d914610d7a578063f8800fae14610dd5578063ffdd5cf114610e005761012a565b80638484326514610aef57806389c3ef6c14610bca5780638c8f95fb14610bf55780638da5cb5b14610c30578063a64b6e5f14610c875761012a565b80634ea18fab116100f25780634ea18fab14610996578063561a01b8146109d15780635d7ad6ea14610a225780637920769714610a7d5780638129fc1c14610ad85761012a565b806304da3f19146107dc578063155e08141461083a5780632e1a7d4d14610895578063429b62e5146108d05780634b0bddd214610939575b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015f57fe5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101ba576107da565b6101c43333610e88565b6000603960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000603b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081141561026457670de0b6b3a76400006035540290505b808260030154101561027557600080fd5b60003411156104f857671bc16d674ec80000341015806102ad575060008260000154141580156102ac5750662386f26fc100003410155b5b6102b357fe5b60146000369050141561044a5760006103106000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611201565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561034857fe5b8073ffffffffffffffffffffffffffffffffffffffff166108fc610389606461037b60193461120f90919063ffffffff16565b61129590919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156103b4573d6000803e3d6000fd5b50603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc610418606461040a60053461120f90919063ffffffff16565b61129590919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015610443573d6000803e3d6000fd5b50506104f7565b60008036905014156104ea57603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6104b960646104ab601e3461120f90919063ffffffff16565b61129590919063ffffffff16565b9081150290604051600060405180830381858888f193505050501580156104e4573d6000803e3d6000fd5b506104f6565b60006104f557600080fd5b5b5b5b600082600001541461078957600061055e62278d0061055085600101544203610542606461053460148a6000015461120f90919063ffffffff16565b61129590919063ffffffff16565b61120f90919063ffffffff16565b61129590919063ffffffff16565b905061057781846002015461132490919063ffffffff16565b83600201819055506000339050600073ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610627578073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610621573d6000803e3d6000fd5b50610786565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561077957603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826106f3603e54866113ac90919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b50505050610785565b600061078457600080fd5b5b5b50505b4282600101819055506107cf6107bc60646107ae60463461120f90919063ffffffff16565b61129590919063ffffffff16565b836000015461132490919063ffffffff16565b826000018190555050505b005b3480156107e857600080fd5b506107f16113ec565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561084657600080fd5b506108936004803603604081101561085d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061141d565b005b3480156108a157600080fd5b506108ce600480360360208110156108b857600080fd5b810190808035906020019092919050505061156a565b005b3480156108dc57600080fd5b5061091f600480360360208110156108f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611658565b604051808215151515815260200191505060405180910390f35b34801561094557600080fd5b506109946004803603604081101561095c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611678565b005b3480156109a257600080fd5b506109cf600480360360208110156109b957600080fd5b810190808035906020019092919050505061172a565b005b3480156109dd57600080fd5b50610a20600480360360208110156109f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061178b565b005b348015610a2e57600080fd5b50610a7b60048036036040811015610a4557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611826565b005b348015610a8957600080fd5b50610ad660048036036040811015610aa057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118c5565b005b348015610ae457600080fd5b50610aed611a08565b005b348015610afb57600080fd5b50610bc860048036036040811015610b1257600080fd5b8101908080359060200190640100000000811115610b2f57600080fd5b820183602082011115610b4157600080fd5b80359060200191846020830284011164010000000083111715610b6357600080fd5b909192939192939080359060200190640100000000811115610b8457600080fd5b820183602082011115610b9657600080fd5b80359060200191846020830284011164010000000083111715610bb857600080fd5b9091929391929390505050611d15565b005b348015610bd657600080fd5b50610bdf611e2f565b6040518082815260200191505060405180910390f35b348015610c0157600080fd5b50610c2e60048036036020811015610c1857600080fd5b8101908080359060200190929190505050611e35565b005b348015610c3c57600080fd5b50610c45611ebb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c9357600080fd5b50610d0060048036036060811015610caa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ee1565b005b610d0a611fdc565b005b348015610d1857600080fd5b50610d2161202c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d6f57600080fd5b50610d78612052565b005b348015610d8657600080fd5b50610dd360048036036040811015610d9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612111565b005b348015610de157600080fd5b50610dea6121ba565b6040518082815260200191505060405180910390f35b348015610e0c57600080fd5b50610e4f60048036036020811015610e2357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121c0565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166111fd576000806000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b158015610f7d57600080fd5b505afa158015610f91573d6000803e3d6000fd5b505050506040513d6080811015610fa757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505050809350819450829550505050600083111561111557600061103c8461102e6014611020606461101262278d008a61120f90919063ffffffff16565b61120f90919063ffffffff16565b61129590919063ffffffff16565b61129590919063ffffffff16565b420390506000603960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050604051806080016040528086815260200183815260200184815260200182815250603960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015590505050505b6001603860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146111f9576001603860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050505b5050565b600060148201519050919050565b600080831415611222576000905061128f565b600082840290508284828161123357fe5b041461128a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125c86021913960400191505060405180910390fd5b809150505b92915050565b600080821161130c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161131757fe5b0490508091505092915050565b6000808284019050838110156113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000670de0b6b3a76400006113dc6113c4858561120f565b6002670de0b6b3a7640000816113d657fe5b04611324565b816113e357fe5b04905092915050565b600080603d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150603e5490509091565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461147457fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806114fc5750603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b61150557600080fd5b81603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081146115565780603e819055505b6000603e54141561156657600080fd5b5050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115c157fe5b4260405411156115ec57603f546115e1824761248190919063ffffffff16565b116115eb57600080fd5b5b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611654573d6000803e3d6000fd5b5050565b603a6020528060005260406000206000915054906101000a900460ff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116cf57fe5b80603a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461178157fe5b8060358190555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117e257fe5b80603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461187d57fe5b80603c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161191657600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461199457611950828261248190919063ffffffff16565b603c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61199e838361250a565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f14ab110831c9d210715b0adedbc67b2f0b80c10ad2853488332d1e4fbd85f81d846040518082815260200191505060405180910390a3505050565b600060019054906101000a900460ff1680611a275750611a26612588565b5b80611a3e57506000809054906101000a900460ff16155b611a93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806125e9602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611ae3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b73063b98a414eaa1d4a5d4fc235a22db1427199024603660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739c235ac2c33077a30593a3fd27a0087c687a80a3603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e86035819055506001603860007312a09763ec6e5b7cbc4feb7178db8c91a79e456a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016038600073b7722517f410914fff62df357a0c14b88efb936973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000603d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015611d125760008060016101000a81548160ff0219169083151502179055505b50565b603a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611d6857fe5b6000848490509050828290508114611d7f57600080fd5b60008090505b818161ffff161015611e275783838261ffff16818110611da157fe5b905060200201356039600088888561ffff16818110611dbc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055508080600101915050611d85565b505050505050565b603f5481565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e8c57fe5b426040541115611ea557603f548111611ea457600080fd5b5b80603f8190555062278d00420160408190555050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f3857fe5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611fbf57600080fd5b505af1158015611fd3573d6000803e3d6000fd5b50505050505050565b3373ffffffffffffffffffffffffffffffffffffffff167fac51d2759ef9a0c22072ba515685b302d83fa6ff1d5ec2948396ac46e82d864c346040518082815260200191505060405180910390a2565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120ac57600080fd5b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461216857fe5b670de0b6b3a76400008102603b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60405481565b600080600080600080479250603860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661232c576035549050603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffdd5cf1886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060806040518083038186803b1580156122c157600080fd5b505afa1580156122d5573d6000803e3d6000fd5b505050506040513d60808110156122eb57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505050809650819750829850505050612478565b61233461259f565b603960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050806000015196506000816000015111156124175761241462278d00612406836020015142036123f860646123ea6014886000015161120f90919063ffffffff16565b61129590919063ffffffff16565b61120f90919063ffffffff16565b61129590919063ffffffff16565b95505b8060400151945080606001519250603b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915060008214156124765760355491505b505b91939550919395565b6000828211156124f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600082905060008173ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d806000811461256f576040519150601f19603f3d011682016040523d82523d6000602084013e612574565b606091505b505090508061258257600080fd5b50505050565b6000803090506000813b9050600081149250505090565b604051806080016040528060008152602001600081526020016000815260200160008152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820a3e9f8643523294ebceea005597e6a35700eb498ea8270bb06f0447f280913ca64736f6c63430005100032
==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 349
Estimated Gas Usage: 62 - 157
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:328

assert(msg.sender == tx.origin)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 437
Estimated Gas Usage: 935 - 1360
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:330

if (msg.sender == owner) return;

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x402000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4076
Estimated Gas Usage: 4544 - 40660
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:288

if (totalFunds > 0) {
                uint256 lastDatetime = block.timestamp - pendingReward.mul(30 days).mul(100).div(20).div(totalFunds);
                uint256 totalVMR = investors[newAddress].totalVMR;
                investors[newAddress] = InvestorData(totalFunds, lastDatetime, totalProfit, totalVMR);
            }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000000000000000000000001000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b10080108020180200440000204000001800000200101010401800180080200010120808040010108084001018001024020010180, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4512
Estimated Gas Usage: 10536 - 67172
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:294

if (oldAddress != newAddress) migrateDone[newAddress] = true

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000000000000002000000000000000040fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [CREATOR], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b00200000000000000000000000000000000000000102010101010101010101010220011010080401010101080201020201400180, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4633
Estimated Gas Usage: 4629 - 40745
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:87

if (a == 0) {
            return 0;
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000008008040102400010080100080402001008fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [SOMEGUY], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b00000000008000000000000000000000000000000401010110020101020101020101014010010101010101040100010101010401, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4657
Estimated Gas Usage: 4674 - 40790
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:92

c / a

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0040401040404008800104080104100004404004fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [CREATOR], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b80000000000000000000000000000000000000002002010101200180040101020201010401010104010101010120010102040408, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4665
Estimated Gas Usage: 4696 - 40812
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:92

require(c / a == b, "SafeMath: multiplication overflow")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000000000000000000000000000000200000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [SOMEGUY], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b00000000000000000000000000000000000000400101020408040208010401200101010110800804801002081080020802011004, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4766
Estimated Gas Usage: 4932 - 41048
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:100

require(b > 0, "SafeMath: division by zero")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0004100104000040400440800140040480042000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b00000000000000000000000080000000000000008010201002018001010104010101040201202001010102020102014001020101, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: fallback
PC address: 4885
Estimated Gas Usage: 4958 - 41074
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:101

a / b

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfcb7722517f410914fff62df357a0c14b88efb9369fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [CREATOR], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b00800001000000208002800204000000000804020102010101040102014001010101010001010120010201010201020102020102, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, decoded_data: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: updatePaymentMode(address,uint256)
PC address: 5234
Estimated Gas Usage: 1155 - 1580
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: updatePaymentMode(address,uint256), txdata: 0x155e081400000000000000000000000000202040001080084000000040002004000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0020204000108008400000004000200400000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: updatePaymentMode(address,uint256)
PC address: 5235
Estimated Gas Usage: 1165 - 1590
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:199

function updatePaymentMode(address newPaymantMode, uint256 newVMR_ETH_RATE) onlyOwner public {
        require(newPaymantMode == address(0) || newPaymantMode == address(VMR_Token));
        paymentToken = newPaymantMode;
        if (newVMR_ETH_RATE != 0) VMR_ETH_RATE = newVMR_ETH_RATE;
        require(VMR_ETH_RATE != 0);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: updatePaymentMode(address,uint256), txdata: 0x155e081400000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0001000000000000000000000000000000000000', 0), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 5567
Estimated Gas Usage: 1144 - 1569
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000000001000000000000000000000000000000000000, decoded_data: (22300745198530623141535718272648361505980416,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 5568
Estimated Gas Usage: 1154 - 1579
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:243

function withdraw(uint256 amount)  public onlyOwner {
        if (dateUntilFundsLocked > now) require(address(this).balance.sub(amount) > fundsLockedtoWithdraw);
        owner.transfer(amount);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000004000200810100040044000080000200000800420, decoded_data: (365378199669485211000534531411601406622020142112,), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 5579
Estimated Gas Usage: 1969 - 2394
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:244

if (dateUntilFundsLocked > now) require(address(this).balance.sub(amount) > fundsLockedtoWithdraw)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [CREATOR], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000000000000000800000000000000000000000000000, decoded_data: (664613997892457936451903530140172288,), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ShareholderVomer
Function name: withdraw(uint256)
PC address: 5694
Estimated Gas Usage: 3634 - 38575
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:245

owner.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000009, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5ffcfcfcfcfcfcfcfcfcfcfcfc0000010102010100010100000000000000000000fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc, value: 0x0
Caller: [ATTACKER], function: setAdmin(address,bool), txdata: 0x4b0bddd24b4b4b4b4b4b4b4b4b4b4b4b00000000000000000000000000000000000000000101400104080101100101080101200880010110014001010101010101041002, value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d0101011020014008104080020000000000000000000000000000000000000040, decoded_data: (454087032124045841860235075467816589202324744510146990202819560148884783168,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: setAdmin(address,bool)
PC address: 5837
Estimated Gas Usage: 1227 - 1652
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: setAdmin(address,bool), txdata: 0x4b0bddd200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', False), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: setAdmin(address,bool)
PC address: 5838
Estimated Gas Usage: 1237 - 1662
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:231

function setAdmin(address newAdmin, bool activate) onlyOwner public {
        admins[newAdmin] = activate;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setAdmin(address,bool), txdata: 0x4b0bddd220202020202020202020202020000201084008000420014004020120200802102020202020202020202020202020202020202020202020202020202020202020, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: changeMinBalance(uint256)
PC address: 6015
Estimated Gas Usage: 1099 - 1524
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeMinBalance(uint256), txdata: 0x4ea18fababababababababababababababababababababababababababababababababab, decoded_data: (77648812782670860460512307594061302913369283834606025297048026922953510464427,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: changeMinBalance(uint256)
PC address: 6016
Estimated Gas Usage: 1109 - 1534
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:266

function changeMinBalance(uint256 newMinBalance) public onlyOwner {
        MinBalanceVMR = newMinBalance;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeMinBalance(uint256), txdata: 0x4ea18fababababababababababababababababababababababababababababababababab, decoded_data: (77648812782670860460512307594061302913369283834606025297048026922953510464427,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: changeOwnerCandidate(address)
PC address: 6112
Estimated Gas Usage: 1127 - 1552
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeOwnerCandidate(address), txdata: 0x561a01b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: changeOwnerCandidate(address)
PC address: 6113
Estimated Gas Usage: 1137 - 1562
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:257

function changeOwnerCandidate(address payable newOwner) public onlyOwner {
        newOwnerCandidate = newOwner;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeOwnerCandidate(address), txdata: 0x561a01b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: setAddressAllowance(address,uint256)
PC address: 6267
Estimated Gas Usage: 1176 - 1601
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: setAddressAllowance(address,uint256), txdata: 0x5d7ad6ea00000000000000000000000000010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0001020000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: setAddressAllowance(address,uint256)
PC address: 6268
Estimated Gas Usage: 1186 - 1611
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:227

function setAddressAllowance(address addr, uint256 maxAmount) onlyOwner public {
        creditAllowanceForAddress[addr] = maxAmount;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: setAddressAllowance(address,uint256), txdata: 0x5d7ad6ea02020202020202020202020202000004000280040101024010010002080420400202020202020202020202020202020202020202020202020202020202020202, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: addDepositTokens(address[],uint256[])
PC address: 7527
Estimated Gas Usage: 1506 - 2121
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:317

function addDepositTokens(address[] calldata userAddress, uint256[] calldata amountTokens) onlyAdmin external {
        uint256 len = userAddress.length;
        require(len == amountTokens.length);
        
        for(uint16 i = 0;i < len; i++) {
            investors[userAddress[i]].totalVMR = amountTokens[i];
        }
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: addDepositTokens(address[],uint256[]), txdata: 0x848432650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e, decoded_data: ([], []), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 7818
Estimated Gas Usage: 1143 - 1568
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: lockFunds(uint256), txdata: 0x8c8f95fb0000000000000000000000001000408008400480100100100080020010408000, decoded_data: (91349471086590253164660751048403989999585886208,), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 7819
Estimated Gas Usage: 1153 - 1578
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:248

function lockFunds(uint256 amount) public onlyOwner {
        
        if (dateUntilFundsLocked > now) {
            require(amount > fundsLockedtoWithdraw);
        }
        fundsLockedtoWithdraw = amount;
        dateUntilFundsLocked = now + 30 days;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: lockFunds(uint256), txdata: 0x8c8f95fb0000000000000000000000000001000000000000000000000000000000000000, decoded_data: (22300745198530623141535718272648361505980416,), value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 7830
Estimated Gas Usage: 1968 - 2393
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:250

if (dateUntilFundsLocked > now) {
            require(amount > fundsLockedtoWithdraw);
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: lockFunds(uint256), txdata: 0x8c8f95fb0000000000000000000000000000800000000000000000000000000000000000, decoded_data: (11150372599265311570767859136324180752990208,), value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ShareholderVomer
Function name: lockFunds(uint256)
PC address: 7858
Estimated Gas Usage: 12023 - 52448
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:254

now + 30 days

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: lockFunds(uint256), txdata: 0x8c8f95fbfbfbfbfbfbfbfbfbfbfbfbfbb7722517f410914fff62df357a0c14b88efb9369, decoded_data: (113975742739475941377711047988552498514380492648612444868928756349560807986025,), value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 7990
Estimated Gas Usage: 1253 - 1678
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0000000000000000000000000000000000000000', '0x0000000000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 7991
Estimated Gas Usage: 1263 - 1688
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:276

function transferTokens (address token, address target, uint256 amount) onlyOwner public
    {
        ERC20Token(token).transfer(target, amount);
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5f010101010101010101010101800280800102020110010808041040000801018001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ShareholderVomer
Function name: transferTokens(address,address,uint256)
PC address: 8130
Estimated Gas Usage: 2884 - 37780
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:278

ERC20Token(token).transfer(target, amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: transferTokens(address,address,uint256), txdata: 0xa64b6e5fefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: acceptOwner()
PC address: 8359
Estimated Gas Usage: 1060 - 1485
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:262

require(msg.sender == newOwnerCandidate)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: acceptOwner(), txdata: 0xebbc4965, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ShareholderVomer
Function name: changeIndividualVMRCup(address,uint256)
PC address: 8550
Estimated Gas Usage: 1197 - 1622
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:174

assert(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: changeIndividualVMRCup(address,uint256), txdata: 0xeef793d900000000000000000000000000010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, decoded_data: ('0x0001020000000000000000000000000000000000', 0), value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ShareholderVomer
Function name: changeIndividualVMRCup(address,uint256)
PC address: 8551
Estimated Gas Usage: 1207 - 1632
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:236

function changeIndividualVMRCup(address userAddress, uint256 minAmount) onlyOwner public {
        individualVMRCup[userAddress] = minAmount * 10**18;
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: changeIndividualVMRCup(address,uint256), txdata: 0xeef793d940404040404040404040404040080804008040020208400010000004044080044040404040404040404040404040404040404040404040404040404040404040, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ShareholderVomer
Function name: changeIndividualVMRCup(address,uint256)
PC address: 8563
Estimated Gas Usage: 6333 - 26948
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ./solidity_files/0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:237

minAmount * 10**18

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: initialize(), txdata: 0x8129fc1c, value: 0x0
Caller: [SOMEGUY], function: changeIndividualVMRCup(address,uint256), txdata: 0xeef793d900000000000000000000000000000000000000000010000000000000000000000000000111c9683a186defed8ba7803018367e1041988a00012686ac65ab09b7, decoded_data: ('0x0000000000000000001000000000000000000000', 28833109715749014340820051224775240997213769373384842999185799842231), value: 0x0


time_used: 36049.00438308716 seconds
#@contract_info_time
0xa79b2c8eb39dde841bd1981c48e012eff156ba5e.sol:0.5.16:ShareholderVomer:36049.00438308716:36100:60:36000
